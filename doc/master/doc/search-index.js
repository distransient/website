var N = null;var searchIndex = {};
searchIndex["amethyst"]={"doc":"Amethyst is a free and open source game engine written in idiomatic [Rust][rs] for building video games and interactive multimedia applications. The source code is available for download on [GitHub][gh]. See the [online book][bk] for a complete guide to using Amethyst.","items":[[3,"Error","amethyst","The error type used by Amethyst.",N,N],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logger.",N,N],[13,"Off","","A level lower than all log levels.",0,N],[13,"Error","","Corresponds to the `Error` log level.",0,N],[13,"Warn","","Corresponds to the `Warn` log level.",0,N],[13,"Info","","Corresponds to the `Info` log level.",0,N],[13,"Debug","","Corresponds to the `Debug` log level.",0,N],[13,"Trace","","Corresponds to the `Trace` log level.",0,N],[3,"ApplicationBuilder","","`ApplicationBuilder` is an interface that allows for creation of an `Application` using a custom set of configuration. This is the normal way an `Application` object is created.",N,N],[12,"world","","Used by bundles to access the world directly",1,N],[3,"CoreApplication","","`CoreApplication` is the application implementation for the game engine. This is fully generic over the state type and event type.",N,N],[3,"CallbackQueue","","A simple `Callback` queue. Using the `Sender` you can get using the `send_handle` method, you can add functions modifying `World` from an asynchronous context. Those callbacks will be ran sequentially without preserving ordering. # Example `rust,ignore // First, get a `Sender` handle. let handle = world.read_resource::<CallbackQueue>().send_handle(); // Then, create your asynchronous context (Future, Callback-based library, etc..) let future = ...; // Finally, use that handle inside of the asynchronous context to run code that can affect `World`. future.on_complete(move || { handle.send(|mut world| world.create_entity().build()).expect(\"Failed to add Callback to CallbackQueue.\"); });`",N,N],[3,"GameData","","Default game data.",N,N],[3,"GameDataBuilder","","Builder for default game data",N,N],[3,"Logger","","Allows the creation of a logger with a set of custom configurations. If no custom configuration is required [`start_logger`] can be used instead.",N,N],[3,"LoggerConfig","","Logger configuration object.",N,N],[12,"stdout","","Determines whether to log to the terminal or not.",2,N],[12,"level_filter","","Sets the overarching level filter for the logger.",2,N],[12,"log_file","","If set, enables logging to file at the given path.",2,N],[12,"allow_env_override","","If set, allows the config values to be overriden via the corresponding environmental variables.",2,N],[12,"log_gfx_device_level","","Sets a different level for gfx_device_gl if Some",2,N],[3,"StateData","","State data encapsulates the data sent to all state functions from the application main loop.",N,N],[12,"world","","Main `World`",3,N],[12,"data","","User defined game data",3,N],[3,"StateMachine","","A simple stack-based state machine (pushdown automaton).",N,N],[3,"StateEventReader","","",N,N],[4,"StdoutLog","","An enum that contains options for logging to the terminal.",N,N],[13,"Off","","Disables logging to the terminal.",4,N],[13,"Plain","","Enables logging to the terminal without colored output.",4,N],[13,"Colored","","Enables logging to the terminal with colored output on supported platforms.",4,N],[4,"Trans","","Types of state transitions. T is the type of shared data between states. E is the type of events",N,N],[13,"None","","Continue as normal.",5,N],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",5,N],[13,"Push","","Pause the active state and push a new state onto the stack.",5,N],[13,"Switch","","Remove the current state on the stack and insert a different one.",5,N],[13,"Quit","","Stop and remove all states and shut down the engine.",5,N],[4,"StateEvent","","The enum holding the different types of event that can be received in a `State` in the handle_event method.",N,N],[13,"Window","","Events sent by the winit window.",6,N],[13,"Ui","","Events sent by the ui system.",6,N],[5,"start_logger","","Starts a basic logger outputting to stdout with color on supported platforms, and/or to file.",N,[[["loggerconfig"]]]],[0,"prelude","","Contains common types that can be glob-imported (`*`) for convenience.",N,N],[8,"Config","amethyst::prelude","Trait implemented by the `config!` macro.",N,N],[10,"load","","Loads a configuration structure from a file. Defaults if the file fails in any way.",7,[[["p"]],["self"]]],[10,"load_no_fallback","","Loads a configuration structure from a file.",7,[[["p"]],["result",["configerror"]]]],[10,"load_bytes","","Loads configuration structure from raw bytes.",7,N],[10,"write","","Writes a configuration structure to a file.",7,[[["self"],["p"]],["result",["configerror"]]]],[8,"SystemExt","","Extension functionality associated systems.",N,N],[10,"pausable","","Make a system pausable by tying it to a specific value of a resource.",8,[[["self"],["v"]],["pausable"]]],[8,"WithNamed","","An easy way to name an `Entity` and give it a `Named` `Component`.",N,N],[10,"named","","Adds a name to the entity being built.",9,[[["self"],["s"]],["self"]]],[8,"Builder","","A common trait for `EntityBuilder` and `LazyBuilder`, allowing either to be used. Entity is definitely alive, but the components may or may not exist before a call to `World::maintain`.",N,N],[10,"with","","Appends a component and associates it with the entity.",10,[[["self"],["c"]],["self"]]],[10,"build","","Finishes the building and returns the entity.",10,[[["self"]],["entity"]]],[3,"World","","The `World` struct contains the component storages and other resources.",N,N],[12,"res","","The resources used for this world.",11,N],[3,"ApplicationBuilder","","`ApplicationBuilder` is an interface that allows for creation of an `Application` using a custom set of configuration. This is the normal way an `Application` object is created.",N,N],[12,"world","","Used by bundles to access the world directly",1,N],[3,"CoreApplication","","`CoreApplication` is the application implementation for the game engine. This is fully generic over the state type and event type.",N,N],[3,"CallbackQueue","","A simple `Callback` queue. Using the `Sender` you can get using the `send_handle` method, you can add functions modifying `World` from an asynchronous context. Those callbacks will be ran sequentially without preserving ordering. # Example `rust,ignore // First, get a `Sender` handle. let handle = world.read_resource::<CallbackQueue>().send_handle(); // Then, create your asynchronous context (Future, Callback-based library, etc..) let future = ...; // Finally, use that handle inside of the asynchronous context to run code that can affect `World`. future.on_complete(move || { handle.send(|mut world| world.create_entity().build()).expect(\"Failed to add Callback to CallbackQueue.\"); });`",N,N],[3,"GameData","","Default game data.",N,N],[3,"GameDataBuilder","","Builder for default game data",N,N],[3,"StateData","","State data encapsulates the data sent to all state functions from the application main loop.",N,N],[12,"world","","Main `World`",3,N],[12,"data","","User defined game data",3,N],[4,"Trans","","Types of state transitions. T is the type of shared data between states. E is the type of events",N,N],[13,"None","","Continue as normal.",5,N],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",5,N],[13,"Push","","Pause the active state and push a new state onto the stack.",5,N],[13,"Switch","","Remove the current state on the stack and insert a different one.",5,N],[13,"Quit","","Stop and remove all states and shut down the engine.",5,N],[4,"StateEvent","","The enum holding the different types of event that can be received in a `State` in the handle_event method.",N,N],[13,"Window","","Events sent by the winit window.",6,N],[13,"Ui","","Events sent by the ui system.",6,N],[6,"Application","","An Application is the root object of the game engine. It binds the OS event loop, state machines, timers and other core components in a central place.",N,N],[6,"Callback","","The type of a callback. This is meant to be created from within asynchonous functions (`Future` for example). See `CallbackQueue` for more details.",N,N],[6,"EmptyTrans","","An empty `Trans`. Made to be used with `EmptyState`.",N,N],[6,"SimpleTrans","","A simple default `Trans`. Made to be used with `SimpleState`. By default it contains a `GameData` as its `StateData` and doesn't have a custom event type.",N,N],[6,"TransEvent","","Event queue to trigger state `Trans` from other places than a `State`'s methods. # Example: `rust, ignore world.write_resource::<EventChannel<TransEvent<MyGameData, StateEvent>>>().single_write(Box::new(|| Trans::Quit));`",N,N],[8,"DataInit","","Initialise trait for game data",N,N],[10,"build","","Build game data",12,[[["self"],["world"]],["t"]]],[8,"EmptyState","","An empty `State` trait. It contains no `StateData` or custom `StateEvent`.",N,N],[11,"on_start","","Executed when the game state begins.",13,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",13,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",13,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",13,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",13,[[["self"],["statedata"],["stateevent"]],["emptytrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[8,"SimpleState","","A simple `State` trait. It contains `GameData` as its `StateData` and no custom `StateEvent`.",N,N],[11,"on_start","","Executed when the game state begins.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_stop","","Executed when the game state exits.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",14,[[["self"],["statedata",["gamedata"]],["stateevent"]],["simpletrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",14,[[["self"],["statedata",["gamedata"]]],["simpletrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",14,[[["self"],["statedata"]],["simpletrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[8,"State","","A trait which defines game states that can be used by the state machine.",N,N],[11,"on_start","","Executed when the game state begins.",15,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",15,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",15,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",15,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",15,[[["self"],["statedata"],["e"]],["trans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"new","amethyst","Creates a new Application with the given initial game state. This will create and allocate all the needed resources for the event loop of the game engine. It is a shortcut for convenience if you need more control over how the engine is configured you should be using build instead.",16,[[["p"],["s"],["i"]],["result",["error"]]]],[11,"build","","Creates a new ApplicationBuilder with the given initial game state.",16,[[["p"],["s"]],["result",["applicationbuilder","error"]]]],[11,"run","","Run the gameloop until the game state indicates that the game is no longer running. This is done via the `State` returning `Trans::Quit` or `Trans::Pop` on the last state in from the stack. See full documentation on this in State documentation.",16,[[["self"]]]],[11,"new","","Creates a new ApplicationBuilder instance that wraps the initial_state. This is the more verbose way of initializing your application if you require specific configuration details to be changed away from the default.",1,[[["p"],["s"]],["result",["error"]]]],[11,"register","","Registers a component into the entity-component-system. This method takes no options other than the component type which is defined using a 'turbofish'. See the example for what this looks like.",1,[[["self"]],["self"]]],[11,"with_resource","","Adds the supplied ECS resource which can be accessed from game systems.",1,[[["self"],["r"]],["self"]]],[11,"with_source","","Register an asset store with the loader logic of the Application.",1,[[["self"],["i"],["o"]],["self"]]],[11,"with_default_source","","Registers the default asset store with the loader logic of the Application.",1,[[["self"],["o"]],["self"]]],[11,"with_frame_limit","","Sets the maximum frames per second of this game.",1,[[["self"],["frameratelimitstrategy"],["u32"]],["self"]]],[11,"with_frame_limit_config","","Sets the maximum frames per second of this game, based on the given config.",1,[[["self"],["frameratelimitconfig"]],["self"]]],[11,"with_fixed_step_length","","Sets the duration between fixed updates, defaults to one sixtieth of a second.",1,[[["self"],["duration"]],["self"]]],[11,"ignore_window_close","","Tells the resulting application window to ignore close events if ignore is true. This will make your game window unresponsive to operating system close commands. Use with caution.",1,[[["self"],["bool"]],["self"]]],[11,"build","","Build an `Application` object using the `ApplicationBuilder` as configured.",1,[[["self"],["i"]],["result",["coreapplication","error"]]]],[11,"new","","Creates a new `CallbackQueue`.",17,[[],["self"]]],[11,"send_handle","","Creates a new handle that allows sending `Callback`s to the `CallbackQueue`.",17,[[["self"]],["sender",["callback"]]]],[11,"new","","Create new game data",18,[[["dispatcher"]],["self"]]],[11,"update","","Update game data",18,[[["self"],["world"]]]],[11,"new","","Create new builder",19,[[],["self"]]],[11,"with_barrier","","Inserts a barrier which assures that all systems added before the barrier are executed before the ones after this barrier.",19,[[["self"]],["self"]]],[11,"with","","Adds a given system.",19,N],[11,"with_thread_local","","Add a given thread-local system.",19,[[["self"],["s"]],["self"]]],[11,"with_bundle","","Add a given ECS bundle to the game loop.",19,[[["self"],["b"]],["result",["error"]]]],[11,"with_basic_renderer","","Create a basic renderer with a single given `Pass`, and optional support for the `DrawUi` pass.",19,[[["self"],["a"],["p"],["bool"]],["result",["error"]]]],[11,"from_config","","Create a new Logger from [`LoggerConfig`]",20,[[["loggerconfig"]],["self"]]],[11,"level_for","","Set individual log levels for modules.",20,[[["self"],["t"],["levelfilter"]],["self"]]],[11,"start","","Starts [`Logger`] by consuming it.",20,[[["self"]]]],[11,"on_start","amethyst::prelude","Executed when the game state begins.",15,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",15,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",15,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",15,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",15,[[["self"],["statedata"],["e"]],["trans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"on_start","","Executed when the game state begins.",13,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",13,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",13,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",13,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",13,[[["self"],["statedata"],["stateevent"]],["emptytrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[11,"on_start","","Executed when the game state begins.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_stop","","Executed when the game state exits.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",14,[[["self"],["statedata",["gamedata"]],["stateevent"]],["simpletrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",14,[[["self"],["statedata",["gamedata"]]],["simpletrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",14,[[["self"],["statedata"]],["simpletrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"new","amethyst","Create a new state data",3,[[["world"],["t"]],["self"]]],[11,"new","","Creates a new state machine with the given initial state.",21,[[["s"]],["statemachine"]]],[11,"is_running","","Checks whether the state machine is running.",21,[[["self"]],["bool"]]],[11,"start","","Initializes the state machine.",21,[[["self"],["statedata"]],["result",["stateerror"]]]],[11,"handle_event","","Passes a single event to the active state to handle.",21,[[["self"],["statedata"],["e"]]]],[11,"fixed_update","","Updates the currently active state at a steady, fixed interval.",21,[[["self"],["statedata"]]]],[11,"update","","Updates the currently active state immediately.",21,[[["self"],["statedata"]]]],[11,"transition","","Performs a state transition. Usually called by update or fixed_update by the user's defined `State`. This method can also be called when there are one or multiple `Trans` stored in the global `EventChannel<TransEvent<T, E>>`. Such `Trans` will be passed to this method sequentially in the order of insertion.",21,[[["self"],["trans"],["statedata"]]]],[6,"Application","","An Application is the root object of the game engine. It binds the OS event loop, state machines, timers and other core components in a central place.",N,N],[6,"Callback","","The type of a callback. This is meant to be created from within asynchonous functions (`Future` for example). See `CallbackQueue` for more details.",N,N],[6,"EmptyTrans","","An empty `Trans`. Made to be used with `EmptyState`.",N,N],[6,"SimpleTrans","","A simple default `Trans`. Made to be used with `SimpleState`. By default it contains a `GameData` as its `StateData` and doesn't have a custom event type.",N,N],[6,"TransEvent","","Event queue to trigger state `Trans` from other places than a `State`'s methods. # Example: `rust, ignore world.write_resource::<EventChannel<TransEvent<MyGameData, StateEvent>>>().single_write(Box::new(|| Trans::Quit));`",N,N],[6,"Result","","Convenience alias for use in main functions that uses Amethyst.",N,N],[8,"DataInit","","Initialise trait for game data",N,N],[10,"build","","Build game data",12,[[["self"],["world"]],["t"]]],[8,"EmptyState","","An empty `State` trait. It contains no `StateData` or custom `StateEvent`.",N,N],[11,"on_start","amethyst::prelude","Executed when the game state begins.",13,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",13,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",13,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",13,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",13,[[["self"],["statedata"],["stateevent"]],["emptytrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",13,[[["self"],["statedata"]],["emptytrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",13,[[["self"],["statedata"]]]],[8,"SimpleState","amethyst","A simple `State` trait. It contains `GameData` as its `StateData` and no custom `StateEvent`.",N,N],[11,"on_start","amethyst::prelude","Executed when the game state begins.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_stop","","Executed when the game state exits.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",14,[[["self"],["statedata",["gamedata"]],["stateevent"]],["simpletrans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",14,[[["self"],["statedata",["gamedata"]]],["simpletrans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",14,[[["self"],["statedata"]],["simpletrans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",14,[[["self"],["statedata",["gamedata"]]]]],[8,"State","amethyst","A trait which defines game states that can be used by the state machine.",N,N],[11,"on_start","amethyst::prelude","Executed when the game state begins.",15,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",15,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",15,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state once again.",15,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",15,[[["self"],["statedata"],["e"]],["trans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), if this is the active state.",15,[[["self"],["statedata"]],["trans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",15,[[["self"],["statedata"]]]],[11,"into","amethyst","",22,[[["self"]],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_default","","",17,[[],["result",["string"]]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_default","","",19,[[],["result",["string"]]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_default","","",2,[[],["result",["string"]]]],[11,"load","","",2,[[["p"]],["t"]]],[11,"load_no_fallback","","",2,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",2,N],[11,"write","","",2,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_default","","",23,[[],["result",["string"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","amethyst::prelude","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"from","amethyst","",22,[[["t"]],["error"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"borrow","amethyst::prelude","",11,[[["self"]],["resources"]]],[11,"default","","",11,[[],["world"]]],[11,"hash","amethyst","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",0,[[["str"]],["result",["levelfilter"]]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"clone","","",0,[[["self"]],["levelfilter"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",0,[[["self"],["levelfilter"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"deserialize","","",0,[[["d"]],["result",["levelfilter"]]]],[11,"serialize","","",0,[[["self"],["s"]],["result"]]],[11,"build","","",19,[[["self"],["world"]],["gamedata"]]],[11,"default","","",17,[[],["self"]]],[11,"default","","",19,[[],["self"]]],[11,"default","","",2,[[],["loggerconfig"]]],[11,"default","","",23,[[],["stateeventreader"]]],[11,"eq","","",4,[[["self"],["stdoutlog"]],["bool"]]],[11,"clone","","",4,[[["self"]],["stdoutlog"]]],[11,"clone","","",2,[[["self"]],["loggerconfig"]]],[11,"clone","","",6,[[["self"]],["stateevent"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"read","","",23,N],[11,"setup","","",23,[[["self"],["resources"]]]],[11,"new","","Default constructor for our error types.",22,[[["e"]],["error"]]],[11,"with_source","","Update the source of an error.",22,[[["self"],["s"]],["error"]]],[11,"from_string","","Construct a new error from a string.",22,[[["m"]],["error"]]],[11,"backtrace","","Get backtrace.",22,[[["self"]],["option",["backtrace"]]]],[11,"source","","Get the source of the error.",22,[[["self"]],["option",["error"]]]],[11,"causes","","Iterate over all causes, including this one.",22,[[["self"]],["causes"]]],[11,"as_error","","Access the internal `std::error::Error` as a trait.",22,[[["self"]],["error"]]],[11,"max","","Returns the most verbose logging level filter.",0,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",0,[[["self"]],["option",["level"]]]],[11,"new","amethyst::prelude","Creates a new empty `World`.",11,[[],["world"]]],[11,"register","","Registers a new component, adding the component storage.",11,N],[11,"register_with_storage","","Registers a new component with a given storage.",11,N],[11,"system_data","","Gets `SystemData` `T` from the `World`.",11,[[["self"]],["t"]]],[11,"setup","","Sets up system data `T` for fetching afterwards.",11,N],[11,"exec","","Executes `f` once, right now with the specified system data.",11,[[["self"],["f"]],["r"]]],[11,"add_resource","","Adds a resource to the world.",11,N],[11,"read_storage","","Fetches a component's storage for reading.",11,[[["self"]],["storage",["fetch"]]]],[11,"write_storage","","Fetches a component's storage for writing.",11,[[["self"]],["storage",["fetchmut"]]]],[11,"read_resource","","Fetches a resource for reading.",11,[[["self"]],["fetch"]]],[11,"write_resource","","Fetches a resource for writing.",11,[[["self"]],["fetchmut"]]],[11,"entities","","Convenience method for fetching entities.",11,[[["self"]],["read",["entitiesres","defaultprovider"]]]],[11,"create_entity","","Allows building an entity with its components.",11,[[["self"]],["entitybuilder"]]],[11,"create_entity_unchecked","","Allows building an entity with its components.",11,[[["self"]],["entitybuilder"]]],[11,"create_iter","","Returns an iterator for entity creation. This makes it easy to create a whole collection of them.",11,[[["self"]],["createiter"]]],[11,"delete_entity","","Deletes an entity and its components.",11,[[["self"],["entity"]],["result",["wronggeneration"]]]],[11,"delete_entities","","Deletes the specified entities and their components.",11,N],[11,"delete_all","","Deletes all entities and their components.",11,N],[11,"is_alive","","Checks if an entity is alive. Please note that atomically created or deleted entities (the ones created / deleted with the `Entities` struct) are not handled by this method. Therefore, you should have called `maintain()` before using this method.",11,[[["self"],["entity"]],["bool"]]],[11,"maintain","","Merges in the appendix, recording all the dynamically created and deleted entities into the persistent generations vector. Also removes all the abandoned components.",11,N]],"paths":[[4,"LogLevelFilter"],[3,"ApplicationBuilder"],[3,"LoggerConfig"],[3,"StateData"],[4,"StdoutLog"],[4,"Trans"],[4,"StateEvent"],[8,"Config"],[8,"SystemExt"],[8,"WithNamed"],[8,"Builder"],[3,"World"],[8,"DataInit"],[8,"EmptyState"],[8,"SimpleState"],[8,"State"],[3,"CoreApplication"],[3,"CallbackQueue"],[3,"GameData"],[3,"GameDataBuilder"],[3,"Logger"],[3,"StateMachine"],[3,"Error"],[3,"StateEventReader"]]};
searchIndex["amethyst_animation"]={"doc":"Provides computer graphics animation functionality.","items":[[4,"InterpolationFunction","amethyst_animation","Supported interpolation functions",N,N],[13,"Linear","","Linear interpolation",0,N],[13,"SphericalLinear","","Spherical linear interpolation",0,N],[13,"QuasiSphericalLinear","","Quasi spherical linear interpolation",0,N],[13,"Step","","Step interpolation",0,N],[13,"CatmullRomSpline","","Catmull-Rom spline interpolation",0,N],[13,"CubicSpline","","Cubic Hermite spline interpolation",0,N],[13,"Function","","Generic function",0,N],[8,"InterpolationPrimitive","","Interpolation primitive, defines basic arithmetic needed for interpolation.",N,N],[10,"add","","",1,[[["self"],["self"]],["self"]]],[10,"sub","","",1,[[["self"],["self"]],["self"]]],[10,"mul","","",1,[[["self"],["f32"]],["self"]]],[10,"dot","","",1,[[["self"],["self"]],["f32"]]],[10,"magnitude2","","",1,[[["self"]],["f32"]]],[11,"magnitude","","",1,[[["self"]],["f32"]]],[11,"normalize","","",1,[[["self"]],["self"]]],[3,"AnimationBundle","","Bundle for a complete animation setup including sampler interpolation and animation control.",N,N],[3,"SamplingBundle","","Bundle for only the sampler interpolation.",N,N],[3,"VertexSkinningBundle","","Bundle for vertex skinning",N,N],[3,"AnimatablePrefab","","`PrefabData` for full animation support",N,N],[12,"animation_set","","Place an `AnimationSet` on the `Entity`",2,N],[12,"hierarchy","","Place an `AnimationHierarchy` on the `Entity`",2,N],[12,"rest_state","","Place a `RestState` on the `Entity`",2,N],[3,"AnimationHierarchyPrefab","","`PrefabData` for loading `AnimationHierarchy`.",N,N],[12,"nodes","","A vec of the node index and the entity index.",3,N],[3,"AnimationPrefab","","`PrefabData` for loading a single `Animation`",N,N],[12,"samplers","","All samplers in the `Animation`",4,N],[3,"AnimationSetPrefab","","`PrefabData` for loading `Animation`s as part of an `AnimationSet`.",N,N],[12,"animations","","Pairs of `Id` and `Animation`",5,N],[3,"Animation","","Defines a single animation.",N,N],[12,"nodes","","node index -> sampler handle",6,N],[3,"AnimationControl","","Controls the state of a single running animation on a specific component type",N,N],[12,"animation","","Animation handle",7,N],[12,"id","","Id, a value of zero means this has not been initialised yet (this is done by the control system)",7,N],[12,"end","","What to do when animation ends",7,N],[12,"state","","State of animation",7,N],[12,"command","","Animation command",7,N],[12,"rate_multiplier","","Control the rate of animation, default is 1.0",7,N],[3,"AnimationControlSet","","Contains all currently running animations for an entity.",N,N],[12,"animations","","The animation set.",8,N],[3,"AnimationHierarchy","","Defines the hierarchy of nodes that a single animation can control. Attached to the root entity that an animation can be defined for. Only required for animations which target more than a single node or entity.",N,N],[12,"nodes","","A mapping between indices and entities",9,N],[3,"AnimationSet","","Attaches to an entity that have animations, with links to all animations that can be run on the entity. Is not used directly by the animation systems, provided for convenience.",N,N],[12,"animations","","The mapping between `I` and the animation handles.",10,N],[3,"RestState","","Define the rest state for a component on an entity",N,N],[3,"Sampler","","Sampler defines a single animation for a single channel on a single component",N,N],[12,"input","","Time of key frames",11,N],[12,"output","","Actual output data to interpolate",11,N],[12,"function","","How interpolation should be done",11,N],[3,"SamplerControl","","Control a single active sampler",N,N],[12,"control_id","","Id of the animation control this entry belongs to",12,N],[12,"channel","","Channel",12,N],[12,"blend_weight","","Blend weight",12,N],[12,"sampler","","Sampler",12,N],[12,"state","","State of sampling",12,N],[12,"end","","What to do when sampler ends",12,N],[12,"after","","What the transform should return to after end",12,N],[12,"rate_multiplier","","Control the rate of animation, default is 1.0",12,N],[3,"SamplerControlSet","","Sampler control set, containing a set of sampler controllers for a single component.",N,N],[12,"samplers","","The samplers in this set.",13,N],[3,"Joint","","Joint, attach to an entity with a `Transform`",N,N],[12,"skins","","The skins attached to this joint.",14,N],[3,"JointPrefab","","`PrefabData` for loading `Joint`s",N,N],[12,"skins","","Index of the `Prefab` `Entity` where the `Skin` is placed.",15,N],[3,"Skin","","Skin, attach to the root entity in the mesh hierarchy",N,N],[12,"joints","","Joint entities for the skin",16,N],[12,"meshes","","Mesh entities that use the skin",16,N],[12,"bind_shape_matrix","","Bind shape matrix",16,N],[12,"inverse_bind_matrices","","Bring the mesh into the joints local coordinate system",16,N],[12,"joint_matrices","","Scratch area holding the current joint matrices",16,N],[3,"SkinPrefab","","`PrefabData` for loading `Skin`s",N,N],[12,"joints","","Indices of `Entity`s in the `Prefab` which have `Joint`s belonging to this `Skin`",17,N],[12,"bind_shape_matrix","","The bind shape matrix of the `Skin`",17,N],[12,"meshes","","Indices of the `Entity`s in the `Prefab` which have `Mesh`s using this `Skin`",17,N],[12,"inverse_bind_matrices","","Inverse bind matrices of the `Joint`s",17,N],[3,"SkinnablePrefab","","`PrefabData` for full skinning support",N,N],[12,"skin","","Place `Skin` on the `Entity`",18,N],[12,"joint","","Place `Joint` on the `Entity`",18,N],[12,"joint_transforms","","Place `JointTransforms` on the `Entity`",18,N],[3,"VertexSkinningSystem","","System for performing vertex skinning.",N,N],[3,"AnimationControlSystem","","System for setting up animations, should run before `SamplerInterpolationSystem`.",N,N],[3,"SamplerInterpolationSystem","","System for interpolating active samplers.",N,N],[4,"MaterialChannel","","Channels that are animatable on `Material`",N,N],[13,"AlbedoTexture","","Animating the texture used for the albedo",19,N],[13,"AlbedoOffset","","Animating the \"window\" used to render the albedo.",19,N],[13,"EmissionTexture","","Animating the texture used for the emission.",19,N],[13,"EmissionOffset","","Animating the \"window\" used to render the emission.",19,N],[13,"NormalTexture","","Animating the texture used for the normal",19,N],[13,"NormalOffset","","Animating the \"window\" used to render the normal.",19,N],[13,"MetallicTexture","","Animating the texture used for the metallic",19,N],[13,"MetallicOffset","","Animating the \"window\" used to render the metallic.",19,N],[13,"RoughnessTexture","","Animating the texture used for the roughness",19,N],[13,"RoughnessOffset","","Animating the \"window\" used to render the roughness.",19,N],[13,"AmbientOcclusionTexture","","Animating the texture used for the ambient occlusion",19,N],[13,"AmbientOcclusionOffset","","Animating the \"window\" used to render the ambient occlusion.",19,N],[13,"CaveatTexture","","Animating the texture used for the caveat",19,N],[13,"CaveatOffset","","Animating the \"window\" used to render the caveat.",19,N],[4,"MaterialPrimitive","","Sampler primitive for Material animations Note that material can only ever be animated with `Step`, or a panic will occur.",N,N],[13,"Texture","","Dynamically altering the texture rendered",20,N],[13,"Offset","","Dynamically altering the section of the texture rendered.",20,N],[4,"AnimationCommand","","Animation command",N,N],[13,"Start","","Start the animation, or unpause if it's paused",21,N],[13,"Step","","Step the animation forward/backward (move to the next/previous input value in sequence)",21,N],[13,"SetInputValue","","Forcibly set current interpolation point for the animation, value in seconds",21,N],[13,"SetBlendWeights","","Set blend weights",21,N],[13,"Pause","","Pause the animation",21,N],[13,"Abort","","Abort the animation, will cause the control object to be removed from the world",21,N],[13,"Init","","Only initialise the animation without starting it",21,N],[4,"BlendMethod","","Blend method for sampler blending",N,N],[13,"Linear","","Simple linear blending",22,N],[4,"ControlState","","State of animation",N,N],[13,"Requested","","Animation was just requested, not started yet",23,N],[13,"Deferred","","Deferred start",23,N],[13,"Running","","Animation is running, contains last animation tick, and accumulated duration",23,N],[13,"Paused","","Animation is paused at the accumulated duration",23,N],[13,"Abort","","Request termination of the animation",23,N],[13,"Done","","Animation is completed",23,N],[4,"DeferStartRelation","","Defer the start of an animation until the relationship has done this",N,N],[13,"Start","","Start animation time duration after relationship started",24,N],[13,"End","","Start animation when relationship ends",24,N],[4,"EndControl","","Control handling of animation/sampler end",N,N],[13,"Loop","","Loop the requested number of iterations, None = loop infinitely",25,N],[13,"Normal","","When duration of sampler/animation is reached, go back to rest state",25,N],[13,"Stay","","When duration of sampler/animation is reached, do nothing: stay at the last sampled state",25,N],[4,"StepDirection","","Used when doing animation stepping (i.e only move forward/backward to discrete input values)",N,N],[13,"Forward","","Take a step forward",26,N],[13,"Backward","","Take a step backward",26,N],[4,"SpriteRenderChannel","","Channels that are animatable on `SpriteRender`",N,N],[13,"SpriteSheet","","Selecting a spritesheet dynamically",27,N],[13,"SpriteIndex","","Selecting a sprite index dynamically",27,N],[4,"SpriteRenderPrimitive","","Sampler primitive for SpriteRender animations Note that sprites can only ever be animated with `Step`, or a panic will occur.",N,N],[13,"SpriteSheet","","A spritesheet id",28,N],[13,"SpriteIndex","","An index into a spritesheet",28,N],[4,"TransformChannel","","Channels that can be animated on `Transform`",N,N],[13,"Translation","","The 3 dimensional cartesian coordinates of an entity",29,N],[13,"Rotation","","The rotation in 3 dimensional space",29,N],[13,"Scale","","The scale of an entity i.e. how big it is.",29,N],[4,"SamplerPrimitive","","Sampler primitive",N,N],[13,"Scalar","","A single value",30,N],[13,"Vec2","","Two values",30,N],[13,"Vec3","","Three values",30,N],[13,"Vec4","","Four values",30,N],[5,"get_animation_set","","Get the animation set for an entity. If none exists, one will be added. If entity is invalid, (eg. removed before) None will be returned.",N,[[["writestorage"],["entity"]],["option",["animationcontrolset"]]]],[11,"new","","Create a new sampling bundle",31,[[],["self"]]],[11,"with_dep","","Set dependencies for the `VertexSkinningSystem`",31,N],[11,"new","","Create a new sampling bundle",32,[[["str"]],["self"]]],[11,"with_dep","","Set dependencies for the `SamplerInterpolationSystem`",32,N],[11,"new","","Create a new animation bundle",33,[[["str"],["str"]],["self"]]],[11,"with_dep","","Set dependencies for the `AnimationControlSystem`",33,N],[11,"new","","Create new rest state",34,[[["t"]],["self"]]],[11,"state","","Get the rest state",34,[[["self"]],["t"]]],[11,"new","","Create a new hierarchy",9,[[],["self"]]],[11,"new_single","","Create a new hierarchy containing a single given entity",9,[[["usize"],["entity"]],["self"]]],[11,"new_many","","Create a new hierarchy with the given entity map",9,[[["fnvhashmap",["usize","entity"]]],["self"]]],[11,"rest_state","","Create rest state for the hierarchy. Will copy the values from the base components for each entity in the hierarchy.",9,[[["self"],["f"],["writestorage"]]]],[11,"new","","Create new empty animation",6,[[],["self"]]],[11,"new_single","","Create an animation with a single sampler",6,N],[11,"add","","Add a sampler to the animation",6,N],[11,"with","","Add a sampler to the animation",6,N],[11,"is_running","","Is the state `Running`",23,[[["self"]],["bool"]]],[11,"is_paused","","Is the state `Paused`",23,[[["self"]],["bool"]]],[11,"add_control","","Set channel control",13,[[["self"],["samplercontrol"]]]],[11,"clear","","Clear sampler controls for the given animation",13,[[["self"],["u64"]]]],[11,"is_empty","","Check if set is empty",13,[[["self"]],["bool"]]],[11,"abort","","Abort control set",13,[[["self"],["u64"]]]],[11,"pause","","Pause control set",13,[[["self"],["u64"]]]],[11,"unpause","","Unpause control set",13,[[["self"],["u64"]]]],[11,"set_rate_multiplier","","Update rate multiplier",13,[[["self"],["u64"],["f32"]]]],[11,"set_input","","Forcibly set the input value (point of interpolation)",13,[[["self"],["u64"],["f32"]]]],[11,"check_termination","","Check if a control set can be terminated",13,[[["self"],["u64"]],["bool"]]],[11,"step","","Step animation",13,[[["self"],["u64"],["assetstorage"],["stepdirection"]]]],[11,"set_blend_weight","","Set blend weight for a sampler",13,N],[11,"get_running_duration","","Get the max running duration of the control set",13,[[["self"],["u64"]],["option",["f32"]]]],[11,"new","","Creates a new `AnimationControl`",7,[[["handle",["animation"]],["endcontrol"],["controlstate"],["animationcommand"],["f32"]],["self"]]],[11,"is_empty","","Is the animation set empty?",8,[[["self"]],["bool"]]],[11,"remove","","Remove animation from set",8,[[["self"],["i"]]]],[11,"start","","Start animation if it exists",8,[[["self"],["i"]]]],[11,"pause","","Pause animation if it exists",8,[[["self"],["i"]]]],[11,"toggle","","Toggle animation if it exists",8,[[["self"],["i"]]]],[11,"set_rate","","Set animation rate",8,[[["self"],["i"],["f32"]]]],[11,"step","","Step animation",8,[[["self"],["i"],["stepdirection"]]]],[11,"set_input","","Set animation input value (point of interpolation)",8,[[["self"],["i"],["f32"]]]],[11,"set_blend_weight","","Set blend weights",8,[[["self"],["i"],["vec"]]]],[11,"abort","","Abort animation",8,[[["self"],["i"]]]],[11,"add_animation","","Add animation with the given id, unless it already exists",8,[[["self"],["i"],["handle"],["endcontrol"],["f32"],["animationcommand"]]]],[11,"add_deferred_animation","","Add deferred animation with the given id, unless it already exists",8,[[["self"],["i"],["handle"],["endcontrol"],["f32"],["animationcommand"],["i"],["deferstartrelation"]]]],[11,"insert","","Insert an animation directly",8,[[["self"],["i"],["animationcontrol"]]]],[11,"has_animation","","Check if there is an animation with the given id in the set",8,[[["self"],["i"]],["bool"]]],[11,"new","","Create",10,[[],["self"]]],[11,"insert","","Insert an animation in the set",10,[[["self"],["i"],["handle",["animation"]]]]],[11,"get","","Retrieve an animation handle from the set",10,[[["self"],["i"]],["option",["handle"]]]],[11,"new","","Creates a new `Skin`",16,[[["vec",["entity"]],["bitset"],["vec",["matrix4"]]],["self"]]],[11,"new","","Creates a new `VertexSkinningSystem`",35,[[],["self"]]],[11,"new","","Creates a new `AnimationControlSystem`",36,[[],["self"]]],[11,"new","","Creates a new `SamplerInterpolationSystem`",37,[[],["self"]]],[6,"AnimationProcessor","","Asset storage processor for `Animation`",N,N],[6,"SamplerProcessor","","Asset storage processor for `Sampler`",N,N],[8,"AnimationSampling","","Master trait used to define animation sampling on a component",N,N],[16,"Primitive","","The interpolation primitive",38,N],[16,"Channel","","An independent grouping or type of functions that operate on attributes of a component",38,N],[10,"apply_sample","","Apply a sample to a channel",38,N],[10,"current_sample","","Get the current sample for a channel",38,N],[10,"default_primitive","","Get default primitive",38,N],[10,"blend_method","","Get blend config",38,N],[8,"ApplyData","","Extra data to extract from `World`, for use when applying or fetching a sample",N,N],[16,"ApplyData","","The actual data, must implement `SystemData`",39,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_default","","",33,[[],["result",["string"]]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_default","","",32,[[],["result",["string"]]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_default","","",31,[[],["result",["string"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_default","","",2,[[],["result",["string"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_default","","",3,[[],["result",["string"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_default","","",5,[[],["result",["string"]]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_default","","",8,[[],["result",["string"]]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_default","","",9,[[],["result",["string"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_default","","",10,[[],["result",["string"]]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_default","","",13,[[],["result",["string"]]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_default","","",15,[[],["result",["string"]]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_default","","",18,[[],["result",["string"]]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"pausable","","",35,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",35,N],[11,"setup","","",35,N],[11,"setup","","",35,N],[11,"run","","",35,N],[11,"reads","","",35,N],[11,"writes","","",35,N],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"pausable","","",36,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",36,N],[11,"setup","","",36,N],[11,"setup","","",36,N],[11,"run","","",36,N],[11,"reads","","",36,N],[11,"writes","","",36,N],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_default","","",36,[[],["result",["string"]]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"pausable","","",37,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",37,N],[11,"setup","","",37,N],[11,"setup","","",37,N],[11,"run","","",37,N],[11,"reads","","",37,N],[11,"writes","","",37,N],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_default","","",37,[[],["result",["string"]]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"deserialize","","",0,[[["__d"]],["result",["interpolationfunction"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["interpolationfunction"]],["bool"]]],[11,"clone","","",0,[[["self"]],["interpolationfunction"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"into","","",11,[[["self"]],["result",["processingstate","error"]]]],[11,"into","","",6,[[["self"]],["result",["processingstate","error"]]]],[11,"partial_cmp","","",22,[[["self"],["blendmethod"]],["option",["ordering"]]]],[11,"default","","",31,[[],["vertexskinningbundle"]]],[11,"default","","",32,[[],["samplingbundle"]]],[11,"default","","",33,[[],["animationbundle"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["animationsetprefab"]]],[11,"default","","",3,[[],["animationhierarchyprefab"]]],[11,"default","","",2,[[],["animatableprefab"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",13,[[],["self"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",15,[[],["jointprefab"]]],[11,"default","","",18,[[],["skinnableprefab"]]],[11,"default","","",36,[[],["animationcontrolsystem"]]],[11,"default","","",37,[[],["samplerinterpolationsystem"]]],[11,"eq","","",20,[[["self"],["materialprimitive"]],["bool"]]],[11,"ne","","",20,[[["self"],["materialprimitive"]],["bool"]]],[11,"eq","","",19,[[["self"],["materialchannel"]],["bool"]]],[11,"eq","","",22,[[["self"],["blendmethod"]],["bool"]]],[11,"eq","","",23,[[["self"],["controlstate"]],["bool"]]],[11,"ne","","",23,[[["self"],["controlstate"]],["bool"]]],[11,"eq","","",24,[[["self"],["deferstartrelation"]],["bool"]]],[11,"ne","","",24,[[["self"],["deferstartrelation"]],["bool"]]],[11,"eq","","",28,[[["self"],["spriterenderprimitive"]],["bool"]]],[11,"ne","","",28,[[["self"],["spriterenderprimitive"]],["bool"]]],[11,"eq","","",27,[[["self"],["spriterenderchannel"]],["bool"]]],[11,"eq","","",29,[[["self"],["transformchannel"]],["bool"]]],[11,"from","","",20,[[["sprite"]],["self"]]],[11,"from","","",20,[[["sprite"]],["self"]]],[11,"from","","",30,N],[11,"from","","",30,N],[11,"from","","",30,N],[11,"clone","","",20,[[["self"]],["materialprimitive"]]],[11,"clone","","",19,[[["self"]],["materialchannel"]]],[11,"clone","","",4,[[["self"]],["animationprefab"]]],[11,"clone","","",5,[[["self"]],["animationsetprefab"]]],[11,"clone","","",3,[[["self"]],["animationhierarchyprefab"]]],[11,"clone","","",2,[[["self"]],["animatableprefab"]]],[11,"clone","","",22,[[["self"]],["blendmethod"]]],[11,"clone","","",11,[[["self"]],["sampler"]]],[11,"clone","","",34,[[["self"]],["reststate"]]],[11,"clone","","",9,[[["self"]],["animationhierarchy"]]],[11,"clone","","",6,[[["self"]],["animation"]]],[11,"clone","","",23,[[["self"]],["controlstate"]]],[11,"clone","","",25,[[["self"]],["endcontrol"]]],[11,"clone","","",12,[[["self"]],["samplercontrol"]]],[11,"clone","","",13,[[["self"]],["samplercontrolset"]]],[11,"clone","","",26,[[["self"]],["stepdirection"]]],[11,"clone","","",21,[[["self"]],["animationcommand"]]],[11,"clone","","",7,[[["self"]],["animationcontrol"]]],[11,"clone","","",24,[[["self"]],["deferstartrelation"]]],[11,"clone","","",8,[[["self"]],["animationcontrolset"]]],[11,"clone","","",14,[[["self"]],["joint"]]],[11,"clone","","",15,[[["self"]],["jointprefab"]]],[11,"clone","","",17,[[["self"]],["skinprefab"]]],[11,"clone","","",18,[[["self"]],["skinnableprefab"]]],[11,"clone","","",28,[[["self"]],["spriterenderprimitive"]]],[11,"clone","","",27,[[["self"]],["spriterenderchannel"]]],[11,"clone","","",29,[[["self"]],["transformchannel"]]],[11,"clone","","",30,[[["self"]],["samplerprimitive"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"hash","","",19,N],[11,"hash","","",22,N],[11,"hash","","",27,N],[11,"hash","","",29,N],[11,"add","","",20,[[["self"],["self"]],["self"]]],[11,"sub","","",20,[[["self"],["self"]],["self"]]],[11,"mul","","",20,[[["self"],["f32"]],["self"]]],[11,"dot","","",20,[[["self"],["self"]],["f32"]]],[11,"magnitude2","","",20,[[["self"]],["f32"]]],[11,"magnitude","","",20,[[["self"]],["f32"]]],[11,"normalize","","",20,[[["self"]],["self"]]],[11,"add","","",28,[[["self"],["self"]],["self"]]],[11,"sub","","",28,[[["self"],["self"]],["self"]]],[11,"mul","","",28,[[["self"],["f32"]],["self"]]],[11,"dot","","",28,[[["self"],["self"]],["f32"]]],[11,"magnitude2","","",28,[[["self"]],["f32"]]],[11,"magnitude","","",28,[[["self"]],["f32"]]],[11,"normalize","","",28,[[["self"]],["self"]]],[11,"add","","",30,[[["self"],["self"]],["self"]]],[11,"sub","","",30,[[["self"],["self"]],["self"]]],[11,"mul","","",30,[[["self"],["f32"]],["self"]]],[11,"dot","","",30,[[["self"],["self"]],["f32"]]],[11,"magnitude2","","",30,[[["self"]],["f32"]]],[11,"magnitude","","",30,[[["self"]],["f32"]]],[11,"normalize","","",30,[[["self"]],["self"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",34,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"deserialize","","",30,[[["__d"]],["result"]]],[11,"build","","",31,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"build","","",32,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"build","","",33,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"run","","",35,N],[11,"setup","","",35,[[["self"],["resources"]]]],[11,"run","","",36,N],[11,"setup","","",36,[[["self"],["resources"]]]],[11,"run","","",37,N],[11,"add_to_entity","","",4,N],[11,"load_sub_assets","","",4,N],[11,"add_to_entity","","",5,N],[11,"load_sub_assets","","",5,N],[11,"add_to_entity","","",3,N],[11,"add_to_entity","","",2,N],[11,"load_sub_assets","","",2,N],[11,"add_to_entity","","",34,N],[11,"add_to_entity","","",15,N],[11,"add_to_entity","","",17,N],[11,"add_to_entity","","",18,N],[11,"load_sub_assets","","",18,N],[11,"interpolate","","",0,N]],"paths":[[4,"InterpolationFunction"],[8,"InterpolationPrimitive"],[3,"AnimatablePrefab"],[3,"AnimationHierarchyPrefab"],[3,"AnimationPrefab"],[3,"AnimationSetPrefab"],[3,"Animation"],[3,"AnimationControl"],[3,"AnimationControlSet"],[3,"AnimationHierarchy"],[3,"AnimationSet"],[3,"Sampler"],[3,"SamplerControl"],[3,"SamplerControlSet"],[3,"Joint"],[3,"JointPrefab"],[3,"Skin"],[3,"SkinPrefab"],[3,"SkinnablePrefab"],[4,"MaterialChannel"],[4,"MaterialPrimitive"],[4,"AnimationCommand"],[4,"BlendMethod"],[4,"ControlState"],[4,"DeferStartRelation"],[4,"EndControl"],[4,"StepDirection"],[4,"SpriteRenderChannel"],[4,"SpriteRenderPrimitive"],[4,"TransformChannel"],[4,"SamplerPrimitive"],[3,"VertexSkinningBundle"],[3,"SamplingBundle"],[3,"AnimationBundle"],[3,"RestState"],[3,"VertexSkinningSystem"],[3,"AnimationControlSystem"],[3,"SamplerInterpolationSystem"],[8,"AnimationSampling"],[8,"ApplyData"]]};
searchIndex["amethyst_assets"]={"doc":"amethyst_assets","items":[[3,"FormatValue","amethyst_assets","The `Ok` return value of `Format::import` for a given asset type `A`.",N,N],[12,"data","","The format data.",0,N],[12,"reload","","An optional reload structure",0,N],[3,"Cache","","A simple cache for asset handles of type `A`. This stores `WeakHandle`, so it doesn't keep the assets alive.",N,N],[3,"RonFormat","","Format for loading from Ron files.",N,N],[3,"AssetLoaderSystemData","","Helper type for loading assets",N,N],[3,"Loader","","The asset loader, holding the sources and a reference to the `ThreadPool`.",N,N],[3,"Prefab","","Main `Prefab` structure, containing all data loaded in a single prefab.",N,N],[3,"PrefabLoader","","Helper structure for loading prefabs.",N,N],[3,"PrefabLoaderSystem","","System that load `Prefab`s for `PrefabData` `T`.",N,N],[3,"ProgressCounter","","A progress tracker which is passed to the `Loader` in order to check how many assets are loaded.",N,N],[3,"HotReloadBundle","","This bundle activates hot reload for the `Loader`, adds a `HotReloadStrategy` and the `HotReloadSystem`.",N,N],[3,"HotReloadStrategy","","An ECS resource which allows to configure hot reloading.",N,N],[3,"HotReloadSystem","","System for updating `HotReloadStrategy`.",N,N],[3,"SingleFile","","An implementation of `Reload` which just stores the modification time and the path of the file.",N,N],[3,"Directory","","Directory source.",N,N],[3,"AssetStorage","","An asset storage, storing the actual assets and allocating handles to them.",N,N],[3,"Handle","","A handle to an asset. This is usually what the user deals with, the actual asset (`A`) is stored in an `AssetStorage`.",N,N],[3,"Processor","","A default implementation for an asset processing system which converts data to assets and maintains the asset storage for `A`.",N,N],[3,"WeakHandle","","A weak handle, which is useful if you don't directly need the asset like in caches. This way, the asset can still get dropped (if you want that).",N,N],[4,"AssetPrefab","","Convenience `PrefabData` for loading assets of type `A` using `Format` `F`.",N,N],[13,"Handle","","From existing handle",1,N],[13,"File","","From file, (name, format, format options)",1,N],[4,"Completion","","Completion status, returned by `ProgressCounter::complete`.",N,N],[13,"Complete","","Loading is complete",2,N],[13,"Failed","","Some asset loads have failed",2,N],[13,"Loading","","Still loading assets",2,N],[4,"ProcessingState","","Returned by processor systems, describes the loading state of the asset.",N,N],[13,"Loading","","Asset is not fully loaded yet, need to wait longer",3,N],[13,"Loaded","","Asset have finished loading, can now be inserted into storage and tracker notified",3,N],[11,"data","","Creates a `FormatValue` from only the data (setting `reload` to `None`).",0,N],[11,"new","","Creates a new `Cache` and initializes it with the default values.",4,[[],["self"]]],[11,"insert","","Inserts an asset with a given `key` and returns the old value (if any).",4,[[["self"],["k"],["handle"]],["option",["weakhandle"]]]],[11,"get","","Retrieves an asset handle using a given `key`.",4,[[["self"],["k"]],["option",["handle"]]]],[11,"clear_dead","","Deletes all cached handles which are invalid.",4,[[["self"]]]],[11,"clear_all","","Clears all values.",4,[[["self"]]]],[11,"load","","Loads an asset with a given format from the default (directory) source. If you want to load from a custom source instead, use `load_from`.",5,N],[11,"load_from","","Loads an asset with a given id and format from a custom source. The actual work is done in a worker thread, thus this method immediately returns a handle.",5,N],[11,"load_from_data","","Load an asset from data and return a handle.",5,N],[11,"new","","Creates a new asset loader, initializing the directory store with the given path.",6,[[["p"],["arc",["threadpool"]]],["self"]]],[11,"with_default_source","","Creates a new asset loader, using the provided source",6,[[["s"],["arc",["threadpool"]]],["self"]]],[11,"add_source","","Add a source to the `Loader`, given an id and the source.",6,[[["self"],["i"],["s"]]]],[11,"set_default_source","","Set the default source of the `Loader`.",6,[[["self"],["s"]]]],[11,"set_hot_reload","","If set to `true`, this `Loader` will ask formats to generate \"reload instructions\" which allow reloading. Calling `set_hot_reload(true)` does not actually enable hot reloading; this is controlled by the `HotReloadStrategy` resource.",6,[[["self"],["bool"]]]],[11,"load","","Loads an asset with a given format from the default (directory) source. If you want to load from a custom source instead, use `load_from`.",6,N],[11,"load_from","","Loads an asset with a given id and format from a custom source. The actual work is done in a worker thread, thus this method immediately returns a handle.",6,N],[11,"load_from_data","","Load an asset from data and return a handle.",6,N],[11,"new","","Create new empty prefab",7,[[],["self"]]],[11,"new_main","","Create a prefab with data for only the main `Entity`",7,[[["t"]],["self"]]],[11,"main","","Set main `Entity` data",7,[[["self"],["option"]]]],[11,"add","","Add a new entity to the prefab, with optional data and parent.",7,[[["self"],["option",["usize"]],["option"]],["usize"]]],[11,"len","","Number of entities in the prefab, including the main entity",7,[[["self"]],["usize"]]],[11,"new_entity","","Create a new entity in the prefab, with no data and no parent",7,[[["self"]],["usize"]]],[11,"entity","","Get mutable access to the `PrefabEntity` with the given index",7,[[["self"],["usize"]],["option",["prefabentity"]]]],[11,"entities","","Get immutable access to all entities in the prefab",7,N],[11,"data_or_default","","Get mutable access to the data in the `PrefabEntity` with the given index",7,[[["self"],["usize"]],["t"]]],[11,"loading","","Check if sub asset loading have been triggered",7,[[["self"]],["bool"]]],[11,"progress","","Get the `ProgressCounter` for the sub asset loading.",7,[[["self"]],["progresscounter"]]],[11,"load_sub_assets","","Trigger sub asset loading for the asset",7,N],[11,"load","","Load prefab from source",8,N],[11,"load_from_data","","Load prefab from explicit data",8,[[["self"],["prefab"],["p"]],["handle",["prefab"]]]],[11,"new","","Creates a new `Progress` struct.",9,[[],["self"]]],[11,"errors","","Removes all errors and returns them.",9,[[["self"]],["vec",["asseterrormeta"]]]],[11,"num_assets","","Returns the number of assets this struct is tracking.",9,[[["self"]],["usize"]]],[11,"num_failed","","Returns the number of assets that have failed.",9,[[["self"]],["usize"]]],[11,"num_loading","","Returns the number of assets that are still loading.",9,[[["self"]],["usize"]]],[11,"num_finished","","Returns the number of assets this struct is tracking.",9,[[["self"]],["usize"]]],[11,"complete","","Returns `Completion::Complete` if all tracked assets are finished.",9,[[["self"]],["completion"]]],[11,"is_complete","","Returns `true` if all assets have been imported without error.",9,[[["self"]],["bool"]]],[11,"new","","Creates a new bundle.",10,[[["hotreloadstrategy"]],["self"]]],[11,"every","","Causes hot reloads every `n` seconds.",11,[[["u8"]],["self"]]],[11,"when_triggered","","This allows to use `trigger` for hot reloading.",11,[[],["self"]]],[11,"never","","Never do any hot-reloading.",11,[[],["self"]]],[11,"trigger","","The frame after calling this, all changed assets will be reloaded. Doesn't do anything if the strategy wasn't created with `when_triggered`.",11,[[["self"]]]],[11,"new","","Create a new reload system",12,[[["hotreloadstrategy"]],["self"]]],[11,"new","","Creates a new `SingleFile` reload object.",13,N],[11,"new","","Creates a new directory storage.",14,[[["p"]],["self"]]],[11,"new","","Creates a new asset storage.",15,[[],["self"]]],[11,"clone_asset","","When cloning an asset handle, you'll get another handle, but pointing to the same asset. If you instead want to indeed create a new asset, you can use this method. Note however, that it needs a mutable borrow of `self`, so it can't be used in parallel.",15,[[["self"],["handle"]],["option",["handle"]]]],[11,"get","","Get an asset from a given asset handle.",15,[[["self"],["handle"]],["option"]]],[11,"get_mut","","Get an asset mutably from a given asset handle.",15,[[["self"],["handle"]],["option"]]],[11,"process","","Process finished asset data and maintain the storage.",15,[[["self"],["f"],["u64"],["threadpool"],["option",["hotreloadstrategy"]]]]],[11,"process_custom_drop","","Process finished asset data and maintain the storage. This calls the `drop_fn` closure for assets that were removed from the storage.",15,[[["self"],["f"],["d"],["u64"],["threadpool"],["option",["hotreloadstrategy"]]]]],[11,"new","","Creates a new asset processor for assets of type `A`.",16,[[],["self"]]],[11,"id","","Return the 32 bit id of this handle.",17,[[["self"]],["u32"]]],[11,"downgrade","","Downgrades the handle and creates a `WeakHandle`.",17,[[["self"]],["weakhandle"]]],[11,"upgrade","","Tries to upgrade to a `Handle`.",18,[[["self"]],["option",["handle"]]]],[11,"is_dead","","Returns `true` if the original handle is dead.",18,[[["self"]],["bool"]]],[8,"Asset","","One of the three core traits of this crate.",N,N],[18,"NAME","","An identifier for this asset used for debugging.",19,N],[16,"Data","","The `Data` type the asset can be created from.",19,N],[16,"HandleStorage","","The ECS storage type to be used. You'll want to use `VecStorage` in most cases.",19,N],[8,"Format","","A format, providing a conversion from bytes to asset data, which is then in turn accepted by `Asset::from_data`. Examples for formats are `Png`, `Obj` and `Wave`.",N,N],[18,"NAME","","A unique identifier for this format.",20,N],[16,"Options","","Options specific to the format, which are passed to `import`. E.g. for textures this would be stuff like mipmap levels and sampler info.",20,N],[10,"import","","Reads the given bytes and produces asset data.",20,N],[8,"SimpleFormat","","This is a simplified version of `Format`, which doesn't give you as much freedom, but in return is simpler to implement. All `SimpleFormat` types automatically implement `Format`. This format assumes that the asset name is the full path and the asset is only contained in one file.",N,N],[18,"NAME","","A unique identifier for this format.",21,N],[16,"Options","","Options specific to the format, which are passed to `import`. E.g. for textures this would be stuff like mipmap levels and sampler info.",21,N],[10,"import","","Produces asset data from given bytes.",21,N],[8,"PrefabData","","Trait for loading a prefabs data for a single entity",N,N],[16,"SystemData","","`SystemData` needed to perform the load",22,N],[16,"Result","","The result type returned by the load operation",22,N],[10,"add_to_entity","","Add the data for this prefab onto the given `Entity`",22,N],[11,"load_sub_assets","","Trigger asset loading for any sub assets.",22,N],[8,"Progress","","The `Progress` trait, allowing to track which assets are imported already.",N,N],[16,"Tracker","","The tracker this progress can create.",23,N],[10,"add_assets","","Add `num` assets to the progress. This should be done whenever a new asset is put in the queue.",23,[[["self"],["usize"]]]],[10,"create_tracker","","Creates a `Tracker`.",23,N],[8,"Tracker","","The `Tracker` trait which will be used by the loader to report back to `Progress`.",N,N],[10,"success","","Called if the asset could be imported.",24,[[["box"]]]],[10,"fail","","Called if the asset couldn't be imported to an error.",24,[[["box"],["u32"],["str"],["string"],["error"]]]],[8,"Reload","","The `Reload` trait provides a method which checks if an asset needs to be reloaded.",N,N],[10,"needs_reload","","Checks if a reload is necessary.",25,[[["self"]],["bool"]]],[10,"name","","Returns the asset name.",25,[[["self"]],["string"]]],[10,"format","","Returns the format name.",25,[[["self"]],["str"]]],[10,"reload","","Reloads the asset.",25,[[["box"]],["result",["formatvalue","error"]]]],[8,"Source","","A trait for asset sources, which provides methods for loading bytes.",N,N],[10,"modified","","This is called to check if an asset has been modified.",26,[[["self"],["str"]],["result",["u64","error"]]]],[10,"load","","Loads the bytes given a path.",26,[[["self"],["str"]],["result",["vec","error"]]]],[11,"load_with_metadata","","Returns both the result of `load` and `modified` as a tuple. There's a default implementation which just calls both methods, but you may be able to provide a more optimized version yourself.",26,[[["self"],["str"]],["result",["error"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_default","","",27,[[],["result",["string"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"setup","","",5,N],[11,"fetch","","",5,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_default","","",7,[[],["result",["string"]]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"setup","","",8,N],[11,"fetch","","",8,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"pausable","","",28,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",28,N],[11,"setup","","",28,N],[11,"setup","","",28,N],[11,"run","","",28,N],[11,"reads","","",28,N],[11,"writes","","",28,N],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_default","","",28,[[],["result",["string"]]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_default","","",9,[[],["result",["string"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_default","","",10,[[],["result",["string"]]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"pausable","","",12,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",12,N],[11,"setup","","",12,N],[11,"setup","","",12,N],[11,"run","","",12,N],[11,"reads","","",12,N],[11,"writes","","",12,N],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_default","","",15,[[],["result",["string"]]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"pausable","","",16,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",16,N],[11,"setup","","",16,N],[11,"setup","","",16,N],[11,"run","","",16,N],[11,"reads","","",16,N],[11,"writes","","",16,N],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"import","","",27,N],[11,"add_to_entity","","",1,N],[11,"load_sub_assets","","",1,N],[11,"needs_reload","","",13,[[["self"]],["bool"]]],[11,"name","","",13,[[["self"]],["string"]]],[11,"format","","",13,[[["self"]],["str"]]],[11,"reload","","",13,[[["box"]],["result",["formatvalue","error"]]]],[11,"modified","","",14,[[["self"],["str"]],["result",["u64","error"]]]],[11,"load","","",14,[[["self"],["str"]],["result",["vec","error"]]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",27,[[],["ronformat"]]],[11,"default","","",28,[[],["self"]]],[11,"default","","",7,[[],["prefab"]]],[11,"default","","",9,[[],["progresscounter"]]],[11,"default","","",10,[[],["hotreloadbundle"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",15,[[],["self"]]],[11,"eq","","",2,[[["self"],["completion"]],["bool"]]],[11,"eq","","",17,[[["self"],["self"]],["bool"]]],[11,"clone","","",27,[[["self"]],["ronformat"]]],[11,"clone","","",1,[[["self"]],["assetprefab"]]],[11,"clone","","",2,[[["self"]],["completion"]]],[11,"clone","","",11,[[["self"]],["hotreloadstrategy"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"drop","","",15,[[["self"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"hash","","",17,[[["self"],["__ha"]]]],[11,"build","","",10,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"run","","",28,N],[11,"setup","","",28,[[["self"],["resources"]]]],[11,"run","","",12,N],[11,"setup","","",12,[[["self"],["resources"]]]],[11,"run","","",16,N],[11,"setup","","",5,[[["resources"]]]],[11,"fetch","","",5,[[["resources"]],["self"]]],[11,"reads","","",5,[[],["vec",["resourceid"]]]],[11,"writes","","",5,[[],["vec",["resourceid"]]]],[11,"setup","","",8,[[["resources"]]]],[11,"fetch","","",8,[[["resources"]],["self"]]],[11,"reads","","",8,[[],["vec",["resourceid"]]]],[11,"writes","","",8,[[],["vec",["resourceid"]]]],[18,"NAME","","An identifier for this asset used for debugging.",19,N],[18,"NAME","","A unique identifier for this format.",20,N],[18,"NAME","","A unique identifier for this format.",21,N],[11,"load_sub_assets","","Trigger asset loading for any sub assets.",22,N],[11,"load_with_metadata","","Returns both the result of `load` and `modified` as a tuple. There's a default implementation which just calls both methods, but you may be able to provide a more optimized version yourself.",26,[[["self"],["str"]],["result",["error"]]]]],"paths":[[3,"FormatValue"],[4,"AssetPrefab"],[4,"Completion"],[4,"ProcessingState"],[3,"Cache"],[3,"AssetLoaderSystemData"],[3,"Loader"],[3,"Prefab"],[3,"PrefabLoader"],[3,"ProgressCounter"],[3,"HotReloadBundle"],[3,"HotReloadStrategy"],[3,"HotReloadSystem"],[3,"SingleFile"],[3,"Directory"],[3,"AssetStorage"],[3,"Processor"],[3,"Handle"],[3,"WeakHandle"],[8,"Asset"],[8,"Format"],[8,"SimpleFormat"],[8,"PrefabData"],[8,"Progress"],[8,"Tracker"],[8,"Reload"],[8,"Source"],[3,"RonFormat"],[3,"PrefabLoaderSystem"]]};
searchIndex["amethyst_audio"]={"doc":"Loading and playing of audio files.","items":[[3,"AudioBundle","amethyst_audio","Audio bundle",N,N],[3,"AudioEmitter","","An audio source, add this component to anything that emits sound.",N,N],[3,"AudioListener","","An audio listener, add this component to the local player character.",N,N],[12,"output","","Output used by this listener to emit sounds to",0,N],[12,"left_ear","","Position of the left ear relative to the global transform on this entity.",0,N],[12,"right_ear","","Position of the right ear relative to the global transform on this entity.",0,N],[3,"AudioPrefab","","`PrefabData` for loading audio components",N,N],[3,"FlacFormat","","Loads audio from Flac files.",N,N],[3,"Mp3Format","","Loads audio from MP3 files.",N,N],[3,"OggFormat","","Loads audio from Ogg Vorbis files",N,N],[3,"WavFormat","","Loads audio from wav files.",N,N],[3,"AudioSink","","This structure provides a way to programmatically pick and play music.",N,N],[3,"Source","","A loaded audio file",N,N],[12,"bytes","","The bytes of this audio source.",1,N],[3,"AudioSystem","","Syncs 3D transform data with the audio engine to provide 3D audio.",N,N],[3,"DjSystem","","Calls a closure if the `AudioSink` is empty.",N,N],[3,"DecoderError","","An error occurred while decoding the source.",N,N],[4,"AudioFormat","","Aggregate sound format",N,N],[13,"Ogg","","Ogg",2,N],[13,"Wav","","Wav",2,N],[13,"Flac","","Flac",2,N],[13,"Mp3","","Mp3",2,N],[0,"output","","Provides structures and functions used to get audio outputs.",N,N],[3,"Output","amethyst_audio::output","A speaker(s) through which audio can be played.",N,N],[3,"OutputIterator","","An iterator over outputs",N,N],[5,"default_output","","Get the default output, returns none if no outputs are available.",N,[[],["option",["output"]]]],[5,"outputs","","Get a list of outputs available to the system.",N,[[],["outputiterator"]]],[5,"init_output","","Initialize default output",N,[[["resources"]]]],[11,"name","","Gets the name of the output",3,[[["self"]],["string"]]],[11,"try_play_once","","Play a sound once.  A volume of 1.0 is unchanged, while 0.0 is silent.",3,[[["self"],["source"],["f32"]],["result",["decodererror"]]]],[11,"play_once","","Play a sound once. A volume of 1.0 is unchanged, while 0.0 is silent.",3,[[["self"],["source"],["f32"]]]],[11,"play_n_times","","Play a sound n times. A volume of 1.0 is unchanged, while 0.0 is silent.",3,[[["self"],["source"],["f32"],["u16"]]]],[11,"try_play_n_times","","Play a sound n times. A volume of 1.0 is unchanged, while 0.0 is silent.",3,[[["self"],["source"],["f32"],["u16"]],["result",["decodererror"]]]],[11,"new","amethyst_audio","Creates a new AudioEmitter component initialized to the given positions. These positions will stay synced with Transform if the Transform component is available on this entity.",4,[[],["audioemitter"]]],[11,"play","","Plays an audio source from this emitter.",4,[[["self"],["source"]],["result",["decodererror"]]]],[11,"set_picker","","An emitter's picker will be called by the AudioSystem whenever the emitter runs out of sounds to play.",4,[[["self"],["box",["fnmut"]]]]],[11,"clear_picker","","Clears the previously set picker.",4,[[["self"]]]],[11,"new","","Creates a new `AudioSink` using the given audio output.",5,[[["output"]],["audiosink"]]],[11,"append","","Adds a source to the sink's queue of music to play.",5,[[["self"],["source"]],["result",["decodererror"]]]],[11,"empty","","Returns true if the sink has no more music to play.",5,[[["self"]],["bool"]]],[11,"volume","","Retrieves the volume of the sink, between 0.0 and 1.0;",5,[[["self"]],["f32"]]],[11,"set_volume","","Sets the volume of the sink.",5,[[["self"],["f32"]]]],[11,"play","","Resumes playback of a paused sink. Has no effect if this sink was never paused.",5,[[["self"]]]],[11,"pause","","Pauses playback, this can be resumed with `AudioSink::play`",5,[[["self"]]]],[11,"is_paused","","Returns true if the sink is currently paused.",5,[[["self"]],["bool"]]],[11,"stop","","Empties the sink's queue of all music.",5,[[["self"]]]],[11,"new","","Produces a new AudioSystem that uses the given listener.",6,[[],["audiosystem"]]],[11,"new","","Creates a new `DjSystem` with the music picker being `f`. The closure takes a parameter, which needs to be a reference to a resource type, e.g. `&MusicLibrary`. This resource will be fetched by the system and passed to the picker.",7,[[["f"]],["self"]]],[6,"SourceHandle","","A handle to a source asset.",N,N],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_default","","",9,[[],["result",["string"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"import","","",10,N],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"import","","",11,N],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"import","","",12,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"import","","",13,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"pausable","","",6,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",6,N],[11,"setup","","",6,N],[11,"setup","","",6,N],[11,"run","","",6,N],[11,"reads","","",6,N],[11,"writes","","",6,N],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_default","","",6,[[],["result",["string"]]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"pausable","","",7,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",7,N],[11,"setup","","",7,N],[11,"setup","","",7,N],[11,"run","","",7,N],[11,"reads","","",7,N],[11,"writes","","",7,N],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"import","","",2,N],[11,"into","amethyst_audio::output","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"par_bridge","","",15,[[["self"]],["iterbridge"]]],[11,"next","","",15,[[["self"]],["option",["output"]]]],[11,"default","amethyst_audio","",4,[[],["audioemitter"]]],[11,"default","","",9,[[],["audioprefab"]]],[11,"default","","",6,[[],["audiosystem"]]],[11,"eq","amethyst_audio::output","",3,[[["self"],["output"]],["bool"]]],[11,"ne","","",3,[[["self"],["output"]],["bool"]]],[11,"as_ref","amethyst_audio","",1,N],[11,"clone","amethyst_audio::output","",3,[[["self"]],["output"]]],[11,"clone","amethyst_audio","",9,[[["self"]],["audioprefab"]]],[11,"clone","","",13,[[["self"]],["wavformat"]]],[11,"clone","","",12,[[["self"]],["oggformat"]]],[11,"clone","","",10,[[["self"]],["flacformat"]]],[11,"clone","","",11,[[["self"]],["mp3format"]]],[11,"clone","","",2,[[["self"]],["audioformat"]]],[11,"clone","","",1,[[["self"]],["source"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","amethyst_audio::output","",3,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","amethyst_audio","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"description","","",14,[[["self"]],["str"]]],[11,"cause","","",14,[[["self"]],["option",["error"]]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"build","","",8,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"run","","",6,N],[11,"run","","",7,N],[11,"setup","","",7,[[["self"],["resources"]]]],[11,"import","","",13,N],[11,"import","","",12,N],[11,"import","","",10,N],[11,"import","","",11,N],[11,"import","","",2,N],[11,"add_to_entity","","",9,N]],"paths":[[3,"AudioListener"],[3,"Source"],[4,"AudioFormat"],[3,"Output"],[3,"AudioEmitter"],[3,"AudioSink"],[3,"AudioSystem"],[3,"DjSystem"],[3,"AudioBundle"],[3,"AudioPrefab"],[3,"FlacFormat"],[3,"Mp3Format"],[3,"OggFormat"],[3,"WavFormat"],[3,"DecoderError"],[3,"OutputIterator"]]};
searchIndex["amethyst_config"]={"doc":"Loads RON files into a structure for easy / statically typed usage.","items":[[4,"ConfigError","amethyst_config","Error related to anything that manages/creates configurations as well as \"workspace\"-related things.",N,N],[13,"File","","Forward to the `std::io::Error` error.",0,N],[13,"Parser","","Errors related to serde's parsing of configuration files.",0,N],[13,"Serializer","","Occurs if a value is ill-formed during serialization (like a poisoned mutex).",0,N],[13,"Extension","","Related to the path of the file.",0,N],[8,"Config","","Trait implemented by the `config!` macro.",N,N],[10,"load","","Loads a configuration structure from a file. Defaults if the file fails in any way.",1,[[["p"]],["self"]]],[10,"load_no_fallback","","Loads a configuration structure from a file.",1,[[["p"]],["result",["configerror"]]]],[10,"load_bytes","","Loads configuration structure from raw bytes.",1,N],[10,"write","","Writes a configuration structure to a file.",1,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"from","","",0,[[["error"]],["configerror"]]],[11,"from","","",0,[[["deerror"]],["self"]]],[11,"from","","",0,[[["sererror"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"ConfigError"],[8,"Config"]]};
searchIndex["amethyst_controls"]={"doc":"Amethyst control crate.","items":[[3,"ArcBallControlBundle","amethyst_controls","The bundle that creates an arc ball movement system. Note: Will not actually create a moving entity. It will only register the needed resources and systems. The generic parameters A and B are the ones used in InputHandler<A,B>. You might want to add \"fly_movement\" and \"free_rotation\" as dependencies of the TransformSystem. Adding this bundle will grab the mouse, hide it and keep it centered.",N,N],[3,"FlyControlBundle","","The bundle that creates a flying movement system.",N,N],[3,"ArcBallControlTag","","To add an arc ball behaviour, add this to a camera which already has the FlyControlTag added.",N,N],[12,"target","","The target entity which the camera will orbit",0,N],[12,"distance","","The distance from the target entity that the camera should orbit at.",0,N],[3,"ControlTagPrefab","","`PrefabData` for loading control tags on an `Entity`",N,N],[12,"arc_ball","","Place `ArcBallControlTag` on the `Entity`",1,N],[3,"FlyControlTag","","Add this to a camera if you want it to be a fly camera. You need to add the FlyControlBundle or the required systems for it to work.",N,N],[3,"HideCursor","","Resource indicating if the mouse should be grabbed and hidden by the CursorHideSystem when the window is focused.",N,N],[12,"hide","","If true this system will take control of the cursor.",2,N],[3,"WindowFocus","","Struct which holds information about whether the window is focused. Written to by MouseFocusUpdateSystem",N,N],[12,"is_focused","","If true then the window is actively focused.",3,N],[3,"ArcBallRotationSystem","","The system that manages the arc ball movement; In essence, the system will align the camera with its target while keeping the distance to it and while keeping the orientation of the camera.",N,N],[3,"CursorHideSystem","","System which hides the cursor when the window is focused. Requires the usage MouseFocusUpdateSystem at the same time.",N,N],[3,"FlyMovementSystem","","The system that manages the fly movement.",N,N],[3,"FreeRotationSystem","","The system that manages the view rotation. Controlled by the mouse. Goes into an inactive state if the window is not focused (`WindowFocus` resource).",N,N],[3,"MouseFocusUpdateSystem","","A system which reads Events and saves if a window has lost focus in a WindowFocus resource",N,N],[11,"new","","Builds a new fly control bundle using the provided axes as controls.",4,[[["option"],["option"],["option"]],["self"]]],[11,"with_sensitivity","","Alters the mouse sensitivy on this `FlyControlBundle`",4,[[["self"],["f32"],["f32"]],["self"]]],[11,"with_speed","","Alters the speed on this `FlyControlBundle`.",4,[[["self"],["f32"]],["self"]]],[11,"new","","Builds a new `ArcBallControlBundle` with a default sensitivity of 1.0",5,[[],["self"]]],[11,"with_sensitivity","","Builds a new `ArcBallControlBundle` with the provided mouse sensitivity values.",5,[[["self"],["f32"],["f32"]],["self"]]],[11,"new","","Builds a new WindowFocus resource.",3,[[],["windowfocus"]]],[11,"new","","Builds a new `FlyMovementSystem` using the provided speeds and axis controls.",6,[[["f32"],["option"],["option"],["option"]],["self"]]],[11,"new","","Builds a new `FreeRotationSystem` with the specified mouse sensitivity values.",7,[[["f32"],["f32"]],["self"]]],[11,"new","","Builds a new MouseFocusUpdateSystem.",8,[[],["mousefocusupdatesystem"]]],[11,"new","","Constructs a new CursorHideSystem",9,[[],["cursorhidesystem"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_default","","",1,[[],["result",["string"]]]],[11,"load","","",1,[[["p"]],["t"]]],[11,"load_no_fallback","","",1,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",1,N],[11,"write","","",1,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_default","","",10,[[],["result",["string"]]]],[11,"load","","",10,[[["p"]],["t"]]],[11,"load_no_fallback","","",10,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",10,N],[11,"write","","",10,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_default","","",2,[[],["result",["string"]]]],[11,"load","","",2,[[["p"]],["t"]]],[11,"load_no_fallback","","",2,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",2,N],[11,"write","","",2,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_default","","",3,[[],["result",["string"]]]],[11,"load","","",3,[[["p"]],["t"]]],[11,"load_no_fallback","","",3,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",3,N],[11,"write","","",3,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"pausable","","",11,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",11,N],[11,"setup","","",11,N],[11,"setup","","",11,N],[11,"run","","",11,N],[11,"reads","","",11,N],[11,"writes","","",11,N],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"pausable","","",9,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",9,N],[11,"setup","","",9,N],[11,"setup","","",9,N],[11,"run","","",9,N],[11,"reads","","",9,N],[11,"writes","","",9,N],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"pausable","","",6,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",6,N],[11,"setup","","",6,N],[11,"setup","","",6,N],[11,"run","","",6,N],[11,"reads","","",6,N],[11,"writes","","",6,N],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"pausable","","",7,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",7,N],[11,"setup","","",7,N],[11,"setup","","",7,N],[11,"run","","",7,N],[11,"reads","","",7,N],[11,"writes","","",7,N],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"pausable","","",8,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",8,N],[11,"setup","","",8,N],[11,"setup","","",8,N],[11,"run","","",8,N],[11,"reads","","",8,N],[11,"writes","","",8,N],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"default","","",10,[[],["flycontroltag"]]],[11,"default","","",1,[[],["controltagprefab"]]],[11,"default","","",3,[[],["windowfocus"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",11,[[],["arcballrotationsystem"]]],[11,"clone","","",10,[[["self"]],["flycontroltag"]]],[11,"clone","","",0,[[["self"]],["arcballcontroltag"]]],[11,"clone","","",1,[[["self"]],["controltagprefab"]]],[11,"clone","","",3,[[["self"]],["windowfocus"]]],[11,"clone","","",2,[[["self"]],["hidecursor"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"build","","",4,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"build","","",5,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"run","","",6,N],[11,"run","","",11,N],[11,"run","","",7,N],[11,"setup","","",7,[[["self"],["resources"]]]],[11,"run","","",8,N],[11,"setup","","",8,[[["self"],["resources"]]]],[11,"run","","",9,N],[11,"setup","","",9,[[["self"],["resources"]]]],[11,"add_to_entity","","",1,N]],"paths":[[3,"ArcBallControlTag"],[3,"ControlTagPrefab"],[3,"HideCursor"],[3,"WindowFocus"],[3,"FlyControlBundle"],[3,"ArcBallControlBundle"],[3,"FlyMovementSystem"],[3,"FreeRotationSystem"],[3,"MouseFocusUpdateSystem"],[3,"CursorHideSystem"],[3,"FlyControlTag"],[3,"ArcBallRotationSystem"]]};
searchIndex["amethyst_core"]={"doc":"A collection of structures and functions useful across the entire amethyst project.","items":[[3,"Pausable","amethyst_core","A system that is enabled when `V` has a specific value.",N,N],[3,"Named","","A component that gives a name to an [`Entity`].",N,N],[12,"name","","The name of the entity this component is attached to.",0,N],[4,"Axis2","","A two dimensional axis.",N,N],[13,"X","","The X axis. Often the horizontal (left-right) position.",1,N],[13,"Y","","The Y axis. Often the vertical height.",1,N],[4,"Axis3","","A three dimensional axis.",N,N],[13,"X","","The X axis. Often the horizontal (left-right) position.",2,N],[13,"Y","","The Y axis. Often the vertical height.",2,N],[13,"Z","","The Z axis. Often the depth.",2,N],[0,"bundle","","Provides a trait for adding bundles of systems to a dispatcher.",N,N],[8,"SystemBundle","amethyst_core::bundle","A bundle of ECS components, resources and systems.",N,N],[10,"build","","Build and add ECS resources, register components, add systems etc to the Application.",3,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[0,"frame_limiter","amethyst_core","Frame rate limiting.",N,N],[3,"FrameRateLimitConfig","amethyst_core::frame_limiter","Frame limiting configuration loaded from a configuration file.",N,N],[3,"FrameLimiter","","Frame limiter resource.",N,N],[4,"FrameRateLimitStrategy","","Frame rate limiting strategy.",N,N],[13,"Unlimited","","No limit, will do a single yield and then continue with the next frame.",4,N],[13,"Yield","","Yield repeatedly until the frame duration has passed.",4,N],[13,"Sleep","","Sleep repeatedly until the frame duration has passed.",4,N],[13,"SleepAndYield","","Use sleep and yield combined.",4,N],[11,"new","","Creates a new frame limiter.",5,[[["frameratelimitstrategy"],["u32"]],["self"]]],[11,"set_rate","","Sets the maximum fps and frame rate limiting strategy.",5,[[["self"],["frameratelimitstrategy"],["u32"]]]],[11,"from_config","","Creates a new frame limiter with the given config.",5,[[["frameratelimitconfig"]],["self"]]],[11,"start","","Resets the frame start time to the current instant.",5,[[["self"]]]],[11,"wait","","Blocks the current thread until the allotted frame time has passed.",5,[[["self"]]]],[0,"timing","amethyst_core","Utilities for working with time.",N,N],[3,"Time","amethyst_core::timing","Frame timing values.",N,N],[12,"last_fixed_update","","Time at which `State::fixed_update` was last called.",6,N],[4,"Stopwatch","","A stopwatch which accurately measures elapsed time.",N,N],[13,"Waiting","","Initial state with an elapsed time value of 0 seconds.",7,N],[13,"Started","","Stopwatch has started counting the elapsed time since this `Instant` and accumuluated time from previous start/stop cycles `Duration`.",7,N],[13,"Ended","","Stopwatch has been stopped and reports the elapsed time `Duration`.",7,N],[5,"duration_to_secs","","Converts a Duration to the time in seconds.",N,[[["duration"]],["f32"]]],[5,"duration_to_secs_f64","","Converts a Duration to the time in seconds in an f64.",N,[[["duration"]],["f64"]]],[5,"secs_to_duration","","Converts a time in seconds to a duration",N,[[["f32"]],["duration"]]],[5,"duration_to_nanos","","Converts a Duration to nanoseconds",N,[[["duration"]],["u64"]]],[5,"nanos_to_duration","","Converts nanoseconds to a Duration",N,[[["u64"]],["duration"]]],[11,"delta_seconds","","Gets the time difference between frames in seconds.",6,[[["self"]],["f32"]]],[11,"delta_time","","Gets the time difference between frames.",6,[[["self"]],["duration"]]],[11,"delta_real_seconds","","Gets the time difference between frames in seconds ignoring the time speed multiplier.",6,[[["self"]],["f32"]]],[11,"delta_real_time","","Gets the time difference between frames ignoring the time speed multiplier.",6,[[["self"]],["duration"]]],[11,"fixed_seconds","","Gets the fixed time step in seconds.",6,[[["self"]],["f32"]]],[11,"fixed_time","","Gets the fixed time step.",6,[[["self"]],["duration"]]],[11,"frame_number","","Gets the current frame number.  This increments by 1 every frame.  There is no frame 0.",6,[[["self"]],["u64"]]],[11,"last_fixed_update","","Gets the time at which the last fixed update was called.",6,[[["self"]],["instant"]]],[11,"absolute_time","","Gets the time since the start of the game, taking into account the speed multiplier.",6,[[["self"]],["duration"]]],[11,"absolute_time_seconds","","Gets the time since the start of the game as seconds, taking into account the speed multiplier.",6,[[["self"]],["f64"]]],[11,"absolute_real_time","","Gets the time since the start of the game, ignoring the speed multiplier.",6,[[["self"]],["duration"]]],[11,"absolute_real_time_seconds","","Gets the time since the start of the game as seconds, ignoring the speed multiplier.",6,[[["self"]],["f64"]]],[11,"time_scale","","Gets the current time speed multiplier.",6,[[["self"]],["f32"]]],[11,"set_delta_seconds","","Gets the total number of frames that have been played in this session. Sets both `delta_seconds` and `delta_time` based on the seconds given.",6,[[["self"],["f32"]]]],[11,"set_delta_time","","Sets both `delta_time` and `delta_seconds` based on the duration given.",6,[[["self"],["duration"]]]],[11,"set_fixed_seconds","","Sets both `fixed_seconds` and `fixed_time` based on the seconds given.",6,[[["self"],["f32"]]]],[11,"set_fixed_time","","Sets both `fixed_time` and `fixed_seconds` based on the duration given.",6,[[["self"],["duration"]]]],[11,"increment_frame_number","","Increments the current frame number by 1.",6,[[["self"]]]],[11,"set_time_scale","","Sets the time multiplier that affects how time values are computed, effectively slowing or speeding up your game.",6,[[["self"],["f32"]]]],[11,"finish_fixed_update","","Indicates a fixed update just finished.",6,[[["self"]]]],[11,"new","","Creates a new stopwatch.",7,[[],["stopwatch"]]],[11,"elapsed","","Retrieves the elapsed time.",7,[[["self"]],["duration"]]],[11,"restart","","Stops, resets, and starts the stopwatch again.",7,[[["self"]]]],[11,"start","","Starts, or resumes, measuring elapsed time. If the stopwatch has been started and stopped before, the new results are compounded onto the existing elapsed time value.",7,[[["self"]]]],[11,"stop","","Stops measuring elapsed time.",7,[[["self"]]]],[11,"reset","","Clears the current elapsed time value.",7,[[["self"]]]],[0,"transform","amethyst_core","`amethyst` transform ecs module",N,N],[0,"bundle","amethyst_core::transform","ECS transform bundle",N,N],[3,"TransformBundle","amethyst_core::transform::bundle","Transform bundle",N,N],[11,"new","","Create a new transform bundle",8,[[],["self"]]],[11,"with_dep","","Set dependencies for the `TransformSystem`",8,N],[0,"components","amethyst_core::transform","Components for the transform processor.",N,N],[4,"HierarchyEvent","amethyst_core::transform::components","Hierarchy events.",N,N],[13,"Modified","","`Entity` was either inserted or modified in the `Hierarchy`",9,N],[13,"Removed","","`Entity` was removed from the `Hierarchy`. Note that this does not mean the `Parent` component was removed from the component storage, just that the `Entity` will no longer be considered to be a part of the `Hierarchy`.",9,N],[3,"Transform","","Local position, rotation, and scale (from parent if it exists).",N,N],[3,"Parent","","Component for defining a parent entity.",N,N],[12,"entity","","The parent entity",10,N],[3,"GlobalTransform","","Performs a global transformation on the entity (transform from origin).",N,N],[12,"0","","",11,N],[11,"new","","Create a new Transform.",12,[[["translation3",["f32"]],["unitquaternion",["f32"]],["vector3",["f32"]]],["self"]]],[11,"face_towards","","Makes the entity point towards `position`.",12,[[["self"],["vector3",["f32"]],["vector3",["f32"]]],["self"]]],[11,"matrix","","Returns the local object matrix for the transform.",12,[[["self"]],["matrix4",["f32"]]]],[11,"translation","","Returns a reference to the translation vector.",12,[[["self"]],["vector3"]]],[11,"translation_mut","","Returns a mutable reference to the translation vector.",12,[[["self"]],["vector3"]]],[11,"rotation","","Returns a reference to the rotation quaternion.",12,[[["self"]],["unitquaternion"]]],[11,"rotation_mut","","Returns a mutable reference to the rotation quaternion.",12,[[["self"]],["unitquaternion"]]],[11,"scale","","Returns a reference to the scale vector.",12,[[["self"]],["vector3"]]],[11,"scale_mut","","Returns a mutable reference to the scale vector.",12,[[["self"]],["vector3"]]],[11,"isometry","","Returns a reference to the isometry of the transform (translation and rotation combined).",12,[[["self"]],["isometry3"]]],[11,"isometry_mut","","Returns a mutable reference to the isometry of the transform (translation and rotation combined).",12,[[["self"]],["isometry3"]]],[11,"move_global","","Move relatively to its current position.",12,[[["self"],["vector3",["f32"]]],["self"]]],[11,"move_local","","Move relatively to its current position and orientation.",12,[[["self"],["vector3",["f32"]]],["self"]]],[11,"move_along_global","","Move a distance along an axis.",12,[[["self"],["unit",["vector3"]],["f32"]],["self"]]],[11,"move_along_local","","Move a distance along an axis.",12,[[["self"],["unit",["vector3"]],["f32"]],["self"]]],[11,"move_forward","","Move forward relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"move_backward","","Move backward relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"move_right","","Move right relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"move_left","","Move left relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"move_up","","Move up relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"move_down","","Move down relative to current position and orientation.",12,[[["self"],["f32"]],["self"]]],[11,"translate_x","","Adds the specified amount to the translation vector's x component.",12,[[["self"],["f32"]],["self"]]],[11,"translate_y","","Adds the specified amount to the translation vector's y component.",12,[[["self"],["f32"]],["self"]]],[11,"translate_z","","Adds the specified amount to the translation vector's z component.",12,[[["self"],["f32"]],["self"]]],[11,"set_x","","Sets the translation vector's x component to the specified value.",12,[[["self"],["f32"]],["self"]]],[11,"set_y","","Sets the translation vector's y component to the specified value.",12,[[["self"],["f32"]],["self"]]],[11,"set_z","","Sets the translation vector's z component to the specified value.",12,[[["self"],["f32"]],["self"]]],[11,"pitch_global","","Pitch relatively to the world. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"pitch_local","","Pitch relatively to its own rotation. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"yaw_global","","Yaw relatively to the world. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"yaw_local","","Yaw relatively to its own rotation. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"roll_global","","Roll relatively to the world. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"roll_local","","Roll relatively to its own rotation. `angle` is specified in radians.",12,[[["self"],["f32"]],["self"]]],[11,"rotate_global","","Rotate relatively to the world. `angle` is specified in radians.",12,[[["self"],["unit",["vector3"]],["f32"]],["self"]]],[11,"rotate_local","","Rotate relatively to the current orientation. `angle` is specified in radians.",12,[[["self"],["unit",["vector3"]],["f32"]],["self"]]],[11,"set_position","","Set the position.",12,[[["self"],["vector3",["f32"]]],["self"]]],[11,"translate_xyz","","Adds the specified amounts to the translation vector.",12,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"set_xyz","","Sets the specified values of the translation vector.",12,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"set_rotation","","Sets the rotation of the transform.",12,[[["self"],["unitquaternion",["f32"]]],["self"]]],[11,"set_scale","","Sets the scale of the transform.",12,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"set_rotation_euler","","Set the rotation using Euler x, y, z.",12,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"concat","","Concatenates another transform onto `self`.",12,[[["self"],["self"]],["self"]]],[11,"view_matrix","","Calculates the inverse of this transform, which we need to render.",12,[[["self"]],["matrix4",["f32"]]]],[11,"is_finite","","Checks whether each `f32` of the `GlobalTransform` is finite (not NaN or inf).",11,[[["self"]],["bool"]]],[11,"new","","Creates a new `GlobalTransform` in the form of an identity matrix.",11,[[],["self"]]],[6,"ParentHierarchy","","An alias to tie `specs-hierarchy` `Hierarchy` structure to our `Parent` component.",N,N],[0,"systems","amethyst_core::transform","Scene graph system and types",N,N],[3,"TransformSystem","amethyst_core::transform::systems","Handles updating `GlobalTransform` components based on the `Transform` component and parents.",N,N],[11,"new","","Creates a new transform processor.",13,[[],["transformsystem"]]],[11,"new","amethyst_core","Constructs a new `Named` from a string.",0,[[["s"]],["self"]]],[6,"ArcThreadPool","","A rayon thread pool wrapped in an `Arc`. This should be used as resource in `World`.",N,N],[8,"EventReader","","Read events generically",N,N],[16,"SystemData","","SystemData needed to read the event(s)",14,N],[16,"Event","","The event type produced by the reader",14,N],[10,"read","","Read events from the linked `SystemData` and append to the given Vec",14,N],[11,"read_from_world","","Read events from `World` and append to the given `Vec`",14,[[["self"],["world"],["vec"]]]],[11,"setup","","Setup event reader",14,[[["self"],["resources"]]]],[8,"SystemExt","","Extension functionality associated systems.",N,N],[10,"pausable","","Make a system pausable by tying it to a specific value of a resource.",15,[[["self"],["v"]],["pausable"]]],[8,"WithNamed","","An easy way to name an `Entity` and give it a `Named` `Component`.",N,N],[10,"named","","Adds a name to the entity being built.",16,[[["self"],["s"]],["self"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"run_now","","",17,N],[11,"setup","","",17,N],[11,"setup","","",17,N],[11,"run","","",17,N],[11,"reads","","",17,N],[11,"writes","","",17,N],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","amethyst_core::frame_limiter","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_default","","",18,[[],["result",["string"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_default","","",5,[[],["result",["string"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"into","amethyst_core::timing","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_default","","",6,[[],["result",["string"]]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_default","","",7,[[],["result",["string"]]]],[11,"into","amethyst_core::transform::bundle","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_default","","",8,[[],["result",["string"]]]],[11,"into","amethyst_core::transform::components","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_default","","",12,[[],["result",["string"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"into","amethyst_core::transform::systems","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"run_now","","",13,N],[11,"setup","","",13,N],[11,"setup","","",13,N],[11,"run","","",13,N],[11,"reads","","",13,N],[11,"writes","","",13,N],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"build","amethyst_core::transform::bundle","",8,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"into","amethyst_core::transform::components","",11,N],[11,"partial_cmp","","",10,[[["self"],["parent"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["parent"]],["bool"]]],[11,"le","","",10,[[["self"],["parent"]],["bool"]]],[11,"gt","","",10,[[["self"],["parent"]],["bool"]]],[11,"ge","","",10,[[["self"],["parent"]],["bool"]]],[11,"default","amethyst_core::frame_limiter","",4,[[],["self"]]],[11,"default","","",18,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"default","amethyst_core::timing","",6,[[],["time"]]],[11,"default","","",7,[[],["stopwatch"]]],[11,"default","amethyst_core::transform::bundle","",8,[[],["transformbundle"]]],[11,"default","amethyst_core::transform::components","The default transform does nothing when used to transform an entity.",12,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"cmp","","",10,[[["self"],["parent"]],["ordering"]]],[11,"eq","amethyst_core::timing","",6,[[["self"],["time"]],["bool"]]],[11,"ne","","",6,[[["self"],["time"]],["bool"]]],[11,"eq","","",7,[[["self"],["stopwatch"]],["bool"]]],[11,"ne","","",7,[[["self"],["stopwatch"]],["bool"]]],[11,"eq","amethyst_core::transform::components","",12,[[["self"],["transform"]],["bool"]]],[11,"ne","","",12,[[["self"],["transform"]],["bool"]]],[11,"eq","","",10,[[["self"],["parent"]],["bool"]]],[11,"ne","","",10,[[["self"],["parent"]],["bool"]]],[11,"eq","amethyst_core","",1,[[["self"],["axis2"]],["bool"]]],[11,"eq","","",2,[[["self"],["axis3"]],["bool"]]],[11,"from","amethyst_core::transform::components","",12,[[["vector3",["f32"]]],["self"]]],[11,"from","","",11,N],[11,"as_ref","","",11,N],[11,"clone","amethyst_core::frame_limiter","",4,[[["self"]],["frameratelimitstrategy"]]],[11,"clone","","",18,[[["self"]],["frameratelimitconfig"]]],[11,"clone","amethyst_core::timing","",6,[[["self"]],["time"]]],[11,"clone","","",7,[[["self"]],["stopwatch"]]],[11,"clone","amethyst_core::transform::components","",12,[[["self"]],["transform"]]],[11,"clone","","",10,[[["self"]],["parent"]]],[11,"clone","","",11,[[["self"]],["globaltransform"]]],[11,"clone","amethyst_core","",1,[[["self"]],["axis2"]]],[11,"clone","","",2,[[["self"]],["axis3"]]],[11,"clone","","",0,[[["self"]],["named"]]],[11,"fmt","amethyst_core::frame_limiter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_core::timing","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_core::transform::components","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_core","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"borrow","amethyst_core::transform::components","",11,N],[11,"serialize","amethyst_core::frame_limiter","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_core::transform::components","",12,[[["self"],["s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_core","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","amethyst_core::frame_limiter","",4,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","amethyst_core::transform::components","",12,[[["d"]],["result",["transform"]]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","amethyst_core","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"run","amethyst_core::transform::systems","",13,N],[11,"setup","","",13,[[["self"],["resources"]]]],[11,"run","amethyst_core","",17,N],[11,"running_time","","",17,[[["self"]],["runningtime"]]],[11,"parent_entity","amethyst_core::transform::components","",10,[[["self"]],["entity"]]],[11,"read_from_world","amethyst_core","Read events from `World` and append to the given `Vec`",14,[[["self"],["world"],["vec"]]]],[11,"setup","","Setup event reader",14,[[["self"],["resources"]]]]],"paths":[[3,"Named"],[4,"Axis2"],[4,"Axis3"],[8,"SystemBundle"],[4,"FrameRateLimitStrategy"],[3,"FrameLimiter"],[3,"Time"],[4,"Stopwatch"],[3,"TransformBundle"],[4,"HierarchyEvent"],[3,"Parent"],[3,"GlobalTransform"],[3,"Transform"],[3,"TransformSystem"],[8,"EventReader"],[8,"SystemExt"],[8,"WithNamed"],[3,"Pausable"],[3,"FrameRateLimitConfig"]]};
searchIndex["amethyst_derive"]={"doc":"","items":[[24,"EventReader","amethyst_derive","",N,N],[24,"PrefabData","","Deriving a `Prefab` requires that `amethyst::ecs::Entity` and `amethyst:assets::{PrefabData, PrefabError, ProgressCounter}` are imported and visible in the current scope. This is due to how Rust macros work.",N,N]],"paths":[]};
searchIndex["amethyst_error"]={"doc":"Contains the `Error` type and company as used by Amethyst.","items":[[3,"Backtrace","amethyst_error","Representation of an owned and self-contained backtrace.",N,N],[3,"Error","","The error type used by Amethyst.",N,N],[3,"Causes","","An iterator over all the causes for this error.",N,N],[5,"err_msg","","Constructs an `Error` from a string.",N,[[["m"]],["error"]]],[8,"ResultExt","","Extra convenience functions for results based on core errors.",N,N],[10,"with_context","","Provide a context for the result in case it is an error.",0,[[["self"],["c"]],["result",["error"]]]],[11,"new","","Default constructor for our error types.",1,[[["e"]],["self"]]],[11,"with_source","","Update the source of an error.",1,[[["self"],["s"]],["self"]]],[11,"from_string","","Construct a new error from a string.",1,[[["m"]],["self"]]],[11,"backtrace","","Get backtrace.",1,[[["self"]],["option",["backtrace"]]]],[11,"source","","Get the source of the error.",1,[[["self"]],["option",["error"]]]],[11,"causes","","Iterate over all causes, including this one.",1,[[["self"]],["causes"]]],[11,"as_error","","Access the internal `std::error::Error` as a trait.",1,[[["self"]],["error"]]],[14,"format_err","","Constructs an `Error` using the standard string interpolation syntax.",N,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["vec",["backtraceframe"]]]],[11,"clone","","",2,[[["self"]],["backtrace"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",2,[[["vec",["backtraceframe"]]],["backtrace"]]],[11,"default","","",2,[[],["backtrace"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"from","","",1,[[["t"]],["error"]]],[11,"clone","","",3,[[["self"]],["causes"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",2,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",2,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",2,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",2,N]],"paths":[[8,"ResultExt"],[3,"Error"],[3,"Backtrace"],[3,"Causes"]]};
searchIndex["amethyst_gltf"]={"doc":"A crate for loading GLTF format scenes into Amethyst","items":[[3,"GltfSceneFormat","amethyst_gltf","Gltf scene format, will load a single scene from a Gltf file.",N,N],[3,"GltfPrefab","","`PrefabData` for loading Gltf files.",N,N],[12,"transform","","`Transform` will almost always be placed, the only exception is for the main `Entity` for certain scenarios (based on the data in the Gltf file)",0,N],[12,"mesh","","`MeshData` is placed on all `Entity`s with graphics primitives",0,N],[12,"mesh_handle","","Mesh handle after sub asset loading is done",0,N],[12,"material","","`Material` is placed on all `Entity`s with graphics primitives with material",0,N],[12,"animatable","","Loaded animations, if applicable, will always only be placed on the main `Entity`",0,N],[12,"skinnable","","Skin data is placed on `Entity`s involved in the skin, skeleton or graphical primitives using the skin",0,N],[12,"extent","","Node extent",0,N],[12,"name","","Node name",0,N],[3,"GltfNodeExtent","","A GLTF node extent",N,N],[12,"start","","The beginning of this extent",1,N],[12,"end","","The end of this extent",1,N],[3,"GltfMaterialSet","","Used during gltf loading to contain the materials used from scenes in the file",N,N],[3,"GltfSceneOptions","","Options used when loading a GLTF file",N,N],[12,"generate_tex_coords","","Generate texture coordinates if none exist in the Gltf file",2,N],[12,"load_animations","","Load animation data from the Gltf file",2,N],[12,"flip_v_coord","","Flip the v coordinate for all texture coordinates",2,N],[12,"scene_index","","Load the given scene index, if not supplied will either load the default scene (if set), or the first scene (only if there is only one scene, otherwise an `Error` will be returned).",2,N],[6,"GltfSceneLoaderSystem","","Load `GltfSceneAsset`s",N,N],[6,"GltfSceneAsset","","Gltf scene asset as returned by the `GltfSceneFormat`",N,N],[11,"move_to","","Move the scene so the center of the bounding box is at the given `target` location.",0,[[["self"],["point3",["f32"]]]]],[11,"scale_to","","Scale the scene to a specific max size",0,[[["self"],["f32"]]]],[11,"extend_range","","Extends this to include the input range.",1,[[["self"],["range"]]]],[11,"extend","","Extends this to include the provided extent.",1,[[["self"],["gltfnodeextent"]]]],[11,"centroid","","Returns the centroid of this extent",1,[[["self"]],["point3",["f32"]]]],[11,"distance","","Returns the 3 dimensional distance between the start and end of this.",1,[[["self"]],["vector3",["f32"]]]],[11,"valid","","Determines if this extent is valid.",1,[[["self"]],["bool"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"import","","",3,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_default","","",0,[[],["result",["string"]]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_default","","",1,[[],["result",["string"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_default","","",2,[[],["result",["string"]]]],[11,"default","","",0,[[],["gltfprefab"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",4,[[],["gltfmaterialset"]]],[11,"default","","",2,[[],["gltfsceneoptions"]]],[11,"from","","",1,[[["range"]],["self"]]],[11,"clone","","",3,[[["self"]],["gltfsceneformat"]]],[11,"clone","","",0,[[["self"]],["gltfprefab"]]],[11,"clone","","",1,[[["self"]],["gltfnodeextent"]]],[11,"clone","","",4,[[["self"]],["gltfmaterialset"]]],[11,"clone","","",2,[[["self"]],["gltfsceneoptions"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"add_to_entity","","",0,N],[11,"load_sub_assets","","",0,N],[11,"import","","",3,[[["self"],["string"],["arc",["source"]],["gltfsceneoptions"],["bool"]],["result",["formatvalue","error"]]]]],"paths":[[3,"GltfPrefab"],[3,"GltfNodeExtent"],[3,"GltfSceneOptions"],[3,"GltfSceneFormat"],[3,"GltfMaterialSet"]]};
searchIndex["amethyst_input"]={"doc":"A collection of abstractions for various input devices to be used with Amethyst.","items":[[3,"Bindings","amethyst_input","Used for saving and loading input settings.",N,N],[3,"InputBundle","","Bundle for adding the `InputHandler`.",N,N],[3,"InputHandler","","This struct holds state information about input devices.",N,N],[12,"bindings","","Maps inputs to actions and axes.",0,N],[3,"InputSystem","","Input system",N,N],[4,"Axis","","Represents any input represented by a float value from -1 to 1. Retrieve the value of this with axis_value.",N,N],[13,"Emulated","","Represents an emulated analogue axis made up of pair of digital inputs, like W and S keyboard buttons or `DPadUp` and `DPadDown` controller buttons.",1,N],[12,"pos","amethyst_input::Axis","Positive button, when pressed down axis value will return 1 if `neg` is not pressed down.",1,N],[12,"neg","","Negative button, when pressed down axis value will return -1 if `pos` is not pressed down.",1,N],[13,"Controller","amethyst_input","Represents an analogue axis of a controller.",1,N],[12,"controller_id","amethyst_input::Axis","A number representing specific controller, assigned and reused in order of connection.",1,N],[12,"axis","","The axis being bound",1,N],[12,"invert","","Whether or not to multiply the axis value by -1.",1,N],[12,"dead_zone","","Treat input values from -dead_zone to dead_zone as 0, linearly interpolate remaining ranges.",1,N],[4,"BindingError","amethyst_input","An enum of possible errors that can occur when binding an action or axis.",N,N],[13,"ComboContainsDuplicates","","Combo provided for action binding has two (or more) of the same button.",2,N],[13,"ComboAlreadyBound","","Combo provided was already bound to contained action.",2,N],[13,"ButtonBoundToAxis","","A combo of length 1 was provided, and it overlaps with an axis binding.",2,N],[13,"AxisButtonAlreadyBoundToAxis","","Axis buttons provided have overlap with an existing axis",2,N],[13,"AxisButtonAlreadyBoundToAction","","Axis buttons have overlap with an action combo of length 1.",2,N],[13,"ControllerAxisAlreadyBound","","That specific axis on that specific controller is already in use for an axis binding.",2,N],[4,"BindingsFileError","","An error occurred while loading the bindings file.",N,N],[13,"ConfigError","","Problem in amethyst_config",3,N],[13,"BindingError","","Problem with the bindings themselves.",3,N],[4,"Button","","A Button is any kind of digital input that the engine supports.",N,N],[13,"Key","","Virtual Keyboard keys, use this when the letter on the key matters more than the position of the key.",4,N],[13,"ScanCode","","Scan code from keyboard, use this when the position of the key matters more than the letter on the key.",4,N],[13,"Mouse","","Mouse buttons",4,N],[13,"MouseWheel","","Mouse wheel",4,N],[13,"Controller","","Controller buttons matching SDL controller model. A tuple of sequential controller_id in order of connection and specific type of used controller button.",4,N],[4,"ControllerAxis","","Controller axes matching SDL controller model",N,N],[13,"LeftX","","The X axis on the left stick",5,N],[13,"LeftY","","The Y axis on the left stick",5,N],[13,"RightX","","The X axis on the right stick",5,N],[13,"RightY","","The Y axis on the right stick",5,N],[13,"LeftTrigger","","The analog left trigger, not to be confused with the left bumper.",5,N],[13,"RightTrigger","","The analog right trigger, not to be confused with the right bumper.",5,N],[4,"ControllerButton","","Controller buttons matching SDL controller model",N,N],[13,"A","","The A button, typically the lower button in the \"diamond\" of buttons on the right side of the controller.",6,N],[13,"B","","The B button, typically the right button in the \"diamond\" of buttons on the right side of the controller.",6,N],[13,"X","","The X button, typically the left button in the \"diamond\" of buttons on the right side of the controller.",6,N],[13,"Y","","The Y button, typically the top button in the \"diamond\" of buttons on the right side of the controller.",6,N],[13,"DPadDown","","The dpad button pointed towards the player",6,N],[13,"DPadLeft","","The dpad button pointed to the player's left",6,N],[13,"DPadRight","","The dpad button pointed to the player's right",6,N],[13,"DPadUp","","The dpad button pointed away from the player.",6,N],[13,"LeftShoulder","","The digital left shoulder bumper. Usually located above the left trigger.",6,N],[13,"RightShoulder","","The digital right shoulder bumper. Usually located above the right trigger.",6,N],[13,"LeftStick","","If your press the left analog stick into the controller this button is pressed.",6,N],[13,"RightStick","","If your press the right analog stick into the controller this button is pressed.",6,N],[13,"Back","","The back button is typically a button slightly left of center with a leftward arrow on it.",6,N],[13,"Start","","The start button is typically a button slightly right of center with a rightward arrow on it.",6,N],[13,"Guide","","The centermost button on the controller. Large and green on an Xbox controller.",6,N],[4,"ControllerEvent","","Controller events generated by the SDL events system.",N,N],[13,"ControllerAxisMoved","","Movement event on a controller axis.",7,N],[12,"which","amethyst_input::ControllerEvent","The joystick instance id.",7,N],[12,"axis","","The controller axis.",7,N],[12,"value","","The axis value (range: -32768 to 32767).",7,N],[13,"ControllerButtonPressed","amethyst_input","Button press event on a controller.",7,N],[12,"which","amethyst_input::ControllerEvent","The joystick instance id.",7,N],[12,"button","","The controller button.",7,N],[13,"ControllerButtonReleased","amethyst_input","Button press event on a controller.",7,N],[12,"which","amethyst_input::ControllerEvent","The joystick instance id.",7,N],[12,"button","","The controller button.",7,N],[13,"ControllerDisconnected","amethyst_input","Controller disconnect event.",7,N],[12,"which","amethyst_input::ControllerEvent","The joystick device index for the `SDL_CONTROLLERDEVICEADDED` event or instance id for the `SDL_CONTROLLERDEVICEREMOVED` or `SDL_CONTROLLERDEVICEREMAPPED` event",7,N],[13,"ControllerConnected","amethyst_input","Controller connected event.",7,N],[12,"which","amethyst_input::ControllerEvent","The joystick device index for the `SDL_CONTROLLERDEVICEADDED` event or instance id for the `SDL_CONTROLLERDEVICEREMOVED` or `SDL_CONTROLLERDEVICEREMAPPED` event",7,N],[4,"InputEvent","amethyst_input","Events generated by the input system",N,N],[13,"KeyPressed","","A key was pressed down, sent exactly once per key press.",8,N],[12,"key_code","amethyst_input::InputEvent","The `VirtualKeyCode`, used for semantic info. i.e. \"W\" was pressed",8,N],[12,"scancode","","The scancode, used for positional info. i.e. The third key on the first row was pressed.",8,N],[13,"KeyReleased","amethyst_input","A key was released, sent exactly once per key release.",8,N],[12,"key_code","amethyst_input::InputEvent","The `VirtualKeyCode`, used for semantic info. i.e. \"W\" was released",8,N],[12,"scancode","","The scancode, used for positional info. i.e. The third key on the first row was released.",8,N],[13,"KeyTyped","amethyst_input","A unicode character was received by the window.  Good for typing.",8,N],[13,"MouseButtonPressed","","A mouse button was pressed down, sent exactly once per press.",8,N],[13,"MouseButtonReleased","","A mouse button was released, sent exactly once per release.",8,N],[13,"ButtonPressed","","A button was pressed.",8,N],[13,"ButtonReleased","","A button was released.",8,N],[13,"CursorMoved","","The mouse pointer moved on screen",8,N],[12,"delta_x","amethyst_input::InputEvent","The amount the cursor moved horizontally in pixels.",8,N],[12,"delta_y","","The amount the cursor moved vertically in pixels.",8,N],[13,"MouseMoved","amethyst_input","The mouse device moved.  Use this for any use of the mouse that doesn't involve a standard mouse pointer.",8,N],[12,"delta_x","amethyst_input::InputEvent","The amount the mouse moved horizontally.",8,N],[12,"delta_y","","The amount the mouse moved vertically.",8,N],[13,"MouseWheelMoved","amethyst_input","The mousewheel was moved in either direction",8,N],[13,"ControllerAxisMoved","","A controller Axis was moved.",8,N],[12,"which","amethyst_input::InputEvent","The id for the controller whose axis moved.",8,N],[12,"axis","","The axis that moved on the controller.",8,N],[12,"value","","The amount that the axis moved.",8,N],[13,"ControllerButtonPressed","amethyst_input","A controller button was pressed.",8,N],[12,"which","amethyst_input::InputEvent","The id for the controller whose button was pressed.",8,N],[12,"button","","The button that was pressed.",8,N],[13,"ControllerButtonReleased","amethyst_input","A controller button was released.",8,N],[12,"which","amethyst_input::InputEvent","The id for the controller whose button was released.",8,N],[12,"button","","The button that was released.",8,N],[13,"ControllerConnected","amethyst_input","New controller was connected.",8,N],[12,"which","amethyst_input::InputEvent","The id for the controller connected.",8,N],[13,"ControllerDisconnected","amethyst_input","Controller was disconnected, it's id might be reused later.",8,N],[12,"which","amethyst_input::InputEvent","The id for the controller disconnected.",8,N],[13,"ActionPressed","amethyst_input","The associated action had any related button or combination pressed.",8,N],[13,"ActionReleased","","The associated action had any related button or combination released.",8,N],[13,"ActionWheelMoved","","The associated action has its mouse wheel moved.",8,N],[4,"ScrollDirection","","Indicates in what direction a mouse wheel scroll event was.",N,N],[13,"ScrollUp","","Scroll was upwards",9,N],[13,"ScrollDown","","Scroll was downwards",9,N],[13,"ScrollLeft","","Scroll was to the left",9,N],[13,"ScrollRight","","Scroll was to the right",9,N],[5,"get_input_axis_simple","","Gets the input axis value from the `InputHandler`. If the name is None, it will return the default value of the axis (0.0).",N,[[["option"],["inputhandler"]],["f32"]]],[5,"get_key","","If this event was for manipulating a keyboard key then this will return the `VirtualKeyCode` and the new state.",N,[[["event"]],["option"]]],[5,"is_close_requested","","Returns true if the event passed in is a request to close the game window.",N,[[["event"]],["bool"]]],[5,"is_key_down","","Returns true if the event passed in is a key down event for the provided `VirtualKeyCode`.",N,[[["event"],["virtualkeycode"]],["bool"]]],[11,"new","","Creates a new empty Bindings structure",10,[[],["self"]]],[11,"insert_axis","","Assign an axis to an ID value",10,[[["self"],["a"],["axis"]],["result",["option","bindingerror"]]]],[11,"remove_axis","","Removes an axis, this will return the removed axis if successful.",10,[[["self"],["a"]],["option",["axis"]]]],[11,"axis","","Returns a reference to an axis.",10,[[["self"],["a"]],["option",["axis"]]]],[11,"axes","","Gets a list of all axes",10,N],[11,"insert_action_binding","","Add a button or button combination to an action.",10,[[["self"],["ac"],["b"]],["result",["bindingerror"]]]],[11,"remove_action_binding","","Removes an action binding that was assigned previously.",10,N],[11,"action_bindings","","Returns an action's bindings.",10,N],[11,"actions","","Gets a list of all action bindings",10,N],[11,"check_invariants","","Check that this structure upholds its guarantees. Should only be necessary when serializing or deserializing the bindings.",10,[[["self"]],["result",["bindingerror"]]]],[11,"new","","Create a new input bundle with no bindings",11,[[],["self"]]],[11,"with_bindings","","Use the provided bindings with the `InputHandler`",11,[[["self"],["bindings"]],["self"]]],[11,"with_bindings_from_file","","Load bindings from file",11,[[["self"],["p"]],["result",["bindingsfileerror"]]]],[11,"new","","Creates a new input handler.",0,[[],["self"]]],[11,"send_event","","Updates the input handler with a new engine event.",0,[[["self"],["event"],["eventchannel"],["f64"]]]],[11,"send_controller_event","","Updates the input handler with a new controller event.",0,[[["self"],["controllerevent"],["eventchannel"]]]],[11,"keys_that_are_down","","Returns an iterator over all keys that are down.",0,N],[11,"key_is_down","","Checks if a key is down.",0,[[["self"],["virtualkeycode"]],["bool"]]],[11,"mouse_buttons_that_are_down","","Returns an iterator over all pressed mouse buttons",0,N],[11,"mouse_button_is_down","","Checks if a mouse button is down.",0,[[["self"],["mousebutton"]],["bool"]]],[11,"scan_codes_that_are_down","","Returns an iterator over all pressed scan codes",0,N],[11,"scan_code_is_down","","Checks if the key corresponding to a scan code is down.",0,[[["self"],["u32"]],["bool"]]],[11,"controller_buttons_that_are_down","","Returns an iterator over all pressed controller buttons on all controllers.",0,N],[11,"controller_button_is_down","","Checks if a controller button is down on specific controller.",0,[[["self"],["u32"],["controllerbutton"]],["bool"]]],[11,"connected_controllers","","List controller ids of all currently connected controllers. IDs are assigned sequentially in the order of connection starting from 0, always taking the lowest next free number.",0,N],[11,"is_controller_connected","","Returns true if a controller with the given id is connected.",0,[[["self"],["u32"]],["bool"]]],[11,"mouse_position","","Gets the current mouse position.",0,[[["self"]],["option"]]],[11,"buttons_that_are_down","","Returns an iterator over all buttons that are down.",0,N],[11,"button_is_down","","Checks if a button is down.",0,[[["self"],["button"]],["bool"]]],[11,"axis_value","","Returns the value of an axis by the string id, if the id doesn't exist this returns None.",0,[[["self"],["t"]],["option",["f64"]]]],[11,"action_is_down","","Returns true if any of the actions bindings is down.",0,[[["self"],["t"]],["option",["bool"]]]],[11,"new","","Create a new input system. Needs a reader id for `EventHandler<winit::Event>`.",12,[[["option",["bindings"]]],["self"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"load","","",10,[[["p"]],["t"]]],[11,"load_no_fallback","","",10,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",10,N],[11,"write","","",10,[[["self"],["p"]],["result",["configerror"]]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_default","","",10,[[],["result",["string"]]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_default","","",0,[[],["result",["string"]]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"pausable","","",12,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",12,N],[11,"setup","","",12,N],[11,"setup","","",12,N],[11,"run","","",12,N],[11,"reads","","",12,N],[11,"writes","","",12,N],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",1,[[["self"],["axis"]],["bool"]]],[11,"ne","","",1,[[["self"],["axis"]],["bool"]]],[11,"eq","","",2,[[["self"],["bindingerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["bindingerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["button"]],["bool"]]],[11,"ne","","",4,[[["self"],["button"]],["bool"]]],[11,"eq","","",5,[[["self"],["controlleraxis"]],["bool"]]],[11,"eq","","",6,[[["self"],["controllerbutton"]],["bool"]]],[11,"eq","","",7,[[["self"],["controllerevent"]],["bool"]]],[11,"ne","","",7,[[["self"],["controllerevent"]],["bool"]]],[11,"eq","","",8,[[["self"],["inputevent"]],["bool"]]],[11,"ne","","",8,[[["self"],["inputevent"]],["bool"]]],[11,"eq","","",9,[[["self"],["scrolldirection"]],["bool"]]],[11,"from","","",3,[[["bindingerror"]],["self"]]],[11,"from","","",3,[[["configerror"]],["self"]]],[11,"from","","",4,[[["virtualkeycode"]],["self"]]],[11,"from","","",4,[[["mousebutton"]],["self"]]],[11,"clone","","",1,[[["self"]],["axis"]]],[11,"clone","","",10,[[["self"]],["bindings"]]],[11,"clone","","",2,[[["self"]],["bindingerror"]]],[11,"clone","","",4,[[["self"]],["button"]]],[11,"clone","","",5,[[["self"]],["controlleraxis"]]],[11,"clone","","",6,[[["self"]],["controllerbutton"]]],[11,"clone","","",7,[[["self"]],["controllerevent"]]],[11,"clone","","",8,[[["self"]],["inputevent"]]],[11,"clone","","",9,[[["self"]],["scrolldirection"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"source","","",3,[[["self"]],["option",["error"]]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"build","","",11,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"run","","",12,N],[11,"setup","","",12,[[["self"],["resources"]]]]],"paths":[[3,"InputHandler"],[4,"Axis"],[4,"BindingError"],[4,"BindingsFileError"],[4,"Button"],[4,"ControllerAxis"],[4,"ControllerButton"],[4,"ControllerEvent"],[4,"InputEvent"],[4,"ScrollDirection"],[3,"Bindings"],[3,"InputBundle"],[3,"InputSystem"]]};
searchIndex["amethyst_locale"]={"doc":"amethyst_locale","items":[[3,"LocaleFormat","amethyst_locale","Loads the strings from localisation files.",N,N],[3,"Locale","","A loaded locale.",N,N],[12,"bundle","","The message context.",0,N],[6,"LocaleHandle","","A handle to a locale.",N,N],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"import","","",1,N],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["result",["processingstate","error"]]]],[11,"clone","","",1,[[["self"]],["localeformat"]]],[11,"import","","",1,N]],"paths":[[3,"Locale"],[3,"LocaleFormat"]]};
searchIndex["amethyst_network"]={"doc":"Provides a client-server networking architecture to amethyst.","items":[[3,"NetworkBundle","amethyst_network","A convenience bundle to create the infrastructure needed to send and receive network messages.",N,N],[3,"NetConnection","","A network connection target data.",N,N],[12,"target_receiver","","The target remote socket address who is listening for incoming packets.",0,N],[12,"target_sender","","The target remote socket address who is sending packets to us.",0,N],[12,"state","","The state of the connection.",0,N],[12,"send_buffer","","The buffer of events to be sent.",0,N],[12,"receive_buffer","","The buffer of events that have been received.",0,N],[3,"NetIdentity","","A network identity. It can represent either a client or a server. It represents anything that can own an entity or a component. Think of it as an identity card. When used as a resource, it designates the local network uuid.",N,N],[12,"uuid","","The uuid identifying this NetIdentity.",1,N],[3,"FilterConnected","","A filter that checks if the incoming event is from a connected client.",N,N],[3,"NetSocketSystem","","The System managing the network state and connections. The T generic parameter corresponds to the network event type. Receives events and filters them. Received events will be inserted into the NetReceiveBuffer resource. To send an event, add it to the NetSendBuffer resource.",N,N],[12,"filters","","The list of filters applied on the events received.",2,N],[3,"Host","","'Host' abstracts TCP and UDP sockets away.",N,N],[3,"ServerConfig","","The configuration used for the networking system.",N,N],[12,"udp_recv_addr","","Address at which the UDP server will listen for incoming packets.",3,N],[12,"udp_send_addr","","Address from which the UDP server will be sending packets.",3,N],[12,"max_throughput","","Specifies what the maximal packets that could be handled by the server. This value is meant for preventing some loops to read infinitely long when many packets are send and received. This value is by default 5000.",3,N],[4,"ConnectionState","","The state of the connection.",N,N],[13,"Connected","","The connection is established.",4,N],[13,"Connecting","","The connection is being established.",4,N],[13,"Disconnected","","The connection has been dropped.",4,N],[4,"NetEvent","","The basic network events shipped with amethyst.",N,N],[13,"Connect","","Ask to connect to the server.",5,N],[12,"client_uuid","amethyst_network::NetEvent","The client uuid.",5,N],[13,"Connected","amethyst_network","Reply to the client that the connection has been accepted.",5,N],[12,"server_uuid","amethyst_network::NetEvent","The server uuid.",5,N],[13,"ConnectionRefused","amethyst_network","Reply to the client that the connection has been refused.",5,N],[12,"reason","amethyst_network::NetEvent","The reason of the refusal.",5,N],[13,"Disconnect","amethyst_network","Tell the server that the client is disconnecting.",5,N],[12,"reason","amethyst_network::NetEvent","The reason of the disconnection.",5,N],[13,"Disconnected","amethyst_network","Notify the clients(including the one being disconnected) that a client has been disconnected from the server.",5,N],[12,"reason","amethyst_network::NetEvent","The reason of the disconnection.",5,N],[13,"TextMessage","amethyst_network","A simple text message event.",5,N],[12,"msg","amethyst_network::NetEvent","The message.",5,N],[13,"Custom","amethyst_network","A user-defined type containing more network event types.",5,N],[4,"ServerSocketEvent","","Net event which occurred on the network.",N,N],[13,"Packet","","event containing a packet with received data",6,N],[13,"Error","","event containing an error that has occurred in the network",6,N],[13,"ClientEvent","","events that can happen with a client",6,N],[13,"Empty","","Event used for a default initialisation.",6,N],[5,"send_event","","Sends an event to the target NetConnection using the provided network Socket. The socket has to be bound.",N,[[["netevent"],["socketaddr"],["syncsender"]]]],[11,"new","","Creates a new NetworkBundle.",7,[[["socketaddr"],["socketaddr"],["vec",["box"]]],["self"]]],[11,"new","","Construct a new NetConnection. `SocketAddr` is the address that will be connected to.",0,[[["socketaddr"],["socketaddr"]],["self"]]],[11,"send_buffer_early_read","","Function used ONLY by NetSocketSystem. Since most users will want to both create the connection and send messages on the same frame, we need a way to read those. Since the NetSocketSystem runs after the creation of the NetConnection, it cannot possibly have registered his reader early enough to catch the initial messages that the user wants to send.",0,[[["self"]],["eventiterator",["netevent"]]]],[11,"new","","Creates a new FilterConnected filter.",8,[[],["self"]]],[11,"custom","","Tries to convert a NetEvent to a custom event type.",5,[[["self"]],["option"]]],[11,"new","","Creates a `NetSocketSystem` and binds the Socket on the ip and port added in parameters.",2,[[["serverconfig"],["vec",["box"]]],["result"]]],[11,"run","","This will start and return an instance of the host. 1: Fire up a TCP-sender and TCP-receiver if enabled in config. 2: Fire up a UDP-sender and UDP-receiver. 3: Set up some `channels` to communicate with underlying threads.",9,[[["serverconfig"]],["result",["host"]]]],[11,"udp_receive_handle","","Get the handle to the internals of the UDP-receiving threat.",9,[[["self"]],["arc",["mutex"]]]],[11,"udp_send_handle","","Get the handle to the internals of the UDP-sending thread.",9,[[["self"]],["arc",["sendhandler"]]]],[11,"send_tcp","","Schedule a TCP-packet for sending.",9,N],[11,"send_udp","","Schedule a UDP-packet for sending.",9,[[["self"],["packet"]],["result"]]],[6,"Result","","The `amethyst_network` result type.",N,N],[8,"NetFilter","","Network filter base trait providing an event filtering interface.",N,N],[10,"allow","","Check if the event is allowed to pass through this filter.",10,[[["self"],["socketaddr"],["netevent"]],["bool"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_default","","",1,[[],["result",["string"]]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"pausable","","",2,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",2,N],[11,"setup","","",2,N],[11,"setup","","",2,N],[11,"run","","",2,N],[11,"reads","","",2,N],[11,"writes","","",2,N],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_default","","",3,[[],["result",["string"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"allow","","Checks if the event is from a connected client. Note: This is not usable currently.",8,[[["self"],["socketaddr"],["netevent"]],["bool"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["connectionstate"]],["bool"]]],[11,"eq","","",5,[[["self"],["netevent"]],["bool"]]],[11,"ne","","",5,[[["self"],["netevent"]],["bool"]]],[11,"clone","","",4,[[["self"]],["connectionstate"]]],[11,"clone","","",5,[[["self"]],["netevent"]]],[11,"clone","","",3,[[["self"]],["serverconfig"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"build","","Build the networking bundle by adding the networking system to the application.",7,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"run","","",2,N],[11,"setup","","",2,[[["self"],["resources"]]]]],"paths":[[3,"NetConnection"],[3,"NetIdentity"],[3,"NetSocketSystem"],[3,"ServerConfig"],[4,"ConnectionState"],[4,"NetEvent"],[4,"ServerSocketEvent"],[3,"NetworkBundle"],[3,"FilterConnected"],[3,"Host"],[8,"NetFilter"]]};
searchIndex["amethyst_renderer"]={"doc":"A data parallel rendering engine developed by the [Amethyst][am] project.","items":[[4,"DeviceEvent","amethyst_renderer","Represents raw hardware events that are not associated with any particular window.",N,N],[13,"Added","","",0,N],[13,"Removed","","",0,N],[13,"MouseMotion","","Change in physical position of a pointing device.",0,N],[12,"delta","amethyst_renderer::DeviceEvent","(x, y) change in position in unspecified units.",0,N],[13,"MouseWheel","amethyst_renderer","Physical scroll event",0,N],[12,"delta","amethyst_renderer::DeviceEvent","",0,N],[13,"Motion","amethyst_renderer","Motion on some analog axis.  This event will be reported for all arbitrary input devices that winit supports on this platform, including mouse devices.  If the device is a mouse device then this will be reported alongside the MouseMotion event.",0,N],[12,"axis","amethyst_renderer::DeviceEvent","",0,N],[12,"value","","",0,N],[13,"Button","amethyst_renderer","",0,N],[12,"button","amethyst_renderer::DeviceEvent","",0,N],[12,"state","","",0,N],[13,"Key","amethyst_renderer","",0,N],[13,"Text","","",0,N],[12,"codepoint","amethyst_renderer::DeviceEvent","",0,N],[4,"ElementState","amethyst_renderer","Describes the input state of a key.",N,N],[13,"Pressed","","",1,N],[13,"Released","","",1,N],[4,"Event","","Describes a generic event.",N,N],[13,"WindowEvent","","",2,N],[12,"window_id","amethyst_renderer::Event","",2,N],[12,"event","","",2,N],[13,"DeviceEvent","amethyst_renderer","",2,N],[12,"device_id","amethyst_renderer::Event","",2,N],[12,"event","","",2,N],[13,"Awakened","amethyst_renderer","",2,N],[13,"Suspended","","The application has been suspended or resumed.",2,N],[3,"KeyboardInput","","Describes a keyboard input event.",N,N],[12,"scancode","","Identifies the physical key pressed",3,N],[12,"state","","",3,N],[12,"virtual_keycode","","Identifies the semantic meaning of the key",3,N],[12,"modifiers","","Modifier keys active at the time of this input.",3,N],[4,"MouseButton","","Describes a button of a mouse controller.",N,N],[13,"Left","","",4,N],[13,"Right","","",4,N],[13,"Middle","","",4,N],[13,"Other","","",4,N],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",N,N],[13,"Key1","","The '1' key over the letters.",5,N],[13,"Key2","","The '2' key over the letters.",5,N],[13,"Key3","","The '3' key over the letters.",5,N],[13,"Key4","","The '4' key over the letters.",5,N],[13,"Key5","","The '5' key over the letters.",5,N],[13,"Key6","","The '6' key over the letters.",5,N],[13,"Key7","","The '7' key over the letters.",5,N],[13,"Key8","","The '8' key over the letters.",5,N],[13,"Key9","","The '9' key over the letters.",5,N],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",5,N],[13,"A","","",5,N],[13,"B","","",5,N],[13,"C","","",5,N],[13,"D","","",5,N],[13,"E","","",5,N],[13,"F","","",5,N],[13,"G","","",5,N],[13,"H","","",5,N],[13,"I","","",5,N],[13,"J","","",5,N],[13,"K","","",5,N],[13,"L","","",5,N],[13,"M","","",5,N],[13,"N","","",5,N],[13,"O","","",5,N],[13,"P","","",5,N],[13,"Q","","",5,N],[13,"R","","",5,N],[13,"S","","",5,N],[13,"T","","",5,N],[13,"U","","",5,N],[13,"V","","",5,N],[13,"W","","",5,N],[13,"X","","",5,N],[13,"Y","","",5,N],[13,"Z","","",5,N],[13,"Escape","","The Escape key, next to F1.",5,N],[13,"F1","","",5,N],[13,"F2","","",5,N],[13,"F3","","",5,N],[13,"F4","","",5,N],[13,"F5","","",5,N],[13,"F6","","",5,N],[13,"F7","","",5,N],[13,"F8","","",5,N],[13,"F9","","",5,N],[13,"F10","","",5,N],[13,"F11","","",5,N],[13,"F12","","",5,N],[13,"F13","","",5,N],[13,"F14","","",5,N],[13,"F15","","",5,N],[13,"F16","","",5,N],[13,"F17","","",5,N],[13,"F18","","",5,N],[13,"F19","","",5,N],[13,"F20","","",5,N],[13,"F21","","",5,N],[13,"F22","","",5,N],[13,"F23","","",5,N],[13,"F24","","",5,N],[13,"Snapshot","","Print Screen/SysRq.",5,N],[13,"Scroll","","Scroll Lock.",5,N],[13,"Pause","","Pause/Break key, next to Scroll lock.",5,N],[13,"Insert","","`Insert`, next to Backspace.",5,N],[13,"Home","","",5,N],[13,"Delete","","",5,N],[13,"End","","",5,N],[13,"PageDown","","",5,N],[13,"PageUp","","",5,N],[13,"Left","","",5,N],[13,"Up","","",5,N],[13,"Right","","",5,N],[13,"Down","","",5,N],[13,"Back","","The Backspace key, right over Enter.",5,N],[13,"Return","","The Enter key.",5,N],[13,"Space","","The space bar.",5,N],[13,"Compose","","The \"Compose\" key on Linux.",5,N],[13,"Caret","","",5,N],[13,"Numlock","","",5,N],[13,"Numpad0","","",5,N],[13,"Numpad1","","",5,N],[13,"Numpad2","","",5,N],[13,"Numpad3","","",5,N],[13,"Numpad4","","",5,N],[13,"Numpad5","","",5,N],[13,"Numpad6","","",5,N],[13,"Numpad7","","",5,N],[13,"Numpad8","","",5,N],[13,"Numpad9","","",5,N],[13,"AbntC1","","",5,N],[13,"AbntC2","","",5,N],[13,"Add","","",5,N],[13,"Apostrophe","","",5,N],[13,"Apps","","",5,N],[13,"At","","",5,N],[13,"Ax","","",5,N],[13,"Backslash","","",5,N],[13,"Calculator","","",5,N],[13,"Capital","","",5,N],[13,"Colon","","",5,N],[13,"Comma","","",5,N],[13,"Convert","","",5,N],[13,"Decimal","","",5,N],[13,"Divide","","",5,N],[13,"Equals","","",5,N],[13,"Grave","","",5,N],[13,"Kana","","",5,N],[13,"Kanji","","",5,N],[13,"LAlt","","",5,N],[13,"LBracket","","",5,N],[13,"LControl","","",5,N],[13,"LShift","","",5,N],[13,"LWin","","",5,N],[13,"Mail","","",5,N],[13,"MediaSelect","","",5,N],[13,"MediaStop","","",5,N],[13,"Minus","","",5,N],[13,"Multiply","","",5,N],[13,"Mute","","",5,N],[13,"MyComputer","","",5,N],[13,"NavigateForward","","",5,N],[13,"NavigateBackward","","",5,N],[13,"NextTrack","","",5,N],[13,"NoConvert","","",5,N],[13,"NumpadComma","","",5,N],[13,"NumpadEnter","","",5,N],[13,"NumpadEquals","","",5,N],[13,"OEM102","","",5,N],[13,"Period","","",5,N],[13,"PlayPause","","",5,N],[13,"Power","","",5,N],[13,"PrevTrack","","",5,N],[13,"RAlt","","",5,N],[13,"RBracket","","",5,N],[13,"RControl","","",5,N],[13,"RShift","","",5,N],[13,"RWin","","",5,N],[13,"Semicolon","","",5,N],[13,"Slash","","",5,N],[13,"Sleep","","",5,N],[13,"Stop","","",5,N],[13,"Subtract","","",5,N],[13,"Sysrq","","",5,N],[13,"Tab","","",5,N],[13,"Underline","","",5,N],[13,"Unlabeled","","",5,N],[13,"VolumeDown","","",5,N],[13,"VolumeUp","","",5,N],[13,"Wake","","",5,N],[13,"WebBack","","",5,N],[13,"WebFavorites","","",5,N],[13,"WebForward","","",5,N],[13,"WebHome","","",5,N],[13,"WebRefresh","","",5,N],[13,"WebSearch","","",5,N],[13,"WebStop","","",5,N],[13,"Yen","","",5,N],[13,"Copy","","",5,N],[13,"Paste","","",5,N],[13,"Cut","","",5,N],[4,"WindowEvent","","Describes an event from a `Window`.",N,N],[13,"Resized","","The size of the window has changed. Contains the client area's new dimensions.",6,N],[13,"Moved","","The position of the window has changed. Contains the window's new position.",6,N],[13,"CloseRequested","","The window has been requested to close.",6,N],[13,"Destroyed","","The window has been destroyed.",6,N],[13,"DroppedFile","","A file has been dropped into the window.",6,N],[13,"HoveredFile","","A file is being hovered over the window.",6,N],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",6,N],[13,"ReceivedCharacter","","The window received a unicode character.",6,N],[13,"Focused","","The window gained or lost focus.",6,N],[13,"KeyboardInput","","An event from the keyboard has been received.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"input","","",6,N],[13,"CursorMoved","amethyst_renderer","The cursor has moved on the window.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"position","","(x,y) coords in pixels relative to the top-left corner of the window. Because the range of this data is limited by the display area and it may have been transformed by the OS to implement effects such as cursor acceleration, it should not be used to implement non-cursor-like interactions such as 3D camera control.",6,N],[12,"modifiers","","",6,N],[13,"CursorEntered","amethyst_renderer","The cursor has entered the window.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[13,"CursorLeft","amethyst_renderer","The cursor has left the window.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[13,"MouseWheel","amethyst_renderer","A mouse wheel movement or touchpad scroll occurred.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"delta","","",6,N],[12,"phase","","",6,N],[12,"modifiers","","",6,N],[13,"MouseInput","amethyst_renderer","An mouse button press has been received.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"state","","",6,N],[12,"button","","",6,N],[12,"modifiers","","",6,N],[13,"TouchpadPressure","amethyst_renderer","Touchpad pressure event.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"pressure","","",6,N],[12,"stage","","",6,N],[13,"AxisMotion","amethyst_renderer","Motion on some analog axis. May report data redundant to other, more specific events.",6,N],[12,"device_id","amethyst_renderer::WindowEvent","",6,N],[12,"axis","","",6,N],[12,"value","","",6,N],[13,"Refresh","amethyst_renderer","The window needs to be redrawn.",6,N],[13,"Touch","","Touch event has been received",6,N],[13,"HiDpiFactorChanged","","The DPI factor of the window has changed.",6,N],[4,"FilterMethod","","How to filter the texture when sampling. They correspond to increasing levels of quality, but also cost. Mipmap, trilinear and anisotropic filtering require mipmapping, but the other filtering methods do not.",N,N],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",7,N],[13,"Mipmap","","Add simple mipmapping.",7,N],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase quality.",7,N],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",7,N],[13,"Anisotropic","","Anisotropic filtering with a given \"max\", must be between 1 and 16, inclusive.",7,N],[3,"SamplerInfo","","Specifies how to sample from a texture.",N,N],[12,"filter","","Filter method to use.",8,N],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL speak).",8,N],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For example, if it would select mipmap level 2 and lod_bias is 1, it will use mipmap level 3.",8,N],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",8,N],[12,"comparison","","Comparison mode, used primary for a shadow map.",8,N],[12,"border","","Border color is used when one of the wrap modes is set to border.",8,N],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only carry information about the number of bits per each channel. The actual types are up to the views to decide and interpret. The actual components are up to the swizzle to define.",N,N],[13,"R4_G4","","",9,N],[13,"R4_G4_B4_A4","","",9,N],[13,"R5_G5_B5_A1","","",9,N],[13,"R5_G6_B5","","",9,N],[13,"R8","","",9,N],[13,"R8_G8","","",9,N],[13,"R8_G8_B8_A8","","",9,N],[13,"R10_G10_B10_A2","","",9,N],[13,"R11_G11_B10","","",9,N],[13,"R16","","",9,N],[13,"R16_G16","","",9,N],[13,"R16_G16_B16","","",9,N],[13,"R16_G16_B16_A16","","",9,N],[13,"R32","","",9,N],[13,"R32_G32","","",9,N],[13,"R32_G32_B32","","",9,N],[13,"R32_G32_B32_A32","","",9,N],[13,"B8_G8_R8_A8","","",9,N],[13,"D16","","",9,N],[13,"D24","","",9,N],[13,"D24_S8","","",9,N],[13,"D32","","",9,N],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",N,N],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is the default.",10,N],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",10,N],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",10,N],[13,"Border","","Use border color.",10,N],[3,"Blend","","",N,N],[12,"color","","",11,N],[12,"alpha","","",11,N],[3,"BlendChannel","","",N,N],[12,"equation","","",12,N],[12,"source","","",12,N],[12,"destination","","",12,N],[4,"BlendValue","","",N,N],[13,"SourceColor","","",13,N],[13,"SourceAlpha","","",13,N],[13,"DestColor","","",13,N],[13,"DestAlpha","","",13,N],[13,"ConstColor","","",13,N],[13,"ConstAlpha","","",13,N],[3,"ColorMask","","",N,N],[4,"Equation","","",N,N],[13,"Add","","Adds source and destination. Source and destination are multiplied by blending parameters before addition.",14,N],[13,"Sub","","Subtracts destination from source. Source and destination are multiplied by blending parameters before subtraction.",14,N],[13,"RevSub","","Subtracts source from destination. Source and destination are multiplied by blending parameters before subtraction.",14,N],[13,"Min","","Component-wise minimum value of source and destination. Blending parameters are ignored.",14,N],[13,"Max","","Component-wise maximum value of source and destination. Blending parameters are ignored.",14,N],[4,"Factor","","",N,N],[13,"Zero","","",15,N],[13,"One","","",15,N],[13,"SourceAlphaSaturated","","",15,N],[13,"ZeroPlus","","",15,N],[13,"OneMinus","","",15,N],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the value of the destination multiplied by the inverse of the source alpha channel. Has the usual transparency effect: mixes the two colors using a fraction of each one specified by the alpha of the source.",N,N],[17,"REPLACE","","When combining two fragments, choose the source value",N,N],[3,"Blink","","Blink Component Periodically adds and removes a `Hidden` Component on the entity this is attached to.",N,N],[12,"delay","","Period of a full blink cycle.",16,N],[12,"timer","","Timer value keeping track of the time during the blink cycle.",16,N],[12,"absolute_time","","Whether to use the scaled or unscaled time.",16,N],[3,"BlinkSystem","","System updating the `Blink` component.",N,N],[3,"RenderBundle","","Rendering bundle",N,N],[3,"ActiveCamera","","Active camera resource, used by the renderer to choose which camera to get the view matrix from. If no active camera is found, the first camera will be used as a fallback.",N,N],[12,"entity","","Camera entity",17,N],[3,"ActiveCameraPrefab","","Active camera prefab",N,N],[3,"Camera","","Camera struct.",N,N],[12,"proj","","Graphical projection of the camera.",18,N],[3,"Rgba","","An RGBA color value.",N,N],[12,"0","","",19,N],[12,"1","","",19,N],[12,"2","","",19,N],[12,"3","","",19,N],[3,"DisplayConfig","","Structure for holding the renderer configuration.",N,N],[12,"title","","Name of the application window.",20,N],[12,"fullscreen","","Enables or disables fullscreen mode.",20,N],[12,"dimensions","","Current window dimensions, measured in pixels (px).",20,N],[12,"min_dimensions","","Minimum window dimensions, measured in pixels (px).",20,N],[12,"max_dimensions","","Maximum window dimensions, measured in pixels (px).",20,N],[12,"icon","","Path to window icon.",20,N],[12,"vsync","","Enables or disables vertical synchronization.",20,N],[12,"multisampling","","Level of MSAA anti-aliasing.",20,N],[12,"visibility","","Sets the visibility of the window.",20,N],[12,"always_on_top","","Whether the window should always be on top of other windows.",20,N],[12,"decorations","","Whether the window should have borders and bars.",20,N],[12,"maximized","","Whether the window should be maximized upon creation.",20,N],[12,"multitouch","","Enable multitouch on iOS.",20,N],[12,"resizable","","Whether the window is resizable or not.",20,N],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors with alpha values different than 1.0 will produce a transparent window.",20,N],[3,"DebugLines","","Resource that stores non-persistent debug lines to be rendered in DebugLinesPass draw pass. The vector is automatically cleared after being rendered.",N,N],[12,"lines","","Lines to be rendered",21,N],[3,"DebugLinesComponent","","Component that stores persistent debug lines to be rendered in DebugLinesPass draw pass. The vector can only be cleared manually.",N,N],[12,"lines","","Lines to be rendered",22,N],[3,"BmpFormat","","Allows loading of BMP files.",N,N],[3,"ComboMeshCreator","","Mesh creator for `VertexBufferCombination`.",N,N],[3,"GraphicsPrefab","","`PrefabData` for loading graphics, ie `Mesh` + `Material`",N,N],[3,"ImageData","","ImageData provided by formats, can be interpreted as a texture.",N,N],[12,"rgba","","The raw image data.",23,N],[3,"JpgFormat","","Allows loading of jpg or jpeg files.",N,N],[3,"MaterialPrefab","","`PrefabData` for loading `Material`s",N,N],[12,"albedo","","Diffuse map.",24,N],[12,"albedo_offset","","Diffuse texture offset",24,N],[12,"emission","","Emission map.",24,N],[12,"emission_offset","","Emission texture offset",24,N],[12,"normal","","Normal map.",24,N],[12,"normal_offset","","Normal texture offset",24,N],[12,"metallic","","Metallic map.",24,N],[12,"metallic_offset","","Metallic texture offset",24,N],[12,"roughness","","Roughness map.",24,N],[12,"roughness_offset","","Roughness texture offset",24,N],[12,"ambient_occlusion","","Ambient occlusion map.",24,N],[12,"ambient_occlusion_offset","","Ambient occlusion texture offset",24,N],[12,"caveat","","Caveat map.",24,N],[12,"caveat_offset","","Caveat texture offset",24,N],[12,"transparent","","Set material as `Transparent`",24,N],[12,"alpha_cutoff","","Alpha cutoff: the value below which we do not draw the pixel",24,N],[3,"ObjFormat","","Allows loading from Wavefront files see: https://en.wikipedia.org/wiki/Wavefront_.obj_file",N,N],[3,"PngFormat","","Allows loading of PNG files.",N,N],[3,"TextureMetadata","","Additional texture metadata that can be passed to the asset loader or added to the prefab.",N,N],[12,"sampler","","The sampler info describes how to read from the texture, thus specifies filter and wrap mode. The default is nearest filtering (`FilterMethod::Scale`) and clamping (`WrapMode::Clamp`).",25,N],[12,"mip_levels","","Mipmapping levels. The default is one level.",25,N],[12,"dynamic","","Dynamic texture",25,N],[12,"format","","The surface type of the texture which describes the number of color channels and their size. In simpler words, this defines the color format, e.g. RGBA 32-bit.",25,N],[12,"size","","The dimensions of the texture. Only needed for raw image data (`TextureData::U8` etc).",25,N],[12,"channel","","The channel type which describes the data format of the channels (e.g. how the red value is stored).",25,N],[3,"TgaFormat","","Allows loading of TGA files.",N,N],[3,"Hidden","","Hidden mesh component Useful for entities, that should not be rendered, but stay loaded in memory.",N,N],[3,"HiddenPropagate","","Like Hidden, but can propagate through children when the HideHierarchySystem is enabled in the RenderBundle.",N,N],[3,"HideHierarchySystem","","This system adds a HiddenPropagate-component to all children. Using this system will result in every child being hidden. Depends on the resource \"ParentHierarchy\", which is set up by the TransformBundle",N,N],[3,"DirectionalLight","","A directional light source.",N,N],[12,"color","","Color of the light in RGBA8 format.",26,N],[12,"direction","","Direction that the light is pointing.",26,N],[3,"LightPrefab","","Prefab for lighting",N,N],[3,"PointLight","","A point light source. Uses the `Transform` set of components for positioning, and requires a `GlobalTransform` component to be included in rendering.",N,N],[12,"color","","Color of the light in RGBA8 format.",27,N],[12,"intensity","","Brightness of the light source, in lumens.",27,N],[12,"radius","","Maximum radius of the point light's affected area.",27,N],[12,"smoothness","","Smoothness of the light-to-dark transition from the center to the radius.",27,N],[3,"SpotLight","","A spot light source.",N,N],[12,"angle","","Opening angle of the light cone in radians.",28,N],[12,"color","","Color of the light in RGBA8 format.",28,N],[12,"direction","","Direction that the light is pointing.",28,N],[12,"intensity","","Brightness of the light source, in lumens.",28,N],[12,"range","","Range/length of the light source.",28,N],[12,"smoothness","","Smoothness of the light-to-dark transition from the center to the radius.",28,N],[3,"SunLight","","A realistic disk-shaped sun light source.",N,N],[12,"ang_rad","","The sun's angular radius in radians.",29,N],[12,"color","","Color of the light in RGBA8 format.",29,N],[12,"direction","","Direction that the light is pointing.",29,N],[12,"intensity","","Brightness of the sun light, in lux.",29,N],[3,"Mesh","","Represents a polygonal mesh.",N,N],[3,"MeshBuilder","","Builds new meshes.",N,N],[3,"VertexBuffer","","Raw buffer with its attributes",N,N],[3,"Material","","Material struct.",N,N],[12,"alpha_cutoff","","Alpha cutoff: the value at which we do not draw the pixel",30,N],[12,"albedo","","Diffuse map.",30,N],[12,"albedo_offset","","Diffuse texture offset",30,N],[12,"emission","","Emission map.",30,N],[12,"emission_offset","","Emission texture offset",30,N],[12,"normal","","Normal map.",30,N],[12,"normal_offset","","Normal texture offset",30,N],[12,"metallic","","Metallic map.",30,N],[12,"metallic_offset","","Metallic texture offset",30,N],[12,"roughness","","Roughness map.",30,N],[12,"roughness_offset","","Roughness texture offset",30,N],[12,"ambient_occlusion","","Ambient occlusion map.",30,N],[12,"ambient_occlusion_offset","","Ambient occlusion texture offset",30,N],[12,"caveat","","Caveat map.",30,N],[12,"caveat_offset","","Caveat texture offset",30,N],[3,"MaterialDefaults","","A resource providing default textures for `Material`. These will be be used by the renderer in case a texture handle points to a texture which is not loaded already. Additionally, you can use it to fill up the fields of `Material` you don't want to specify.",N,N],[12,"0","","",31,N],[3,"TextureOffset","","Material reference this part of the texture",N,N],[12,"u","","Start and end offset for U coordinate",32,N],[12,"v","","Start and end offset for V coordinate",32,N],[3,"DebugLinesParams","","Parameters for renderer of debug lines. The params affect all lines.",N,N],[12,"line_width","","Width of lines in units, default is 1.0 / 400.0 units",33,N],[3,"DrawDebugLines","","Draw several simple lines for debugging",N,N],[3,"DrawFlat","","Draw mesh without lighting",N,N],[3,"DrawFlat2D","","Draws sprites on a 2D quad.",N,N],[3,"DrawFlatSeparate","","Draw mesh without lighting",N,N],[3,"DrawPbm","","Draw mesh with physically based lighting",N,N],[3,"DrawPbmSeparate","","Draw mesh with physically based lighting",N,N],[3,"DrawShaded","","Draw mesh with simple lighting technique",N,N],[3,"DrawShadedSeparate","","Draw mesh with simple lighting technique",N,N],[3,"DrawSkybox","","Draw a simple gradient skybox",N,N],[3,"SkyboxColor","","Colors used for the gradient skybox",N,N],[12,"zenith","","The color directly above the viewer",34,N],[12,"nadir","","The color directly below the viewer",34,N],[3,"ColorBuffer","","Target color buffer.",N,N],[12,"as_input","","Shader resource view.",35,N],[12,"as_output","","Target view.",35,N],[3,"Data","","",N,N],[12,"const_bufs","","",36,N],[12,"globals","","",36,N],[12,"out_colors","","",36,N],[12,"out_blends","","",36,N],[12,"out_depth","","",36,N],[12,"samplers","","",36,N],[12,"textures","","",36,N],[12,"vertex_bufs","","",36,N],[3,"DepthBuffer","","Target depth-stencil buffer.",N,N],[12,"as_input","","Shader resource view.",37,N],[12,"as_output","","Target view.",37,N],[3,"Effect","","",N,N],[12,"pso","","",38,N],[12,"data","","",38,N],[3,"EffectBuilder","","",N,N],[3,"Init","","FIXME: Cannot `Deserialize` for some reason.",N,N],[12,"const_bufs","","",39,N],[12,"globals","","",39,N],[12,"out_colors","","",39,N],[12,"out_blends","","",39,N],[12,"out_depth","","",39,N],[12,"samplers","","",39,N],[12,"textures","","",39,N],[12,"vertex_bufs","","",39,N],[3,"Meta","","",N,N],[3,"NewEffect","","",N,N],[12,"factory","","",40,N],[3,"Pipeline","","Defines how the rendering pipeline should be configured.",N,N],[3,"PipelineBuilder","","Constructs a new pipeline with the given render targets and layers.",N,N],[3,"Stage","","A stage in the rendering pipeline.",N,N],[3,"StageBuilder","","Constructs a new rendering stage.",N,N],[3,"Target","","A render target.",N,N],[3,"TargetBuilder","","Builds new render targets.",N,N],[3,"Renderer","","Generic renderer.",N,N],[12,"factory","","The gfx factory used for creation of buffers.",41,N],[3,"AmbientColor","","The ambient color of a scene",N,N],[12,"0","","",42,N],[3,"ScreenDimensions","","World resource that stores screen dimensions.",N,N],[3,"WindowMessages","","This specs resource permits sending commands to the renderer internal window.",N,N],[3,"InternalShape","","Internal Shape, used for transformation from `genmesh` to `MeshData`",N,N],[3,"ShapePrefab","","Prefab for generating `Mesh` from basic shapes",N,N],[3,"ShapeUpload","","`SystemData` needed to upload a `Shape` directly to create a `MeshHandle`",N,N],[3,"AnimatedComboMeshCreator","","Mesh creator for `VertexBufferCombination`.",N,N],[12,"combo","","The internal mesh combo data.",43,N],[3,"JointTransforms","","Transform storage for the skin, should be attached to all mesh entities that use a skin",N,N],[12,"skin","","Skin entity",44,N],[12,"matrices","","The current joint matrices",44,N],[3,"JointTransformsPrefab","","Prefab for `JointTransforms`",N,N],[12,"skin","","Index of skin `Entity`",45,N],[12,"size","","Number of joints in the skin",45,N],[3,"Sprite","","Dimensions and texture coordinates of each sprite in a sprite sheet.",N,N],[12,"width","","Pixel width of the sprite",46,N],[12,"height","","Pixel height of the sprite",46,N],[12,"offsets","","Number of pixels to shift the sprite to the left and down relative to the entity",46,N],[12,"tex_coords","","Texture coordinates of the sprite",46,N],[3,"SpriteRender","","Information for rendering a sprite.",N,N],[12,"sprite_sheet","","Handle to the sprite sheet of the sprite",47,N],[12,"sprite_number","","Index of the sprite on the sprite sheet",47,N],[3,"SpriteSheet","","Meta data for a sprite sheet texture.",N,N],[12,"texture","","`Texture` handle of the spritesheet texture",48,N],[12,"sprites","","A list of sprites in this sprite sheet.",48,N],[3,"SpriteSheetFormat","","Allows loading of sprite sheets in RON format.",N,N],[3,"TextureCoordinates","","Texture coordinates of the sprite",N,N],[12,"left","","Normalized left x coordinate",49,N],[12,"right","","Normalized right x coordinate",49,N],[12,"bottom","","Normalized bottom y coordinate",49,N],[12,"top","","Normalized top y coordinate",49,N],[3,"SpriteVisibility","","Resource for controlling what entities should be rendered, and whether to draw them ordered or not, which is useful for transparent surfaces.",N,N],[12,"visible_unordered","","Visible entities that can be drawn in any order",50,N],[12,"visible_ordered","","Visible entities that need to be drawn in the given order",50,N],[3,"SpriteVisibilitySortingSystem","","Determines what entities to be drawn. Will also sort transparent entities back to front based on position on the Z axis.",N,N],[3,"RenderSystem","","Rendering system.",N,N],[3,"Texture","","Handle to a GPU texture resource.",N,N],[3,"TextureBuilder","","Builds new textures.",N,N],[3,"Transparent","","Transparent mesh component",N,N],[3,"PosColor","","Vertex format with position and RGBA8 color attributes.",N,N],[12,"position","","Position of the vertex in 3D space.",51,N],[12,"color","","RGBA color value of the vertex.",51,N],[3,"PosColorNorm","","Vertex format with position, RGBA8 color and normal attributes.",N,N],[12,"position","","Position of the vertex in 3D space.",52,N],[12,"color","","RGBA color value of the vertex.",52,N],[12,"normal","","Normal vector of the vertex.",52,N],[3,"PosNormTangTex","","Vertex format with position, normal, tangent, and UV texture coordinate attributes.",N,N],[12,"position","","Position of the vertex in 3D space.",53,N],[12,"normal","","Normal vector of the vertex.",53,N],[12,"tangent","","Tangent vector of the vertex.",53,N],[12,"tex_coord","","UV texture coordinates used by the vertex.",53,N],[3,"PosNormTex","","Vertex format with position, normal, and UV texture coordinate attributes.",N,N],[12,"position","","Position of the vertex in 3D space.",54,N],[12,"normal","","Normal vector of the vertex.",54,N],[12,"tex_coord","","UV texture coordinates used by the vertex.",54,N],[3,"PosTex","","Vertex format with position and UV texture coordinate attributes.",N,N],[12,"position","","Position of the vertex in 3D space.",55,N],[12,"tex_coord","","UV texture coordinates used by the vertex.",55,N],[3,"Separate","","Vertex format for attributes in separate buffers",N,N],[12,"0","","",56,N],[3,"Visibility","","Resource for controlling what entities should be rendered, and whether to draw them ordered or not, which is useful for transparent surfaces.",N,N],[12,"visible_unordered","","Visible entities that can be drawn in any order",57,N],[12,"visible_ordered","","Visible entities that need to be drawn in the given order",57,N],[3,"VisibilitySortingSystem","","Determine what entities are visible to the camera, and which are not. Will also sort transparent entities back to front based on distance from camera.",N,N],[4,"CameraPrefab","","Projection prefab",N,N],[13,"Orthographic","","An [orthographic projection][op].",58,N],[13,"Perspective","","A realistic [perspective projection][pp].",58,N],[13,"Matrix","","Projection matrix",58,N],[4,"Projection","","The projection mode of a `Camera`.",N,N],[13,"Orthographic","","An [orthographic projection][op].",59,N],[13,"Perspective","","A realistic [perspective projection][pp].",59,N],[4,"MeshData","","Mesh data for loading",N,N],[13,"PosColor","","Position and color",60,N],[13,"PosColorNorm","","Position, color and normal",60,N],[13,"PosTex","","Position and texture coordinates",60,N],[13,"PosNormTex","","Position, normal and texture coordinates",60,N],[13,"PosNormTangTex","","Position, normal, tangent and texture coordinates",60,N],[13,"Creator","","Create a mesh from a given creator",60,N],[4,"TextureData","","Texture data for loading",N,N],[13,"Image","","Image data",61,N],[13,"Rgba","","Color",61,N],[13,"F32","","Float data",61,N],[13,"F64","","Float data",61,N],[13,"U8","","Byte data",61,N],[13,"U16","","Byte data",61,N],[13,"U32","","Byte data",61,N],[13,"U64","","Byte data",61,N],[4,"TextureFormat","","Aggregate texture format",N,N],[13,"Jpg","","Jpeg",62,N],[13,"Png","","Png",62,N],[13,"Bmp","","Bmp",62,N],[13,"Tga","","Tga",62,N],[4,"TexturePrefab","","`PrefabData` for loading `Texture`s.",N,N],[13,"Data","","Texture data",63,N],[13,"File","","Load file with format",63,N],[13,"Handle","","Clone handle only",63,N],[4,"Light","","A light source.",N,N],[13,"Area","","An area light. FIXME: Missing implementation!",64,N],[13,"Directional","","A directional light.",64,N],[13,"Point","","A point light.",64,N],[13,"Spot","","A spot light.",64,N],[13,"Sun","","A sun light.",64,N],[4,"DepthMode","","",N,N],[13,"LessEqualTest","","",65,N],[13,"LessEqualWrite","","",65,N],[4,"Shape","","Shape generators",N,N],[13,"Sphere","","Sphere, number of points around the equator, number of points pole to pole",66,N],[13,"Cone","","Cone, number of subdivisions around the radius, must be > 1",66,N],[13,"Cube","","Cube",66,N],[13,"Cylinder","","Cylinder, number of points across the radius, optional subdivides along the height",66,N],[13,"Torus","","Torus, radius from origin to center of tubular, tubular radius from toridal to surface, number of tube segments >= 3, number of segments around the tube",66,N],[13,"IcoSphere","","Icosahedral sphere, number of subdivisions > 0 if given",66,N],[13,"Plane","","Plane, located in the XY plane, number of subdivisions along x and y axis if given",66,N],[13,"Circle","","Circle, located in the XY plane, number of points around the circle",66,N],[4,"JointIds","","Type for joint ids attribute of vertex",N,N],[4,"JointWeights","","Type for joint weights attribute of vertex",N,N],[4,"Flipped","","Information about whether or not a texture should be flipped when rendering.",N,N],[13,"None","","Don't flip the texture",67,N],[13,"Horizontal","","Flip the texture horizontally",67,N],[13,"Vertical","","Flip the texture vertically",67,N],[13,"Both","","Flip the texture in both orientations",67,N],[4,"Color","","Type for color attribute of vertex",N,N],[4,"Normal","","Type for texture coord attribute of vertex",N,N],[4,"Position","","Type for position attribute of vertex",N,N],[4,"Tangent","","Type for tangent attribute of vertex",N,N],[4,"TexCoord","","Type for texture coord attribute of vertex",N,N],[5,"build_mesh_with_combo","","Build Mesh with vertex buffer combination",N,[[["vertexbuffercombination"],["renderer"]],["result",["mesh","error"]]]],[5,"create_mesh_asset","","Create mesh",N,[[["meshdata"],["renderer"]],["result",["processingstate","error"]]]],[5,"create_texture_asset","","Create a texture asset.",N,[[["texturedata"],["renderer"]],["result",["processingstate","error"]]]],[5,"vertex_data","","Construct new vertex data from raw data and vertex format",N,N],[5,"get_camera","","Returns the main camera and its `GlobalTransform`",N,[[["read",["activecamera"]],["readstorage"],["readstorage"]],["option"]]],[5,"set_vertex_args","","Sets the vertex argument in the constant buffer.",N,[[["effect"],["encoder"],["option"],["globaltransform"],["rgba"]]]],[0,"mouse","","Util functions that change how the mouse moves and looks.",N,N],[5,"hide_cursor","amethyst_renderer::mouse","Hide the cursor, so it's invisible while playing.",N,[[["windowmessages"]]]],[5,"release_cursor","","Set the cursor back to normal/visible.",N,[[["windowmessages"]]]],[5,"grab_cursor","","Grab the cursor to prevent it from going outside the screen.",N,[[["windowmessages"]]]],[5,"set_mouse_cursor","","Sets the mouse cursor icon.",N,[[["windowmessages"],["mousecursor"]]]],[0,"pipe","amethyst_renderer","Renderer pipeline configuration.",N,N],[3,"Data","amethyst_renderer::pipe","",N,N],[12,"const_bufs","","",36,N],[12,"globals","","",36,N],[12,"out_colors","","",36,N],[12,"out_blends","","",36,N],[12,"out_depth","","",36,N],[12,"samplers","","",36,N],[12,"textures","","",36,N],[12,"vertex_bufs","","",36,N],[3,"Effect","","",N,N],[12,"pso","","",38,N],[12,"data","","",38,N],[3,"EffectBuilder","","",N,N],[3,"Init","","FIXME: Cannot `Deserialize` for some reason.",N,N],[12,"const_bufs","","",39,N],[12,"globals","","",39,N],[12,"out_colors","","",39,N],[12,"out_blends","","",39,N],[12,"out_depth","","",39,N],[12,"samplers","","",39,N],[12,"textures","","",39,N],[12,"vertex_bufs","","",39,N],[3,"Meta","","",N,N],[3,"NewEffect","","",N,N],[12,"factory","","",40,N],[3,"Pipeline","","Defines how the rendering pipeline should be configured.",N,N],[3,"PipelineBuilder","","Constructs a new pipeline with the given render targets and layers.",N,N],[3,"Stage","","A stage in the rendering pipeline.",N,N],[3,"StageBuilder","","Constructs a new rendering stage.",N,N],[3,"ColorBuffer","","Target color buffer.",N,N],[12,"as_input","","Shader resource view.",35,N],[12,"as_output","","Target view.",35,N],[3,"DepthBuffer","","Target depth-stencil buffer.",N,N],[12,"as_input","","Shader resource view.",37,N],[12,"as_output","","Target view.",37,N],[3,"Target","","A render target.",N,N],[3,"TargetBuilder","","Builds new render targets.",N,N],[4,"DepthMode","","",N,N],[13,"LessEqualTest","","",65,N],[13,"LessEqualWrite","","",65,N],[0,"pass","","Types for constructing render passes.",N,N],[3,"CompiledPass","amethyst_renderer::pipe::pass","A compiled pass.  These are created and managed by the `Renderer`.  This should not be used directly outside of the renderer.",N,N],[8,"PassData","","Used to fetch data from the game world for rendering in the pass.",N,N],[16,"Data","","The data itself.",68,N],[8,"Pass","","Structures implementing this provide a renderer pass.",N,N],[10,"compile","","The pass is given an opportunity to compile shaders and store them in an `Effect` which is then passed to the pass in `apply`.",69,[[["self"],["neweffect"]],["result",["effect","error"]]]],[10,"apply","","Called whenever the renderer is ready to apply the pass.  Feed commands into the encoder here.",69,N],[11,"apply","","Applies the inner pass.",70,N],[11,"new_target","","Distributes new target data to the pass.",70,[[["self"],["target"]]]],[11,"update_global","amethyst_renderer","",38,[[["self"],["n"],["t"]]]],[11,"update_buffer","","FIXME: Update raw buffer without transmute, use `Result` somehow.",38,N],[11,"update_constant_buffer","","FIXME: Update raw buffer without transmute.",38,[[["self"],["n"],["t"],["encoder"]]]],[11,"clear","","",38,[[["self"]]]],[11,"draw","","",38,[[["self"],["slice"],["encoder"]]]],[11,"simple","","",40,[[["self"],["s"],["s"]],["effectbuilder"]]],[11,"geom","","",40,[[["self"],["s"],["s"],["s"]],["effectbuilder"]]],[11,"tess","","",40,[[["self"],["s"],["s"],["s"],["s"]],["effectbuilder"]]],[11,"without_back_face_culling","","Disable back face culling",71,[[["self"]],["self"]]],[11,"with_raw_global","","Adds a global constant to this `Effect`.",71,[[["self"],["str"]],["self"]]],[11,"with_raw_constant_buffer","","Adds a raw uniform constant to this `Effect`.",71,[[["self"],["str"],["usize"],["usize"]],["self"]]],[11,"with_primitive_type","","Set the pipeline primitive type.",71,[[["self"],["primitive"]],["self"]]],[11,"with_output","","Sets the output target of the PSO.",71,[[["self"],["str"],["option",["depthmode"]]],["self"]]],[11,"with_blended_output","","Sets the output target of the PSO.",71,[[["self"],["str"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"with_texture","","Adds a texture sampler to this `Effect`.",71,[[["self"],["str"]],["self"]]],[11,"with_raw_vertex_buffer","","Adds a vertex buffer to this `Effect`.",71,[[["self"],["attributes"],["elemstride"],["instancerate"]],["self"]]],[11,"build","","TODO: Support render targets as inputs.",71,[[["self"]],["result",["effect","error"]]]],[11,"build","","Builds a new renderer pipeline.",72,[[],["pipelinebuilder",["queue"]]]],[11,"targets","","Returns an immutable reference to all targets and their name strings.",72,[[["self"]],["hashmap"]]],[11,"new","","Creates a new PipelineBuilder.",73,[[],["self"]]],[11,"with_stage","","Constructs a new stage in this pipeline.",73,[[["self"],["stagebuilder"]],["pipelinebuilder",["queue"]]]],[11,"with_target","","Constructs a new render target for this pipeline.",73,[[["self"],["targetbuilder"]],["self"]]],[11,"with_target","","Builds a new `PolyStage` which outputs to the `Target` with the given name.",74,[[["n"]],["stagebuilder",["queue"]]]],[11,"with_backbuffer","","Builds a new `PolyStage` which outputs straight into the backbuffer.",74,[[],["stagebuilder",["queue"]]]],[11,"enable","","Enables the `PolyStage` so it will execute on every frame.",74,[[["self"]]]],[11,"disable","","Disables the `PolyStage`, preventing it from being executed on every frame.",74,[[["self"]]]],[11,"is_enabled","","Returns whether this `PolyStage` is enabled.",74,[[["self"]],["bool"]]],[11,"new","","Creates a new `StageBuilder` using the given target.",75,[[["t"]],["self"]]],[11,"clear_target","","Clears the stage's target.",75,[[["self"],["c"],["d"]],["self"]]],[11,"enabled","","Sets whether the `PolyStage` is turned on by default.",75,[[["self"],["bool"]],["self"]]],[11,"with_pass","","Appends another `Pass` to the stage.",75,[[["self"],["p"]],["stagebuilder",["queue"]]]],[11,"named","","Creates a new TargetBuilder with the given name.",76,[[["n"]],["targetbuilder"]]],[11,"clear_color","","Clears all color buffers to the given value.",76,[[["self"],["encoder"],["v"]]]],[11,"clear_depth_stencil","","Clears the depth stencil buffer to the given value.",76,[[["self"],["encoder"],["v"]]]],[11,"size","","Returns the width and height of the render target, measured in pixels.",76,N],[11,"color_buf","","Returns the color buffer with index `i`.",76,[[["self"],["usize"]],["option",["colorbuffer"]]]],[11,"color_bufs","","Returns an array slice of the render target's color buffers.",76,N],[11,"depth_buf","","Returns the render target's depth-stencil buffer, if it has one.",76,[[["self"]],["option",["depthbuffer"]]]],[11,"resize_main_target","","Creates the OpenGL backend.",76,[[["self"],["glwindow"]]]],[11,"new","","Creates a new TargetBuilder.",77,[[["s"]],["self"]]],[11,"with_depth_buf","","Sets whether this render target should have a depth-stencil buffer.",77,[[["self"],["bool"]],["self"]]],[11,"with_num_color_bufs","","Sets how many color buffers the render target will have. This number must be greater than zero or else `build()` will fail.",77,[[["self"],["usize"]],["self"]]],[11,"with_size","","Specifies a custom target size.",77,N],[6,"Targets","amethyst_renderer::pipe","A hash map containing named render targets.",N,N],[8,"PipelineBuild","","",N,N],[16,"Pipeline","","Resuling pipeline",78,N],[10,"build","","Build pipeline",78,[[["self"],["factory"],["target"],["u16"]],["result",["error"]]]],[8,"PipelineData","","The data requested from the `specs::World` by the Pipeline.",N,N],[16,"Data","","The data itself",79,N],[8,"PolyPipeline","","Trait used for the pipeline.",N,N],[10,"apply","","Retuns `ParallelIterator` which apply data to all stages",80,N],[10,"new_targets","","Resizes the pipeline targets",80,[[["self"],["hashmap",["string","target"]]]]],[10,"targets","","Returns an immutable reference to all targets and their name strings.",80,[[["self"]],["hashmap"]]],[8,"PolyStages","","",N,N],[10,"apply","","",81,N],[10,"new_targets","","Distributes new targets",81,[[["self"],["hashmap"]]]],[8,"PolyStage","","A stage in the rendering.  Contains multiple passes.",N,N],[10,"apply","","",82,N],[10,"new_targets","","Distributes new targets",82,[[["self"],["hashmap"]]]],[11,"new","amethyst_renderer","Create a new render bundle",83,[[["b"],["option",["displayconfig"]]],["self"]]],[11,"with_visibility_sorting","","Enable transparent mesh sorting, with the given dependencies",83,N],[11,"with_sprite_visibility_sorting","","Enable transparent sprite sorting, with the given dependencies",83,N],[11,"with_sprite_sheet_processor","","Enable the sprite sheet processor",83,[[["self"]],["self"]]],[11,"with_hide_hierarchy_system","","Enable the hierarchical hiding system. Requires the `\"parent_hierarchy_system\"` to be used, which is a default part of TransformBundle.",83,[[["self"]],["self"]]],[11,"orthographic","","Creates an orthographic projection with the given left, right, bottom, and top plane distances.",59,[[["f32"],["f32"],["f32"],["f32"]],["projection"]]],[11,"perspective","","Creates a perspective projection with the given aspect ratio and field-of-view. `fov` is specified in radians.",59,[[["f32"],["f32"]],["projection"]]],[11,"standard_2d","","Create a normalized camera for 2D.",18,[[],["self"]]],[11,"standard_3d","","Create a standard camera for 3D.",18,[[["f32"],["f32"]],["self"]]],[18,"BLACK","","Solid black color value.",19,N],[18,"BLUE","","Solid blue color value.",19,N],[18,"GREEN","","Solid green color value.",19,N],[18,"RED","","Solid red color value.",19,N],[18,"TRANSPARENT","","Transparent color value.",19,N],[18,"WHITE","","Solid white color value.",19,N],[11,"black","","Returns a solid black color value.",19,[[],["rgba"]]],[11,"blue","","Returns a solid blue color value.",19,[[],["rgba"]]],[11,"green","","Returns a solid green color value.",19,[[],["rgba"]]],[11,"red","","Returns a solid red color value.",19,[[],["rgba"]]],[11,"transparent","","Returns a transparent color value.",19,[[],["rgba"]]],[11,"white","","Returns a solid white color value.",19,[[],["rgba"]]],[11,"to_windowbuilder","","Creates a `WindowBuilder` using the values set in the DisplayConfig",20,[[["self"],["monitorid"]],["windowbuilder"]]],[11,"new","","Creates a new debug lines component with an empty DebugLine vector.",22,[[],["debuglinescomponent"]]],[11,"with_capacity","","Builder method to pre-allocate a number of lines.",22,[[["self"],["usize"]],["self"]]],[11,"add_direction","","Adds a line to be rendered by giving a position and a direction.",22,[[["self"],["point3",["f32"]],["vector3",["f32"]],["rgba"]]]],[11,"add_line","","Adds a line to be rendered by giving a start and an end position.",22,[[["self"],["point3",["f32"]],["point3",["f32"]],["rgba"]]]],[11,"clear","","Clears lines buffer.",22,[[["self"]]]],[11,"new","","Creates a new debug lines component with an empty DebugLine vector.",21,[[],["debuglines"]]],[11,"with_capacity","","Builder method to pre-allocate a number of lines.",21,[[["self"],["usize"]],["self"]]],[11,"draw_direction","","Submits a line to be rendered by giving a position and a direction.",21,[[["self"],["point3",["f32"]],["vector3",["f32"]],["rgba"]]]],[11,"draw_line","","Submits a line to be rendered by giving a start and an end position.",21,[[["self"],["point3",["f32"]],["point3",["f32"]],["rgba"]]]],[11,"new","","Create a new combo mesh creator with the given combo",84,[[["vertexbuffercombination"]],["self"]]],[11,"unorm","","Creates texture metadata with `Unorm` channel type. This is used for normal / displacement maps. For color textures you most likely want to use `TextureMetadata::srgb`.",25,[[],["self"]]],[11,"srgb","","Creates texture metadata for `Srgb` textures. This is usually the case for color textures.",25,[[],["self"]]],[11,"srgb_scale","","Creates texture metadata for `Srgb` texture but without texture filtering. This is usually the case for color textures for 2D sprites and pixel art textures.",25,[[],["self"]]],[11,"with_sampler","","Sampler info",25,[[["self"],["samplerinfo"]],["self"]]],[11,"with_filter","","Sets the filter method of the sampler.",25,[[["self"],["filtermethod"]],["self"]]],[11,"with_mip_levels","","Mipmapping",25,[[["self"],["u8"]],["self"]]],[11,"with_format","","Surface type",25,[[["self"],["surfacetype"]],["self"]]],[11,"with_channel","","Channel type",25,[[["self"],["channeltype"]],["self"]]],[11,"with_size","","Texture size",25,[[["self"],["u16"],["u16"]],["self"]]],[11,"dynamic","","Texture is dynamic",25,[[["self"],["bool"]],["self"]]],[11,"color","","Creates texture data from color.",61,N],[11,"from_data","","Load Jpg from memory buffer",85,N],[11,"from_data","","Load Png from memory buffer",86,N],[11,"from_data","","Loads a TGA image from a byte slice.",87,N],[11,"build","","Builds a new mesh from the given vertices.",88,[[["d"]],["meshbuilder"]]],[11,"buffer","","Returns the mesh's vertex buffer which matches requested attributes",88,[[["self"],["attributes"]],["option",["rawbuffer"]]]],[11,"slice","","Returns associated `Slice`",88,[[["self"]],["slice"]]],[11,"transform","","Returns the transformation matrix of the mesh.",88,[[["self"]],["matrix4",["f32"]]]],[11,"new","","Creates a new `MeshBuilder` with the given vertices.",89,[[["d"]],["self"]]],[11,"with_buffer","","Add another vertices to the `MeshBuilder`",89,[[["self"],["d"]],["meshbuilder"]]],[11,"with_prim_type","","Sets the primitive type of the mesh.",89,[[["self"],["primitive"]],["self"]]],[11,"with_position","","Sets the position of the mesh in 3D space.",89,[[["self"],["point3",["f32"]]],["self"]]],[11,"with_rotation","","Rotates the mesh around the given axis. `angle` is specified in radians.",89,[[["self"],["unit",["vector3"]],["f32"]],["self"]]],[11,"with_scale","","Scales the mesh size according to the given value.",89,[[["self"],["f32"]],["self"]]],[11,"with_transform","","Sets the transformation matrix of the mesh.",89,[[["self"],["m"]],["self"]]],[11,"build","","Builds and returns the new mesh.",89,[[["self"],["factory"]],["result",["mesh","error"]]]],[11,"new","","Create instance of `DrawDebugLines` pass",90,[[],["self"]]],[11,"new","","Create instance of `DrawFlat` pass",91,[[],["self"]]],[11,"with_transparency","","Enable transparency",91,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawFlat` pass",92,[[],["self"]]],[11,"with_vertex_skinning","","Enable vertex skinning",92,[[["self"]],["self"]]],[11,"with_transparency","","Enable transparency",92,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawFlat2D` pass",93,[[],["self"]]],[11,"with_transparency","","Enable transparency",93,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawPbm` pass",94,[[],["self"]]],[11,"with_transparency","","Enable transparency",94,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawPbm` pass",95,[[],["self"]]],[11,"with_vertex_skinning","","Enable vertex skinning",95,[[["self"]],["self"]]],[11,"with_transparency","","Enable transparency",95,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawShaded` pass",96,[[],["self"]]],[11,"with_transparency","","Enable transparency",96,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawShaded` pass",97,[[],["self"]]],[11,"with_vertex_skinning","","Enable vertex skinning",97,[[["self"]],["self"]]],[11,"with_transparency","","Enable transparency",97,[[["self"],["colormask"],["blend"],["option",["depthmode"]]],["self"]]],[11,"new","","Create instance of `DrawSkybox` pass",98,[[],["self"]]],[11,"new","","Creates a `Renderer` with default window settings.",41,[[],["result",["error"]]]],[11,"build_with_loop","","Creates a new `RendererBuilder`, equivalent to `RendererBuilder::new()`.",41,[[["eventsloop"]],["rendererbuilder"]]],[11,"build","","Creates a new `RendererBuilder`, equivalent to `RendererBuilder::new()`.",41,[[],["rendererbuilder"]]],[11,"create_mesh","","Builds a new mesh from the given vertices.",41,[[["self"],["meshbuilder"]],["result",["mesh","error"]]]],[11,"create_texture","","Builds a new texture resource.",41,[[["self"],["texturebuilder"]],["result",["texture","error"]]]],[11,"create_pipe","","Builds a new renderer pipeline.",41,[[["self"],["b"]],["result",["error"]]]],[11,"draw","","Draws a scene with the given pipeline.",41,N],[11,"events_mut","","Retrieve a mutable borrow of the events loop",41,[[["self"]],["eventsloop"]]],[11,"resize","","Resize the targets associated with this renderer and pipeline.",41,N],[11,"window","","Retrieves an immutable borrow of the window.",41,[[["self"]],["winitwindow"]]],[11,"new","","Create a new `WindowMessages`",99,[[],["self"]]],[11,"send_command","","Execute this closure on the `winit::Window` next frame.",99,[[["self"],["f"]]]],[11,"new","","Creates a new screen dimensions object with the given width and height.",100,[[["u32"],["u32"],["f64"]],["self"]]],[11,"width","","Returns the current width of the window.",100,[[["self"]],["f32"]]],[11,"height","","Returns the current height of the window.",100,[[["self"]],["f32"]]],[11,"aspect_ratio","","Returns the current aspect ratio of the window.",100,[[["self"]],["f32"]]],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the window size in screen pixels. This is typically one for a normal display and two for a retina display.",100,[[["self"]],["f64"]]],[11,"update","","Updates the width and height of the screen and recomputes the aspect ratio.",100,[[["self"],["f64"],["f64"]]]],[11,"update_hidpi_factor","","Updates the hidpi factor stored in this structure.",100,[[["self"],["f64"]]]],[11,"upload","","Generate `Mesh` for the `Shape`, and convert it into a `MeshHandle`.",66,[[["self"],["option"],["shapeupload"],["p"]],["meshhandle"]]],[11,"generate","","Generate `MeshData` for the `Shape`",66,[[["self"],["option"]],["meshdata"]]],[11,"generate_vertices","","Generate vertices for the `Shape`, in format `V`",66,[[["self"],["option"]],["v"]]],[11,"new","","Create a new combo mesh creator with the given combo",43,[[["animatedvertexbuffercombination"]],["self"]]],[11,"from_pixel_values","","Creates a `Sprite` from pixel values.",46,N],[11,"new","","Returns a new sprite visibility sorting system",101,[[],["self"]]],[11,"build","","Build a new `RenderSystem` from the given pipeline builder and config",102,[[["b"],["option",["displayconfig"]]],["result",["error"]]]],[11,"new","","Create a new render system",102,[[["p"],["renderer"]],["self"]]],[11,"from_data","","Builds a new texture with the given raw texture data.",103,[[["d"]],["texturebuilder"]]],[11,"from_color_val","","Builds a new texture with the given raw texture data.",103,[[["c"]],["texturebuilder",["u8"]]]],[11,"sampler","","Returns the sampler for the texture.",103,[[["self"]],["sampler"]]],[11,"view","","Returns the texture's raw shader resource view.",103,[[["self"]],["rawshaderresourceview"]]],[11,"size","","Returns the texture's dimensions `(width, height)`",103,N],[11,"from_color_val","","Creates a new `TextureBuilder` from the given RGBA color value.",104,[[["c"]],["self"]]],[11,"new","","Creates a new `TextureBuilder` with the given raw texture data.",104,[[["d"]],["self"]]],[11,"with_sampler","","Sets the `SamplerInfo` for the texture",104,[[["self"],["samplerinfo"]],["self"]]],[11,"mip_levels","","Sets the number of mipmap levels to generate.",104,[[["self"],["u8"]],["self"]]],[11,"with_size","","Sets the texture width and height in pixels.",104,[[["self"],["u16"],["u16"]],["self"]]],[11,"dynamic","","Sets whether the texture is mutable or not.",104,[[["self"],["bool"]],["self"]]],[11,"with_format","","Sets the texture format",104,[[["self"],["surfacetype"]],["self"]]],[11,"with_channel_type","","Sets the texture channel type",104,[[["self"],["channeltype"]],["self"]]],[11,"build","","Builds and returns the new texture.",104,[[["self"],["factory"]],["result",["texture","error"]]]],[11,"new","","Create a new Separate vertex attribute",56,N],[11,"new","","Create new sorting system",105,[[],["self"]]],[6,"MeshHandle","","A handle to a mesh.",N,N],[6,"Targets","","A hash map containing named render targets.",N,N],[6,"AnimatedVertexBufferCombination","","Animation vertex combo",N,N],[6,"SpriteSheetHandle","","An asset handle to sprite sheet metadata.",N,N],[6,"TextureHandle","","A handle to a `Texture` asset.",N,N],[6,"Encoder","","Command buffer encoder type.",N,N],[6,"Factory","","Graphics factory type.",N,N],[6,"PipelineState","","Statically-typed pipeline state object (PSO).",N,N],[6,"Resources","","Graphics resource type.",N,N],[6,"AttributeFormat","","Format for vertex attribute",N,N],[6,"Attributes","","Slice of attributes",N,N],[6,"VertexBufferCombination","","Vertex combo",N,N],[8,"MeshCreator","","Trait used by the asset processor to convert any user supplied mesh representation into an actual `Mesh`.",N,N],[10,"build","","Build a mesh given a `Renderer`",106,[[["box"],["renderer"]],["result",["mesh","error"]]]],[10,"vertices","","Returns the vertices contained in the MeshCreator.",106,[[["self"]],["vec"]]],[10,"box_clone","","Clone a boxed version of this object",106,[[["self"]],["box",["meshcreator"]]]],[8,"PipelineBuild","","",N,N],[16,"Pipeline","","Resuling pipeline",78,N],[10,"build","","Build pipeline",78,[[["self"],["factory"],["target"],["u16"]],["result",["error"]]]],[8,"PipelineData","","The data requested from the `specs::World` by the Pipeline.",N,N],[16,"Data","","The data itself",79,N],[8,"PolyPipeline","","Trait used for the pipeline.",N,N],[10,"apply","","Retuns `ParallelIterator` which apply data to all stages",80,N],[10,"new_targets","","Resizes the pipeline targets",80,[[["self"],["hashmap",["string","target"]]]]],[10,"targets","","Returns an immutable reference to all targets and their name strings.",80,[[["self"]],["hashmap"]]],[8,"PolyStage","","A stage in the rendering.  Contains multiple passes.",N,N],[10,"apply","","",82,N],[10,"new_targets","","Distributes new targets",82,[[["self"],["hashmap"]]]],[8,"PolyStages","","",N,N],[10,"apply","","",81,N],[10,"new_targets","","Distributes new targets",81,[[["self"],["hashmap"]]]],[8,"Attribute","","Trait for vertex attributes to implement",N,N],[18,"NAME","","Name of the attribute It is used to bind to the attributes in shaders",107,N],[18,"FORMAT","","Format of the attribute defines arity and type",107,N],[18,"SIZE","","Size of the attribue",107,N],[16,"Repr","","Representation of the attribute usually it is `[f32; N]`",107,N],[8,"Query","","Allows to query specific `Attribute`s of `VertexFormat`",N,N],[18,"QUERIED_ATTRIBUTES","","Attributes from tuple `T`",108,N],[8,"VertexFormat","","Trait implemented by all valid vertex formats.",N,N],[18,"ATTRIBUTES","","List of all attributes formats with name and offset.",109,N],[11,"size","","Returns the size of a single vertex in bytes.",109,[[],["usize"]]],[11,"attribute","","Returns attribute of vertex by type",109,[[],["attributeformat"]]],[8,"With","","Trait implemented by all valid vertex formats for each field",N,N],[18,"FORMAT","","Individual format of the attribute for this vertex format",110,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],["result",["string"]]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_default","","",12,[[],["result",["string"]]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"to_subset","","",111,[[["self"]],["option"]]],[11,"is_in_subset","","",111,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",111,[[["self"]],["ss"]]],[11,"from_subset","","",111,[[["ss"]],["sp"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"to_subset","","",112,[[["self"]],["option"]]],[11,"is_in_subset","","",112,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",112,[[["self"]],["ss"]]],[11,"from_subset","","",112,[[["ss"]],["sp"]]],[11,"pausable","","",112,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",112,N],[11,"setup","","",112,N],[11,"setup","","",112,N],[11,"run","","",112,N],[11,"reads","","",112,N],[11,"writes","","",112,N],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"to_subset","","",83,[[["self"]],["option"]]],[11,"is_in_subset","","",83,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",83,[[["self"]],["ss"]]],[11,"from_subset","","",83,[[["ss"]],["sp"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_default","","",17,[[],["result",["string"]]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"to_subset","","",113,[[["self"]],["option"]]],[11,"is_in_subset","","",113,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",113,[[["self"]],["ss"]]],[11,"from_subset","","",113,[[["ss"]],["sp"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_default","","",19,[[],["result",["string"]]]],[11,"get_format","","",19,N],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_default","","",20,[[],["result",["string"]]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_default","","",21,[[],["result",["string"]]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_default","","",22,[[],["result",["string"]]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"to_subset","","",114,[[["self"]],["option"]]],[11,"is_in_subset","","",114,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",114,[[["self"]],["ss"]]],[11,"from_subset","","",114,[[["ss"]],["sp"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"import","","",114,N],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"to_subset","","",84,[[["self"]],["option"]]],[11,"is_in_subset","","",84,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",84,[[["self"]],["ss"]]],[11,"from_subset","","",84,[[["ss"]],["sp"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"to_subset","","",115,[[["self"]],["option"]]],[11,"is_in_subset","","",115,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",115,[[["self"]],["ss"]]],[11,"from_subset","","",115,[[["ss"]],["sp"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"to_subset","","",85,[[["self"]],["option"]]],[11,"is_in_subset","","",85,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",85,[[["self"]],["ss"]]],[11,"from_subset","","",85,[[["ss"]],["sp"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"import","","",85,N],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_default","","",24,[[],["result",["string"]]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"to_subset","","",116,[[["self"]],["option"]]],[11,"is_in_subset","","",116,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",116,[[["self"]],["ss"]]],[11,"from_subset","","",116,[[["ss"]],["sp"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"import","","",116,N],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"to_subset","","",86,[[["self"]],["option"]]],[11,"is_in_subset","","",86,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",86,[[["self"]],["ss"]]],[11,"from_subset","","",86,[[["ss"]],["sp"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"import","","",86,N],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"to_subset","","",87,[[["self"]],["option"]]],[11,"is_in_subset","","",87,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",87,[[["self"]],["ss"]]],[11,"from_subset","","",87,[[["ss"]],["sp"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"import","","",87,N],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"to_subset","","",117,[[["self"]],["option"]]],[11,"is_in_subset","","",117,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",117,[[["self"]],["ss"]]],[11,"from_subset","","",117,[[["ss"]],["sp"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_default","","",117,[[],["result",["string"]]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"to_subset","","",118,[[["self"]],["option"]]],[11,"is_in_subset","","",118,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",118,[[["self"]],["ss"]]],[11,"from_subset","","",118,[[["ss"]],["sp"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_default","","",118,[[],["result",["string"]]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"to_subset","","",119,[[["self"]],["option"]]],[11,"is_in_subset","","",119,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",119,[[["self"]],["ss"]]],[11,"from_subset","","",119,[[["ss"]],["sp"]]],[11,"pausable","","",119,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",119,N],[11,"setup","","",119,N],[11,"setup","","",119,N],[11,"run","","",119,N],[11,"reads","","",119,N],[11,"writes","","",119,N],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_default","","",119,[[],["result",["string"]]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_default","","",26,[[],["result",["string"]]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"to_subset","","",120,[[["self"]],["option"]]],[11,"is_in_subset","","",120,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",120,[[["self"]],["ss"]]],[11,"from_subset","","",120,[[["ss"]],["sp"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_default","","",120,[[],["result",["string"]]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_default","","",27,[[],["result",["string"]]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_default","","",28,[[],["result",["string"]]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_default","","",29,[[],["result",["string"]]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"to_subset","","",88,[[["self"]],["option"]]],[11,"is_in_subset","","",88,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",88,[[["self"]],["ss"]]],[11,"from_subset","","",88,[[["ss"]],["sp"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"to_subset","","",89,[[["self"]],["option"]]],[11,"is_in_subset","","",89,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",89,[[["self"]],["ss"]]],[11,"from_subset","","",89,[[["ss"]],["sp"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"to_subset","","",121,[[["self"]],["option"]]],[11,"is_in_subset","","",121,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",121,[[["self"]],["ss"]]],[11,"from_subset","","",121,[[["ss"]],["sp"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_default","","",32,[[],["result",["string"]]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_default","","",33,[[],["result",["string"]]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"to_subset","","",90,[[["self"]],["option"]]],[11,"is_in_subset","","",90,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",90,[[["self"]],["ss"]]],[11,"from_subset","","",90,[[["ss"]],["sp"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_default","","",90,[[],["result",["string"]]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"to_subset","","",91,[[["self"]],["option"]]],[11,"is_in_subset","","",91,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",91,[[["self"]],["ss"]]],[11,"from_subset","","",91,[[["ss"]],["sp"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_default","","",91,[[],["result",["string"]]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"to_subset","","",93,[[["self"]],["option"]]],[11,"is_in_subset","","",93,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",93,[[["self"]],["ss"]]],[11,"from_subset","","",93,[[["ss"]],["sp"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_default","","",93,[[],["result",["string"]]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"to_subset","","",92,[[["self"]],["option"]]],[11,"is_in_subset","","",92,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",92,[[["self"]],["ss"]]],[11,"from_subset","","",92,[[["ss"]],["sp"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_default","","",92,[[],["result",["string"]]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"to_subset","","",94,[[["self"]],["option"]]],[11,"is_in_subset","","",94,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",94,[[["self"]],["ss"]]],[11,"from_subset","","",94,[[["ss"]],["sp"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_default","","",94,[[],["result",["string"]]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"to_subset","","",95,[[["self"]],["option"]]],[11,"is_in_subset","","",95,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",95,[[["self"]],["ss"]]],[11,"from_subset","","",95,[[["ss"]],["sp"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_default","","",95,[[],["result",["string"]]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"to_subset","","",96,[[["self"]],["option"]]],[11,"is_in_subset","","",96,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",96,[[["self"]],["ss"]]],[11,"from_subset","","",96,[[["ss"]],["sp"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_default","","",96,[[],["result",["string"]]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"to_subset","","",97,[[["self"]],["option"]]],[11,"is_in_subset","","",97,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",97,[[["self"]],["ss"]]],[11,"from_subset","","",97,[[["ss"]],["sp"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_default","","",97,[[],["result",["string"]]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"to_subset","","",98,[[["self"]],["option"]]],[11,"is_in_subset","","",98,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",98,[[["self"]],["ss"]]],[11,"from_subset","","",98,[[["ss"]],["sp"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_default","","",34,[[],["result",["string"]]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_default","","",36,[[],["result",["string"]]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"to_subset","","",38,[[["self"]],["option"]]],[11,"is_in_subset","","",38,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",38,[[["self"]],["ss"]]],[11,"from_subset","","",38,[[["ss"]],["sp"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"to_subset","","",71,[[["self"]],["option"]]],[11,"is_in_subset","","",71,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",71,[[["self"]],["ss"]]],[11,"from_subset","","",71,[[["ss"]],["sp"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"to_subset","","",39,[[["self"]],["option"]]],[11,"is_in_subset","","",39,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",39,[[["self"]],["ss"]]],[11,"from_subset","","",39,[[["ss"]],["sp"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_default","","",39,[[],["result",["string"]]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"to_subset","","",122,[[["self"]],["option"]]],[11,"is_in_subset","","",122,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",122,[[["self"]],["ss"]]],[11,"from_subset","","",122,[[["ss"]],["sp"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_default","","",122,[[],["result",["string"]]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"to_subset","","",40,[[["self"]],["option"]]],[11,"is_in_subset","","",40,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",40,[[["self"]],["ss"]]],[11,"from_subset","","",40,[[["ss"]],["sp"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"to_subset","","",72,[[["self"]],["option"]]],[11,"is_in_subset","","",72,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",72,[[["self"]],["ss"]]],[11,"from_subset","","",72,[[["ss"]],["sp"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"to_subset","","",73,[[["self"]],["option"]]],[11,"is_in_subset","","",73,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",73,[[["self"]],["ss"]]],[11,"from_subset","","",73,[[["ss"]],["sp"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_default","","",73,[[],["result",["string"]]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"to_subset","","",74,[[["self"]],["option"]]],[11,"is_in_subset","","",74,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",74,[[["self"]],["ss"]]],[11,"from_subset","","",74,[[["ss"]],["sp"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"to_subset","","",75,[[["self"]],["option"]]],[11,"is_in_subset","","",75,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",75,[[["self"]],["ss"]]],[11,"from_subset","","",75,[[["ss"]],["sp"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"to_subset","","",76,[[["self"]],["option"]]],[11,"is_in_subset","","",76,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",76,[[["self"]],["ss"]]],[11,"from_subset","","",76,[[["ss"]],["sp"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"to_subset","","",77,[[["self"]],["option"]]],[11,"is_in_subset","","",77,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",77,[[["self"]],["ss"]]],[11,"from_subset","","",77,[[["ss"]],["sp"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"to_subset","","",41,[[["self"]],["option"]]],[11,"is_in_subset","","",41,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",41,[[["self"]],["ss"]]],[11,"from_subset","","",41,[[["ss"]],["sp"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"to_subset","","",42,[[["self"]],["option"]]],[11,"is_in_subset","","",42,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",42,[[["self"]],["ss"]]],[11,"from_subset","","",42,[[["ss"]],["sp"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_default","","",42,[[],["result",["string"]]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"to_subset","","",100,[[["self"]],["option"]]],[11,"is_in_subset","","",100,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",100,[[["self"]],["ss"]]],[11,"from_subset","","",100,[[["ss"]],["sp"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"to_subset","","",99,[[["self"]],["option"]]],[11,"is_in_subset","","",99,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",99,[[["self"]],["ss"]]],[11,"from_subset","","",99,[[["ss"]],["sp"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_default","","",99,[[],["result",["string"]]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"to_subset","","",123,[[["self"]],["option"]]],[11,"is_in_subset","","",123,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",123,[[["self"]],["ss"]]],[11,"from_subset","","",123,[[["ss"]],["sp"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"to_subset","","",124,[[["self"]],["option"]]],[11,"is_in_subset","","",124,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",124,[[["self"]],["ss"]]],[11,"from_subset","","",124,[[["ss"]],["sp"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"to_subset","","",125,[[["self"]],["option"]]],[11,"is_in_subset","","",125,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",125,[[["self"]],["ss"]]],[11,"from_subset","","",125,[[["ss"]],["sp"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"setup","","",125,N],[11,"fetch","","",125,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_default","","",45,[[],["result",["string"]]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"to_subset","","",47,[[["self"]],["option"]]],[11,"is_in_subset","","",47,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",47,[[["self"]],["ss"]]],[11,"from_subset","","",47,[[["ss"]],["sp"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"to_subset","","",48,[[["self"]],["option"]]],[11,"is_in_subset","","",48,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",48,[[["self"]],["ss"]]],[11,"from_subset","","",48,[[["ss"]],["sp"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"to_subset","","",126,[[["self"]],["option"]]],[11,"is_in_subset","","",126,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",126,[[["self"]],["ss"]]],[11,"from_subset","","",126,[[["ss"]],["sp"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"import","","",126,N],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"to_subset","","",49,[[["self"]],["option"]]],[11,"is_in_subset","","",49,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",49,[[["self"]],["ss"]]],[11,"from_subset","","",49,[[["ss"]],["sp"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"to_subset","","",50,[[["self"]],["option"]]],[11,"is_in_subset","","",50,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",50,[[["self"]],["ss"]]],[11,"from_subset","","",50,[[["ss"]],["sp"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_default","","",50,[[],["result",["string"]]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"to_subset","","",101,[[["self"]],["option"]]],[11,"is_in_subset","","",101,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",101,[[["self"]],["ss"]]],[11,"from_subset","","",101,[[["ss"]],["sp"]]],[11,"pausable","","",101,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",101,N],[11,"setup","","",101,N],[11,"setup","","",101,N],[11,"run","","",101,N],[11,"reads","","",101,N],[11,"writes","","",101,N],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_default","","",101,[[],["result",["string"]]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"to_subset","","",102,[[["self"]],["option"]]],[11,"is_in_subset","","",102,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",102,[[["self"]],["ss"]]],[11,"from_subset","","",102,[[["ss"]],["sp"]]],[11,"run_now","","",102,N],[11,"setup","","",102,N],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"to_subset","","",103,[[["self"]],["option"]]],[11,"is_in_subset","","",103,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",103,[[["self"]],["ss"]]],[11,"from_subset","","",103,[[["ss"]],["sp"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"to_subset","","",104,[[["self"]],["option"]]],[11,"is_in_subset","","",104,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",104,[[["self"]],["ss"]]],[11,"from_subset","","",104,[[["ss"]],["sp"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"to_subset","","",127,[[["self"]],["option"]]],[11,"is_in_subset","","",127,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",127,[[["self"]],["ss"]]],[11,"from_subset","","",127,[[["ss"]],["sp"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_default","","",127,[[],["result",["string"]]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"to_subset","","",51,[[["self"]],["option"]]],[11,"is_in_subset","","",51,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",51,[[["self"]],["ss"]]],[11,"from_subset","","",51,[[["ss"]],["sp"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"to_subset","","",52,[[["self"]],["option"]]],[11,"is_in_subset","","",52,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",52,[[["self"]],["ss"]]],[11,"from_subset","","",52,[[["ss"]],["sp"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"to_subset","","",53,[[["self"]],["option"]]],[11,"is_in_subset","","",53,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",53,[[["self"]],["ss"]]],[11,"from_subset","","",53,[[["ss"]],["sp"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"to_subset","","",54,[[["self"]],["option"]]],[11,"is_in_subset","","",54,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",54,[[["self"]],["ss"]]],[11,"from_subset","","",54,[[["ss"]],["sp"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"to_subset","","",55,[[["self"]],["option"]]],[11,"is_in_subset","","",55,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",55,[[["self"]],["ss"]]],[11,"from_subset","","",55,[[["ss"]],["sp"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"to_subset","","",56,[[["self"]],["option"]]],[11,"is_in_subset","","",56,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",56,[[["self"]],["ss"]]],[11,"from_subset","","",56,[[["ss"]],["sp"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"to_subset","","",57,[[["self"]],["option"]]],[11,"is_in_subset","","",57,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",57,[[["self"]],["ss"]]],[11,"from_subset","","",57,[[["ss"]],["sp"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_default","","",57,[[],["result",["string"]]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"to_subset","","",105,[[["self"]],["option"]]],[11,"is_in_subset","","",105,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",105,[[["self"]],["ss"]]],[11,"from_subset","","",105,[[["ss"]],["sp"]]],[11,"pausable","","",105,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",105,N],[11,"setup","","",105,N],[11,"setup","","",105,N],[11,"run","","",105,N],[11,"reads","","",105,N],[11,"writes","","",105,N],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"to_subset","","",58,[[["self"]],["option"]]],[11,"is_in_subset","","",58,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",58,[[["self"]],["ss"]]],[11,"from_subset","","",58,[[["ss"]],["sp"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"to_subset","","",59,[[["self"]],["option"]]],[11,"is_in_subset","","",59,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",59,[[["self"]],["ss"]]],[11,"from_subset","","",59,[[["ss"]],["sp"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"to_subset","","",60,[[["self"]],["option"]]],[11,"is_in_subset","","",60,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",60,[[["self"]],["ss"]]],[11,"from_subset","","",60,[[["ss"]],["sp"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"to_subset","","",61,[[["self"]],["option"]]],[11,"is_in_subset","","",61,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",61,[[["self"]],["ss"]]],[11,"from_subset","","",61,[[["ss"]],["sp"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"to_subset","","",62,[[["self"]],["option"]]],[11,"is_in_subset","","",62,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",62,[[["self"]],["ss"]]],[11,"from_subset","","",62,[[["ss"]],["sp"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"import","","",62,N],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"to_subset","","",63,[[["self"]],["option"]]],[11,"is_in_subset","","",63,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",63,[[["self"]],["ss"]]],[11,"from_subset","","",63,[[["ss"]],["sp"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"to_subset","","",64,[[["self"]],["option"]]],[11,"is_in_subset","","",64,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",64,[[["self"]],["ss"]]],[11,"from_subset","","",64,[[["ss"]],["sp"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"to_subset","","",65,[[["self"]],["option"]]],[11,"is_in_subset","","",65,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",65,[[["self"]],["ss"]]],[11,"from_subset","","",65,[[["ss"]],["sp"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"to_subset","","",66,[[["self"]],["option"]]],[11,"is_in_subset","","",66,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",66,[[["self"]],["ss"]]],[11,"from_subset","","",66,[[["ss"]],["sp"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"to_subset","","",128,[[["self"]],["option"]]],[11,"is_in_subset","","",128,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",128,[[["self"]],["ss"]]],[11,"from_subset","","",128,[[["ss"]],["sp"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"to_subset","","",129,[[["self"]],["option"]]],[11,"is_in_subset","","",129,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",129,[[["self"]],["ss"]]],[11,"from_subset","","",129,[[["ss"]],["sp"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"to_subset","","",67,[[["self"]],["option"]]],[11,"is_in_subset","","",67,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",67,[[["self"]],["ss"]]],[11,"from_subset","","",67,[[["ss"]],["sp"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"to_subset","","",130,[[["self"]],["option"]]],[11,"is_in_subset","","",130,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",130,[[["self"]],["ss"]]],[11,"from_subset","","",130,[[["ss"]],["sp"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"to_subset","","",131,[[["self"]],["option"]]],[11,"is_in_subset","","",131,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",131,[[["self"]],["ss"]]],[11,"from_subset","","",131,[[["ss"]],["sp"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"to_subset","","",132,[[["self"]],["option"]]],[11,"is_in_subset","","",132,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",132,[[["self"]],["ss"]]],[11,"from_subset","","",132,[[["ss"]],["sp"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"to_subset","","",133,[[["self"]],["option"]]],[11,"is_in_subset","","",133,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",133,[[["self"]],["ss"]]],[11,"from_subset","","",133,[[["ss"]],["sp"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"to_subset","","",134,[[["self"]],["option"]]],[11,"is_in_subset","","",134,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",134,[[["self"]],["ss"]]],[11,"from_subset","","",134,[[["ss"]],["sp"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","amethyst_renderer::pipe::pass","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"to_subset","","",70,[[["self"]],["option"]]],[11,"is_in_subset","","",70,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",70,[[["self"]],["ss"]]],[11,"from_subset","","",70,[[["ss"]],["sp"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"hash","amethyst_renderer","",4,N],[11,"hash","","",3,N],[11,"hash","","",1,N],[11,"hash","","",5,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",6,[[["self"],["windowevent"]],["bool"]]],[11,"ne","","",6,[[["self"],["windowevent"]],["bool"]]],[11,"eq","","",0,[[["self"],["deviceevent"]],["bool"]]],[11,"ne","","",0,[[["self"],["deviceevent"]],["bool"]]],[11,"eq","","",5,[[["self"],["virtualkeycode"]],["bool"]]],[11,"eq","","",4,[[["self"],["mousebutton"]],["bool"]]],[11,"ne","","",4,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","","",1,[[["self"],["elementstate"]],["bool"]]],[11,"eq","","",3,[[["self"],["keyboardinput"]],["bool"]]],[11,"ne","","",3,[[["self"],["keyboardinput"]],["bool"]]],[11,"eq","","",2,[[["self"],["event"]],["bool"]]],[11,"ne","","",2,[[["self"],["event"]],["bool"]]],[11,"deserialize","","",1,[[["__d"]],["result",["elementstate"]]]],[11,"deserialize","","",3,[[["__d"]],["result",["keyboardinput"]]]],[11,"deserialize","","",5,[[["__d"]],["result",["virtualkeycode"]]]],[11,"deserialize","","",4,[[["__d"]],["result",["mousebutton"]]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"clone","","",2,[[["self"]],["event"]]],[11,"clone","","",5,[[["self"]],["virtualkeycode"]]],[11,"clone","","",6,[[["self"]],["windowevent"]]],[11,"clone","","",0,[[["self"]],["deviceevent"]]],[11,"clone","","",1,[[["self"]],["elementstate"]]],[11,"clone","","",3,[[["self"]],["keyboardinput"]]],[11,"clone","","",4,[[["self"]],["mousebutton"]]],[11,"cmp","","",5,[[["self"],["virtualkeycode"]],["ordering"]]],[11,"partial_cmp","","",5,[[["self"],["virtualkeycode"]],["option",["ordering"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["self"],["colormask"]],["colormask"]]],[11,"eq","","",15,[[["self"],["factor"]],["bool"]]],[11,"ne","","",15,[[["self"],["factor"]],["bool"]]],[11,"eq","","",11,[[["self"],["blend"]],["bool"]]],[11,"ne","","",11,[[["self"],["blend"]],["bool"]]],[11,"eq","","",111,[[["self"],["colormask"]],["bool"]]],[11,"ne","","",111,[[["self"],["colormask"]],["bool"]]],[11,"eq","","",14,[[["self"],["equation"]],["bool"]]],[11,"eq","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"ne","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"eq","","",13,[[["self"],["blendvalue"]],["bool"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,[[["self"],["colormask"]],["colormask"]]],[11,"clone","","",12,[[["self"]],["blendchannel"]]],[11,"clone","","",14,[[["self"]],["equation"]]],[11,"clone","","",13,[[["self"]],["blendvalue"]]],[11,"clone","","",11,[[["self"]],["blend"]]],[11,"clone","","",111,[[["self"]],["colormask"]]],[11,"clone","","",15,[[["self"]],["factor"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"extend","","",111,N],[11,"cmp","","",12,[[["self"],["blendchannel"]],["ordering"]]],[11,"cmp","","",111,[[["self"],["colormask"]],["ordering"]]],[11,"cmp","","",14,[[["self"],["equation"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["blendvalue"]],["ordering"]]],[11,"cmp","","",15,[[["self"],["factor"]],["ordering"]]],[11,"bitor_assign","","Adds the set of flags.",111,N],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["self"],["colormask"]],["colormask"]]],[11,"deserialize","","",13,[[["__d"]],["result",["blendvalue"]]]],[11,"deserialize","","",12,[[["__d"]],["result",["blendchannel"]]]],[11,"deserialize","","",15,[[["__d"]],["result",["factor"]]]],[11,"deserialize","","",11,[[["__d"]],["result",["blend"]]]],[11,"deserialize","","",14,[[["__d"]],["result",["equation"]]]],[11,"deserialize","","",111,[[["__d"]],["result",["colormask"]]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",111,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["self"],["colormask"]],["colormask"]]],[11,"hash","","",15,N],[11,"hash","","",111,N],[11,"hash","","",13,N],[11,"hash","","",11,N],[11,"hash","","",14,N],[11,"hash","","",12,N],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitxor_assign","","Toggles the set of flags.",111,N],[11,"not","","Returns the complement of this set of flags.",111,[[["self"]],["colormask"]]],[11,"partial_cmp","","",13,[[["self"],["blendvalue"]],["option",["ordering"]]]],[11,"partial_cmp","","",15,[[["self"],["factor"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["factor"]],["bool"]]],[11,"le","","",15,[[["self"],["factor"]],["bool"]]],[11,"gt","","",15,[[["self"],["factor"]],["bool"]]],[11,"ge","","",15,[[["self"],["factor"]],["bool"]]],[11,"partial_cmp","","",14,[[["self"],["equation"]],["option",["ordering"]]]],[11,"partial_cmp","","",111,[[["self"],["colormask"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["colormask"]],["bool"]]],[11,"le","","",111,[[["self"],["colormask"]],["bool"]]],[11,"gt","","",111,[[["self"],["colormask"]],["bool"]]],[11,"ge","","",111,[[["self"],["colormask"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["blendchannel"]],["option",["ordering"]]]],[11,"lt","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"le","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"gt","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"ge","","",12,[[["self"],["blendchannel"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["blend"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["blend"]],["bool"]]],[11,"le","","",11,[[["self"],["blend"]],["bool"]]],[11,"gt","","",11,[[["self"],["blend"]],["bool"]]],[11,"ge","","",11,[[["self"],["blend"]],["bool"]]],[11,"from_iter","","",111,[[["t"]],["colormask"]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,N],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,N],[11,"default","","",12,[[],["blendchannel"]]],[11,"default","","",11,[[],["blend"]]],[11,"eq","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"ne","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"eq","","",9,[[["self"],["surfacetype"]],["bool"]]],[11,"eq","","",10,[[["self"],["wrapmode"]],["bool"]]],[11,"eq","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"ne","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"hash","","",9,N],[11,"hash","","",7,N],[11,"hash","","",10,N],[11,"hash","","",8,N],[11,"deserialize","","",9,[[["__d"]],["result",["surfacetype"]]]],[11,"deserialize","","",10,[[["__d"]],["result",["wrapmode"]]]],[11,"deserialize","","",8,[[["__d"]],["result",["samplerinfo"]]]],[11,"deserialize","","",7,[[["__d"]],["result",["filtermethod"]]]],[11,"clone","","",7,[[["self"]],["filtermethod"]]],[11,"clone","","",9,[[["self"]],["surfacetype"]]],[11,"clone","","",8,[[["self"]],["samplerinfo"]]],[11,"clone","","",10,[[["self"]],["wrapmode"]]],[11,"cmp","","",7,[[["self"],["filtermethod"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["wrapmode"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["surfacetype"]],["ordering"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",7,[[["self"],["filtermethod"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"le","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"gt","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"ge","","",7,[[["self"],["filtermethod"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["samplerinfo"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"le","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"gt","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"ge","","",8,[[["self"],["samplerinfo"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["wrapmode"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["surfacetype"]],["option",["ordering"]]]],[11,"compile","","",90,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",90,N],[11,"compile","","",91,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",91,N],[11,"compile","","",92,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",92,N],[11,"compile","","",93,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",93,N],[11,"compile","","",94,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",94,N],[11,"compile","","",95,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",95,N],[11,"compile","","",96,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",96,N],[11,"compile","","",97,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",97,N],[11,"compile","","",98,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",98,N],[11,"apply","","",72,N],[11,"new_targets","","",72,[[["self"],["hashmap",["string","target"]]]]],[11,"targets","","Returns an immutable reference to all targets and their name strings.",72,[[["self"]],["hashmap"]]],[11,"build","","",73,[[["self"],["factory"],["target"],["u16"]],["result",["pipeline","error"]]]],[11,"apply","","",74,N],[11,"new_targets","","",74,[[["self"],["hashmap"]]]],[11,"build","","",84,[[["box"],["renderer"]],["result",["mesh","error"]]]],[11,"vertices","","",84,[[["self"]],["vec"]]],[11,"box_clone","","",84,[[["self"]],["box",["meshcreator"]]]],[11,"build","","",43,[[["box"],["renderer"]],["result",["mesh","error"]]]],[11,"vertices","","",43,[[["self"]],["vec"]]],[11,"box_clone","","",43,[[["self"]],["box",["meshcreator"]]]],[11,"partial_cmp","","",19,[[["self"],["rgba"]],["option",["ordering"]]]],[11,"lt","","",19,[[["self"],["rgba"]],["bool"]]],[11,"le","","",19,[[["self"],["rgba"]],["bool"]]],[11,"gt","","",19,[[["self"],["rgba"]],["bool"]]],[11,"ge","","",19,[[["self"],["rgba"]],["bool"]]],[11,"default","","",122,[[],["meta"]]],[11,"default","","",39,[[],["init"]]],[11,"default","","",36,[[],["data"]]],[11,"default","","",73,[[],["self"]]],[11,"default","","",17,[[],["activecamera"]]],[11,"default","","",19,[[],["rgba"]]],[11,"default","","",20,[[],["self"]]],[11,"default","","",22,[[],["debuglinescomponent"]]],[11,"default","","",21,[[],["debuglines"]]],[11,"default","","",24,[[],["self"]]],[11,"default","","",117,[[],["hidden"]]],[11,"default","","",118,[[],["hiddenpropagate"]]],[11,"default","","",119,[[],["hidehierarchysystem"]]],[11,"default","","",26,[[],["self"]]],[11,"default","","",27,[[],["self"]]],[11,"default","","",28,[[],["self"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",120,[[],["lightprefab"]]],[11,"default","","",32,[[],["self"]]],[11,"default","","",33,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["drawpbmseparate"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["drawshadedseparate"]]],[11,"default","","",34,[[],["skyboxcolor"]]],[11,"default","","",42,[[],["ambientcolor"]]],[11,"default","","",99,[[],["windowmessages"]]],[11,"default","","",45,[[],["jointtransformsprefab"]]],[11,"default","","",50,[[],["spritevisibility"]]],[11,"default","","",101,[[],["spritevisibilitysortingsystem"]]],[11,"default","","",127,[[],["transparent"]]],[11,"default","","",57,[[],["visibility"]]],[11,"eq","","",122,[[["self"],["meta"]],["bool"]]],[11,"ne","","",122,[[["self"],["meta"]],["bool"]]],[11,"eq","","",39,[[["self"],["init"]],["bool"]]],[11,"ne","","",39,[[["self"],["init"]],["bool"]]],[11,"eq","","",36,[[["self"],["data"]],["bool"]]],[11,"ne","","",36,[[["self"],["data"]],["bool"]]],[11,"eq","","",65,[[["self"],["depthmode"]],["bool"]]],[11,"eq","","",38,[[["self"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["colorbuffer"]],["bool"]]],[11,"ne","","",35,[[["self"],["colorbuffer"]],["bool"]]],[11,"eq","","",37,[[["self"],["depthbuffer"]],["bool"]]],[11,"ne","","",37,[[["self"],["depthbuffer"]],["bool"]]],[11,"eq","","",76,[[["self"],["target"]],["bool"]]],[11,"ne","","",76,[[["self"],["target"]],["bool"]]],[11,"eq","","",77,[[["self"],["targetbuilder"]],["bool"]]],[11,"ne","","",77,[[["self"],["targetbuilder"]],["bool"]]],[11,"eq","","",59,[[["self"],["projection"]],["bool"]]],[11,"ne","","",59,[[["self"],["projection"]],["bool"]]],[11,"eq","","",18,[[["self"],["camera"]],["bool"]]],[11,"ne","","",18,[[["self"],["camera"]],["bool"]]],[11,"eq","","",17,[[["self"],["activecamera"]],["bool"]]],[11,"ne","","",17,[[["self"],["activecamera"]],["bool"]]],[11,"eq","","",19,[[["self"],["rgba"]],["bool"]]],[11,"ne","","",19,[[["self"],["rgba"]],["bool"]]],[11,"eq","","",20,[[["self"],["displayconfig"]],["bool"]]],[11,"ne","","",20,[[["self"],["displayconfig"]],["bool"]]],[11,"eq","","",64,[[["self"],["light"]],["bool"]]],[11,"ne","","",64,[[["self"],["light"]],["bool"]]],[11,"eq","","",26,[[["self"],["directionallight"]],["bool"]]],[11,"ne","","",26,[[["self"],["directionallight"]],["bool"]]],[11,"eq","","",27,[[["self"],["pointlight"]],["bool"]]],[11,"ne","","",27,[[["self"],["pointlight"]],["bool"]]],[11,"eq","","",28,[[["self"],["spotlight"]],["bool"]]],[11,"ne","","",28,[[["self"],["spotlight"]],["bool"]]],[11,"eq","","",29,[[["self"],["sunlight"]],["bool"]]],[11,"ne","","",29,[[["self"],["sunlight"]],["bool"]]],[11,"eq","","",89,[[["self"],["meshbuilder"]],["bool"]]],[11,"ne","","",89,[[["self"],["meshbuilder"]],["bool"]]],[11,"eq","","",32,[[["self"],["textureoffset"]],["bool"]]],[11,"ne","","",32,[[["self"],["textureoffset"]],["bool"]]],[11,"eq","","",30,[[["self"],["material"]],["bool"]]],[11,"ne","","",30,[[["self"],["material"]],["bool"]]],[11,"eq","","",90,[[["self"],["drawdebuglines"]],["bool"]]],[11,"ne","","",90,[[["self"],["drawdebuglines"]],["bool"]]],[11,"eq","","",91,[[["self"],["drawflat"]],["bool"]]],[11,"ne","","",91,[[["self"],["drawflat"]],["bool"]]],[11,"eq","","",92,[[["self"],["drawflatseparate"]],["bool"]]],[11,"ne","","",92,[[["self"],["drawflatseparate"]],["bool"]]],[11,"eq","","",94,[[["self"],["drawpbm"]],["bool"]]],[11,"ne","","",94,[[["self"],["drawpbm"]],["bool"]]],[11,"eq","","",95,[[["self"],["drawpbmseparate"]],["bool"]]],[11,"ne","","",95,[[["self"],["drawpbmseparate"]],["bool"]]],[11,"eq","","",96,[[["self"],["drawshaded"]],["bool"]]],[11,"ne","","",96,[[["self"],["drawshaded"]],["bool"]]],[11,"eq","","",97,[[["self"],["drawshadedseparate"]],["bool"]]],[11,"ne","","",97,[[["self"],["drawshadedseparate"]],["bool"]]],[11,"eq","","",48,[[["self"],["spritesheet"]],["bool"]]],[11,"ne","","",48,[[["self"],["spritesheet"]],["bool"]]],[11,"eq","","",67,[[["self"],["flipped"]],["bool"]]],[11,"eq","","",46,[[["self"],["sprite"]],["bool"]]],[11,"ne","","",46,[[["self"],["sprite"]],["bool"]]],[11,"eq","","",49,[[["self"],["texturecoordinates"]],["bool"]]],[11,"ne","","",49,[[["self"],["texturecoordinates"]],["bool"]]],[11,"eq","","",47,[[["self"],["spriterender"]],["bool"]]],[11,"ne","","",47,[[["self"],["spriterender"]],["bool"]]],[11,"eq","","",103,[[["self"],["texture"]],["bool"]]],[11,"ne","","",103,[[["self"],["texture"]],["bool"]]],[11,"eq","","",104,[[["self"],["texturebuilder"]],["bool"]]],[11,"ne","","",104,[[["self"],["texturebuilder"]],["bool"]]],[11,"eq","","",56,[[["self"],["separate"]],["bool"]]],[11,"ne","","",56,[[["self"],["separate"]],["bool"]]],[11,"eq","","",51,[[["self"],["poscolor"]],["bool"]]],[11,"ne","","",51,[[["self"],["poscolor"]],["bool"]]],[11,"eq","","",52,[[["self"],["poscolornorm"]],["bool"]]],[11,"ne","","",52,[[["self"],["poscolornorm"]],["bool"]]],[11,"eq","","",55,[[["self"],["postex"]],["bool"]]],[11,"ne","","",55,[[["self"],["postex"]],["bool"]]],[11,"eq","","",54,[[["self"],["posnormtex"]],["bool"]]],[11,"ne","","",54,[[["self"],["posnormtex"]],["bool"]]],[11,"eq","","",53,[[["self"],["posnormtangtex"]],["bool"]]],[11,"ne","","",53,[[["self"],["posnormtangtex"]],["bool"]]],[11,"from","","",18,[[["projection"]],["self"]]],[11,"from","","",19,N],[11,"from","","",19,N],[11,"from","","",19,N],[11,"from","","",19,N],[11,"from","","",20,[[["windowbuilder"]],["self"]]],[11,"from","","",60,[[["vec",["poscolor"]]],["self"]]],[11,"from","","",60,[[["vec",["poscolornorm"]]],["self"]]],[11,"from","","",60,[[["vec",["postex"]]],["self"]]],[11,"from","","",60,[[["vec",["posnormtex"]]],["self"]]],[11,"from","","",60,[[["vec",["posnormtangtex"]]],["self"]]],[11,"from","","",60,[[["m"]],["self"]]],[11,"from","","",84,[[["vertexbuffercombination"]],["self"]]],[11,"from","","",61,N],[11,"from","","",61,N],[11,"from","","",64,[[["directionallight"]],["self"]]],[11,"from","","",64,[[["pointlight"]],["self"]]],[11,"from","","",64,[[["spotlight"]],["self"]]],[11,"from","","",64,[[["sunlight"]],["self"]]],[11,"from","","",84,[[["internalshape"]],["self"]]],[11,"from","","",43,[[["animatedvertexbuffercombination"]],["self"]]],[11,"from","","",46,N],[11,"from","","",46,N],[11,"from","","",49,N],[11,"from","","",49,N],[11,"as_ref","","",42,[[["self"]],["rgba"]]],[11,"clone","amethyst_renderer::pipe::pass","",70,[[["self"]],["compiledpass"]]],[11,"clone","amethyst_renderer","",122,[[["self"]],["meta"]]],[11,"clone","","",39,[[["self"]],["init"]]],[11,"clone","","",36,[[["self"]],["data"]]],[11,"clone","","",65,[[["self"]],["depthmode"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",72,[[["self"]],["pipeline"]]],[11,"clone","","",73,[[["self"]],["pipelinebuilder"]]],[11,"clone","","",74,[[["self"]],["stage"]]],[11,"clone","","",75,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["colorbuffer"]]],[11,"clone","","",37,[[["self"]],["depthbuffer"]]],[11,"clone","","",76,[[["self"]],["target"]]],[11,"clone","","",77,[[["self"]],["targetbuilder"]]],[11,"clone","","",59,[[["self"]],["projection"]]],[11,"clone","","",18,[[["self"]],["camera"]]],[11,"clone","","",17,[[["self"]],["activecamera"]]],[11,"clone","","",58,[[["self"]],["cameraprefab"]]],[11,"clone","","",19,[[["self"]],["rgba"]]],[11,"clone","","",20,[[["self"]],["displayconfig"]]],[11,"clone","","",60,[[["self"]],["meshdata"]]],[11,"clone","","",116,[[["self"]],["objformat"]]],[11,"clone","","",84,[[["self"]],["combomeshcreator"]]],[11,"clone","","",24,[[["self"]],["materialprefab"]]],[11,"clone","","",25,[[["self"]],["texturemetadata"]]],[11,"clone","","",61,[[["self"]],["texturedata"]]],[11,"clone","","",63,[[["self"]],["textureprefab"]]],[11,"clone","","",23,[[["self"]],["imagedata"]]],[11,"clone","","",85,[[["self"]],["jpgformat"]]],[11,"clone","","",86,[[["self"]],["pngformat"]]],[11,"clone","","",114,[[["self"]],["bmpformat"]]],[11,"clone","","",87,[[["self"]],["tgaformat"]]],[11,"clone","","",62,[[["self"]],["textureformat"]]],[11,"clone","","",117,[[["self"]],["hidden"]]],[11,"clone","","",118,[[["self"]],["hiddenpropagate"]]],[11,"clone","","",64,[[["self"]],["light"]]],[11,"clone","","",26,[[["self"]],["directionallight"]]],[11,"clone","","",27,[[["self"]],["pointlight"]]],[11,"clone","","",28,[[["self"]],["spotlight"]]],[11,"clone","","",29,[[["self"]],["sunlight"]]],[11,"clone","","",120,[[["self"]],["lightprefab"]]],[11,"clone","","",121,[[["self"]],["vertexbuffer"]]],[11,"clone","","",88,[[["self"]],["mesh"]]],[11,"clone","","",89,[[["self"]],["meshbuilder"]]],[11,"clone","","",32,[[["self"]],["textureoffset"]]],[11,"clone","","",30,[[["self"]],["material"]]],[11,"clone","","",31,[[["self"]],["materialdefaults"]]],[11,"clone","","",90,[[["self"]],["drawdebuglines"]]],[11,"clone","","",91,[[["self"]],["drawflat"]]],[11,"clone","","",92,[[["self"]],["drawflatseparate"]]],[11,"clone","","",93,[[["self"]],["drawflat2d"]]],[11,"clone","","",94,[[["self"]],["drawpbm"]]],[11,"clone","","",95,[[["self"]],["drawpbmseparate"]]],[11,"clone","","",96,[[["self"]],["drawshaded"]]],[11,"clone","","",97,[[["self"]],["drawshadedseparate"]]],[11,"clone","","",98,[[["self"]],["drawskybox"]]],[11,"clone","","",34,[[["self"]],["skyboxcolor"]]],[11,"clone","","",42,[[["self"]],["ambientcolor"]]],[11,"clone","","",124,[[["self"]],["shapeprefab"]]],[11,"clone","","",66,[[["self"]],["shape"]]],[11,"clone","","",129,[[["self"]],["jointweights"]]],[11,"clone","","",128,[[["self"]],["jointids"]]],[11,"clone","","",44,[[["self"]],["jointtransforms"]]],[11,"clone","","",43,[[["self"]],["animatedcombomeshcreator"]]],[11,"clone","","",45,[[["self"]],["jointtransformsprefab"]]],[11,"clone","","",48,[[["self"]],["spritesheet"]]],[11,"clone","","",67,[[["self"]],["flipped"]]],[11,"clone","","",46,[[["self"]],["sprite"]]],[11,"clone","","",49,[[["self"]],["texturecoordinates"]]],[11,"clone","","",47,[[["self"]],["spriterender"]]],[11,"clone","","",126,[[["self"]],["spritesheetformat"]]],[11,"clone","","",103,[[["self"]],["texture"]]],[11,"clone","","",104,[[["self"]],["texturebuilder"]]],[11,"clone","","",127,[[["self"]],["transparent"]]],[11,"clone","","",132,[[["self"]],["position"]]],[11,"clone","","",130,[[["self"]],["color"]]],[11,"clone","","",134,[[["self"]],["texcoord"]]],[11,"clone","","",131,[[["self"]],["normal"]]],[11,"clone","","",133,[[["self"]],["tangent"]]],[11,"clone","","",56,[[["self"]],["separate"]]],[11,"clone","","",51,[[["self"]],["poscolor"]]],[11,"clone","","",52,[[["self"]],["poscolornorm"]]],[11,"clone","","",55,[[["self"]],["postex"]]],[11,"clone","","",54,[[["self"]],["posnormtex"]]],[11,"clone","","",53,[[["self"]],["posnormtangtex"]]],[11,"drop","","",41,[[["self"]]]],[11,"fmt","amethyst_renderer::pipe::pass","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_renderer","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"hash","","",122,N],[11,"hash","","",39,N],[11,"hash","","",65,N],[11,"hash","","",103,N],[11,"hash","","",104,N],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",65,[[["self"],["__s"]],["result"]]],[11,"serialize","","",77,[[["self"],["__s"]],["result"]]],[11,"serialize","","",59,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",58,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"serialize","","",116,[[["self"],["__s"]],["result"]]],[11,"serialize","","",84,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","","",63,[[["self"],["__s"]],["result"]]],[11,"serialize","","",85,[[["self"],["__s"]],["result"]]],[11,"serialize","","",86,[[["self"],["__s"]],["result"]]],[11,"serialize","","",114,[[["self"],["__s"]],["result"]]],[11,"serialize","","",87,[[["self"],["__s"]],["result"]]],[11,"serialize","","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","","",115,[[["self"],["__s"]],["result"]]],[11,"serialize","","",64,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",120,[[["self"],["__s"]],["result"]]],[11,"serialize","","",89,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"serialize","","",124,[[["self"],["__s"]],["result"]]],[11,"serialize","","",66,[[["self"],["__s"]],["result"]]],[11,"serialize","","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","","",67,[[["self"],["__s"]],["result"]]],[11,"serialize","","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","","",126,[[["self"],["__s"]],["result"]]],[11,"serialize","","",104,[[["self"],["__s"]],["result"]]],[11,"serialize","","",56,[[["self"],["__s"]],["result"]]],[11,"serialize","","",51,[[["self"],["__s"]],["result"]]],[11,"serialize","","",52,[[["self"],["__s"]],["result"]]],[11,"serialize","","",55,[[["self"],["__s"]],["result"]]],[11,"serialize","","",54,[[["self"],["__s"]],["result"]]],[11,"serialize","","",53,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",65,[[["__d"]],["result"]]],[11,"deserialize","","",77,[[["__d"]],["result"]]],[11,"deserialize","","",59,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",58,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"deserialize","","",116,[[["__d"]],["result"]]],[11,"deserialize","","",84,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]],[11,"deserialize","","",61,[[["__d"]],["result"]]],[11,"deserialize","","",63,[[["__d"]],["result"]]],[11,"deserialize","","",85,[[["__d"]],["result"]]],[11,"deserialize","","",86,[[["__d"]],["result"]]],[11,"deserialize","","",114,[[["__d"]],["result"]]],[11,"deserialize","","",87,[[["__d"]],["result"]]],[11,"deserialize","","",62,[[["__d"]],["result"]]],[11,"deserialize","","",115,[[["__d"]],["result"]]],[11,"deserialize","","",64,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"deserialize","","",120,[[["__d"]],["result"]]],[11,"deserialize","","",89,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","","",34,[[["__d"]],["result"]]],[11,"deserialize","","",42,[[["__d"]],["result"]]],[11,"deserialize","","",124,[[["__d"]],["result"]]],[11,"deserialize","","",66,[[["__d"]],["result"]]],[11,"deserialize","","",45,[[["__d"]],["result"]]],[11,"deserialize","","",67,[[["__d"]],["result"]]],[11,"deserialize","","",46,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",126,[[["__d"]],["result"]]],[11,"deserialize","","",104,[[["__d"]],["result"]]],[11,"deserialize","","",56,[[["__d"]],["result"]]],[11,"deserialize","","",51,[[["__d"]],["result"]]],[11,"deserialize","","",52,[[["__d"]],["result"]]],[11,"deserialize","","",55,[[["__d"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],["result"]]],[11,"deserialize","","",53,[[["__d"]],["result"]]],[11,"build","","",83,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"run","","",112,N],[11,"run","","",119,N],[11,"setup","","",119,[[["self"],["resources"]]]],[11,"run","","",101,N],[11,"run","","",105,N],[11,"setup","","",125,[[["resources"]]]],[11,"fetch","","",125,[[["resources"]],["self"]]],[11,"reads","","",125,[[],["vec",["resourceid"]]]],[11,"writes","","",125,[[],["vec",["resourceid"]]]],[11,"run_now","","",102,[[["self"],["resources"]]]],[11,"setup","","",102,[[["self"],["resources"]]]],[11,"query","","",26,[[["str"]],["option",["element"]]]],[11,"query","","",27,[[["str"]],["option",["element"]]]],[11,"query","","",28,[[["str"]],["option",["element"]]]],[11,"query","","",29,[[["str"]],["option",["element"]]]],[11,"convert","","",19,[[["self"]],["uniformvalue"]]],[11,"get_format","","",19,N],[11,"bake_to","","",36,[[["self"],["rawdataset"],["meta"],["manager"],["accessinfo"]]]],[11,"link_to","","",39,[[["self"],["descriptor"],["programinfo"]],["result",["meta","initerror"]]]],[11,"import","","",116,N],[11,"import","","",85,[[["self"],["vec",["u8"]],["texturemetadata"]],["result",["texturedata","error"]]]],[11,"import","","",86,[[["self"],["vec",["u8"]],["texturemetadata"]],["result",["texturedata","error"]]]],[11,"import","","",114,[[["self"],["vec",["u8"]],["texturemetadata"]],["result",["texturedata","error"]]]],[11,"import","","",87,[[["self"],["vec",["u8"]],["texturemetadata"]],["result",["texturedata","error"]]]],[11,"import","","",62,[[["self"],["vec",["u8"]],["texturemetadata"]],["result",["texturedata","error"]]]],[11,"import","","",126,N],[11,"add_to_entity","","",58,N],[11,"add_to_entity","","",113,N],[11,"add_to_entity","","",60,N],[11,"add_to_entity","","",24,N],[11,"load_sub_assets","","",24,N],[11,"add_to_entity","","",61,N],[11,"add_to_entity","","",63,N],[11,"load_sub_assets","","",63,N],[11,"add_to_entity","","",115,N],[11,"load_sub_assets","","",115,N],[11,"add_to_entity","","",64,N],[11,"add_to_entity","","",120,N],[11,"load_sub_assets","","",120,N],[11,"add_to_entity","","",42,N],[11,"add_to_entity","","",124,N],[11,"load_sub_assets","","",124,N],[11,"add_to_entity","","",45,N],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD modifications.",8,[[["filtermethod"],["wrapmode"]],["samplerinfo"]]],[11,"get_total_bits","","Return the total number of bits for this format.",9,[[["self"]],["u8"]]],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",9,[[["self"]],["u8"]]],[11,"new","","Create a new blend state with a given equation.",11,[[["equation"],["factor"],["factor"]],["blend"]]],[18,"RED","","",111,N],[18,"GREEN","","",111,N],[18,"BLUE","","",111,N],[18,"ALPHA","","",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["colormask"]]],[11,"all","","Returns the set containing all flags.",111,[[],["colormask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,[[["u8"]],["option",["colormask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,[[["u8"]],["colormask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,[[["self"],["colormask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,[[["self"],["colormask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,N],[11,"remove","","Removes the specified flags in-place.",111,N],[11,"toggle","","Toggles the specified flags in-place.",111,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,N],[18,"NAME","","Name of the attribute It is used to bind to the attributes in shaders",107,N],[18,"FORMAT","","Format of the attribute defines arity and type",107,N],[18,"SIZE","","Size of the attribue",107,N],[18,"ATTRIBUTES","","List of all attributes formats with name and offset.",109,N],[11,"size","","Returns the size of a single vertex in bytes.",109,[[],["usize"]]],[11,"attribute","","Returns attribute of vertex by type",109,[[],["attributeformat"]]],[18,"FORMAT","","Individual format of the attribute for this vertex format",110,N],[18,"QUERIED_ATTRIBUTES","","Attributes from tuple `T`",108,N]],"paths":[[4,"DeviceEvent"],[4,"ElementState"],[4,"Event"],[3,"KeyboardInput"],[4,"MouseButton"],[4,"VirtualKeyCode"],[4,"WindowEvent"],[4,"FilterMethod"],[3,"SamplerInfo"],[4,"SurfaceType"],[4,"WrapMode"],[3,"Blend"],[3,"BlendChannel"],[4,"BlendValue"],[4,"Equation"],[4,"Factor"],[3,"Blink"],[3,"ActiveCamera"],[3,"Camera"],[3,"Rgba"],[3,"DisplayConfig"],[3,"DebugLines"],[3,"DebugLinesComponent"],[3,"ImageData"],[3,"MaterialPrefab"],[3,"TextureMetadata"],[3,"DirectionalLight"],[3,"PointLight"],[3,"SpotLight"],[3,"SunLight"],[3,"Material"],[3,"MaterialDefaults"],[3,"TextureOffset"],[3,"DebugLinesParams"],[3,"SkyboxColor"],[3,"ColorBuffer"],[3,"Data"],[3,"DepthBuffer"],[3,"Effect"],[3,"Init"],[3,"NewEffect"],[3,"Renderer"],[3,"AmbientColor"],[3,"AnimatedComboMeshCreator"],[3,"JointTransforms"],[3,"JointTransformsPrefab"],[3,"Sprite"],[3,"SpriteRender"],[3,"SpriteSheet"],[3,"TextureCoordinates"],[3,"SpriteVisibility"],[3,"PosColor"],[3,"PosColorNorm"],[3,"PosNormTangTex"],[3,"PosNormTex"],[3,"PosTex"],[3,"Separate"],[3,"Visibility"],[4,"CameraPrefab"],[4,"Projection"],[4,"MeshData"],[4,"TextureData"],[4,"TextureFormat"],[4,"TexturePrefab"],[4,"Light"],[4,"DepthMode"],[4,"Shape"],[4,"Flipped"],[8,"PassData"],[8,"Pass"],[3,"CompiledPass"],[3,"EffectBuilder"],[3,"Pipeline"],[3,"PipelineBuilder"],[3,"Stage"],[3,"StageBuilder"],[3,"Target"],[3,"TargetBuilder"],[8,"PipelineBuild"],[8,"PipelineData"],[8,"PolyPipeline"],[8,"PolyStages"],[8,"PolyStage"],[3,"RenderBundle"],[3,"ComboMeshCreator"],[3,"JpgFormat"],[3,"PngFormat"],[3,"TgaFormat"],[3,"Mesh"],[3,"MeshBuilder"],[3,"DrawDebugLines"],[3,"DrawFlat"],[3,"DrawFlatSeparate"],[3,"DrawFlat2D"],[3,"DrawPbm"],[3,"DrawPbmSeparate"],[3,"DrawShaded"],[3,"DrawShadedSeparate"],[3,"DrawSkybox"],[3,"WindowMessages"],[3,"ScreenDimensions"],[3,"SpriteVisibilitySortingSystem"],[3,"RenderSystem"],[3,"Texture"],[3,"TextureBuilder"],[3,"VisibilitySortingSystem"],[8,"MeshCreator"],[8,"Attribute"],[8,"Query"],[8,"VertexFormat"],[8,"With"],[3,"ColorMask"],[3,"BlinkSystem"],[3,"ActiveCameraPrefab"],[3,"BmpFormat"],[3,"GraphicsPrefab"],[3,"ObjFormat"],[3,"Hidden"],[3,"HiddenPropagate"],[3,"HideHierarchySystem"],[3,"LightPrefab"],[3,"VertexBuffer"],[3,"Meta"],[3,"InternalShape"],[3,"ShapePrefab"],[3,"ShapeUpload"],[3,"SpriteSheetFormat"],[3,"Transparent"],[4,"JointIds"],[4,"JointWeights"],[4,"Color"],[4,"Normal"],[4,"Position"],[4,"Tangent"],[4,"TexCoord"]]};
searchIndex["amethyst_test"]={"doc":"Test harness to support testing of Amethyst types, including:","items":[[3,"AmethystApplication","amethyst_test","Builder for an Amethyst application.",N,N],[3,"EffectReturn","","Convenience type for storing and retrieving the result of an effect.",N,N],[12,"0","","",0,N],[3,"MaterialAnimationFixture","","Fixture to test material animation loading.",N,N],[3,"SpriteRenderAnimationFixture","","Fixture to test sprite render animation loading.",N,N],[3,"CustomDispatcherState","","State with a custom dispatcher.",N,N],[3,"CustomDispatcherStateBuilder","","Builder for the `CustomDispatcherState`.",N,N],[3,"FunctionState","","Runs a function in `.update()` then `Pop`s itself.",N,N],[3,"PopState","","State that returns `Trans::Pop` on `.update()`.",N,N],[3,"SequencerState","","`Push`es each `State` onto the Amethyst state stack in reverse order (LIFO).",N,N],[11,"blank","","Returns an Amethyst application without any bundles.",1,[[],["amethystapplication",["gamedata","stateevent","stateeventreader"]]]],[11,"ui_base","","Returns an application with the Transform, Input, and UI bundles.",1,[[],["amethystapplication",["gamedata","stateevent","stateeventreader"]]]],[11,"render_base","","Returns an application with the Animation, Transform, and Render bundles.",1,[[["n"],["bool"]],["amethystapplication",["gamedata","stateevent","stateeventreader"]]]],[11,"assets_dir","","Returns a `String` to `<crate_dir>/assets`.",1,[[],["result",["pathbuf","error"]]]],[11,"build","","Returns the built Application.",1,[[["self"]],["result",["coreapplication","error"]]]],[11,"run","","Runs the application and returns `Ok(())` if nothing went wrong.",1,[[["self"]],["result",["error"]]]],[11,"with_custom_event_type","","Use the specified custom event type instead of `()`.",1,[[["self"]],["amethystapplication"]]],[11,"with_bundle","","Adds a bundle to the list of bundles.",1,[[["self"],["b"]],["self"]]],[11,"with_bundle_fn","","Adds a bundle to the list of bundles.",1,[[["self"],["fnbundle"]],["self"]]],[11,"with_ui_bundles","","Registers `InputBundle` and `UiBundle` with this application.",1,[[["self"]],["self"]]],[11,"with_render_bundle","","Registers the `RenderBundle` with this application.",1,[[["self"],["n"],["bool"]],["self"]]],[11,"with_resource","","Adds a resource to the `World`.",1,[[["self"],["res"]],["self"]]],[11,"with_state","","Adds a state to run in the Amethyst application.",1,[[["self"],["fnstatelocal"]],["self"]]],[11,"with_system","","Registers a `System` into this application's `GameData`.",1,N],[11,"with_system_single","","Registers a `System` to run in a `CustomDispatcherState`.",1,N],[11,"with_fn","","Registers a function to run in the `World`.",1,[[["self"],["f"]],["self"]]],[11,"with_setup","","Registers a function that sets up the `World`.",1,[[["self"],["f"]],["self"]]],[11,"with_effect","","Registers a function that executes a desired effect.",1,[[["self"],["f"]],["self"]]],[11,"with_assertion","","Registers a function to assert an expected outcome.",1,[[["self"],["f"]],["self"]]],[11,"mark_render","","Marks that this application uses the `RenderBundle`.",1,[[["self"]],["self"]]],[11,"display_config","","Convenience function that returns a `DisplayConfig`.",1,[[["string"],["bool"]],["displayconfig"]]],[11,"pipeline","","Convenience function that returns a `PipelineBuilder`.",1,[[],["pipelinebuilder",["queue"]]]],[11,"effect","","Loads a material animation into the `World`.",2,[[["world"]]]],[11,"assertion","","Asserts that the material animation is present in the `World`.",2,[[["world"]]]],[11,"effect","","Loads a sprite render animation into the `World`.",3,[[["world"]]]],[11,"assertion","","Asserts that the sprite render animation is present in the `World`.",3,[[["world"]]]],[0,"prelude","","Commonly used imports.",N,N],[3,"AmethystApplication","amethyst_test::prelude","Builder for an Amethyst application.",N,N],[3,"EffectReturn","","Convenience type for storing and retrieving the result of an effect.",N,N],[12,"0","","",0,N],[3,"FunctionState","","Runs a function in `.update()` then `Pop`s itself.",N,N],[3,"PopState","","State that returns `Trans::Pop` on `.update()`.",N,N],[3,"SequencerState","","`Push`es each `State` onto the Amethyst state stack in reverse order (LIFO).",N,N],[11,"new","amethyst_test","Constructs a new `CustomDispatcherStateBuilder`.",4,[[],["self"]]],[11,"with","","Registers a `System` with the dispatcher builder.",4,N],[11,"build","","Builds and returns the `CustomDispatcherState`.",4,[[["self"]],["customdispatcherstate"]]],[11,"new","","Constructs a new `FunctionState`.",5,[[["f"]],["self"]]],[11,"new","","Constructs a new `SequencerState`.",6,[[["vec",["box"]]],["self"]]],[17,"HIDPI","","The ratio between the backing framebuffer resolution and the window size in screen pixels. This is typically one for a normal display and two for a retina display.",N,N],[17,"SCREEN_HEIGHT","","Screen height used in predefined display configuration.",N,N],[17,"SCREEN_WIDTH","","Screen width used in predefined display configuration.",N,N],[8,"GameUpdate","","Exposes the `update` method of game data so that this crate's `State`s can invoke it.",N,N],[11,"update","","Runs the systems to update the game.",7,[[["self"],["world"]]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_default","","",1,[[],["result",["string"]]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"on_start","","Executed when the game state begins.",8,N],[11,"on_stop","","Executed when the game state exits.",8,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",8,N],[11,"on_resume","","Executed when the application returns to this game state once again.",8,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",8,[[["self"],["statedata",["gamedata"]],["stateevent"]],["trans",["gamedata","stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",8,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",8,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",8,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",8,N],[11,"try_default","","",8,[[],["result",["string"]]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"on_start","","Executed when the game state begins.",5,N],[11,"on_stop","","Executed when the game state exits.",5,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",5,N],[11,"on_resume","","Executed when the application returns to this game state once again.",5,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",5,[[["self"],["statedata",["gamedata"]],["stateevent"]],["trans",["gamedata","stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",5,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",5,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",5,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",5,N],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"on_start","","Executed when the game state begins.",9,N],[11,"on_stop","","Executed when the game state exits.",9,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",9,N],[11,"on_resume","","Executed when the application returns to this game state once again.",9,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",9,[[["self"],["statedata"],["stateevent"]],["trans",["stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",9,[[["self"],["statedata"]],["trans",["stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",9,[[["self"],["statedata"]],["trans",["stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",9,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",9,N],[11,"on_start","","Executed when the game state begins.",9,N],[11,"on_stop","","Executed when the game state exits.",9,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",9,N],[11,"on_resume","","Executed when the application returns to this game state once again.",9,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",9,[[["self"],["statedata",["gamedata"]],["stateevent"]],["trans",["gamedata","stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",9,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",9,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",9,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",9,N],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"on_start","","Executed when the game state begins.",6,N],[11,"on_stop","","Executed when the game state exits.",6,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,N],[11,"on_resume","","Executed when the application returns to this game state once again.",6,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",6,[[["self"],["statedata"],["stateevent"]],["trans",["stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",6,[[["self"],["statedata"]],["trans",["stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",6,[[["self"],["statedata"]],["trans",["stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",6,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",6,N],[11,"on_start","","Executed when the game state begins.",6,N],[11,"on_stop","","Executed when the game state exits.",6,N],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,N],[11,"on_resume","","Executed when the application returns to this game state once again.",6,N],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",6,[[["self"],["statedata",["gamedata"]],["stateevent"]],["trans",["gamedata","stateevent"]]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",6,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).",6,[[["self"],["statedata",["gamedata"]]],["trans",["gamedata","stateevent"]]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",6,N],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit), even when this is not the active state, as long as this state is on the StateMachine's state-stack.",6,N],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"default","","",1,[[],["amethystapplication"]]],[11,"default","","",8,[[],["customdispatcherstate"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"on_start","","",8,[[["self"],["statedata"]]]],[11,"on_stop","","",8,[[["self"],["statedata"]]]],[11,"update","","",8,[[["self"],["statedata"]],["trans"]]],[11,"update","","",5,[[["self"],["statedata"]],["trans"]]],[11,"update","","",9,[[["self"],["statedata"]],["trans"]]],[11,"update","","",6,[[["self"],["statedata"]],["trans"]]],[11,"update","","Runs the systems to update the game.",7,[[["self"],["world"]]]]],"paths":[[3,"EffectReturn"],[3,"AmethystApplication"],[3,"MaterialAnimationFixture"],[3,"SpriteRenderAnimationFixture"],[3,"CustomDispatcherStateBuilder"],[3,"FunctionState"],[3,"SequencerState"],[8,"GameUpdate"],[3,"CustomDispatcherState"],[3,"PopState"]]};
searchIndex["amethyst_ui"]={"doc":"Provides components and systems to create an in game user interface.","items":[[3,"UiBundle","amethyst_ui","UI bundle",N,N],[3,"UiButton","","A clickable button, this must be paired with a `TextureHandle` and this entity must have a child entity with a `UiText`.",N,N],[3,"UiButtonAction","","Describes an action targeted at a `UiButton`.",N,N],[12,"target","","The target entity for the action",0,N],[12,"event_type","","The event type of the action",0,N],[3,"UiButtonActionRetrigger","","Attach this to an entity with a `UiButton` attached to it to trigger specific events when a user interaction happens.",N,N],[12,"on_click_start","","The `UiButtonAction`s that should happen when the user begins a click on the `UiButton`",1,N],[12,"on_click_stop","","The `UiButtonAction`s that should happen when the user ends a click on the `UiButton`",1,N],[12,"on_hover_start","","The `UiButtonAction`s that should happen when the user start hovering over the `UiButton`",1,N],[12,"on_hover_stop","","The `UiButtonAction`s that should happen when the user stops hovering over the `UiButton`",1,N],[3,"UiButtonBuilder","","Convenience structure for building a button",N,N],[3,"UiButtonBuilderResources","","Container for all the resources the builder needs to make a new UiButton.",N,N],[3,"UiButtonSystem","","This system manages button mouse events.  It changes images and text colors, as well as playing audio when necessary.",N,N],[3,"Interactable","","A component that tags an entity as reactive to ui events. Will only work if the entity has a UiTransform component attached to it. Without this, the ui element will not generate events.",N,N],[3,"UiEvent","","A ui event instance.",N,N],[12,"event_type","","The type of ui event.",2,N],[12,"target","","The entity on which the event happened.",2,N],[3,"UiMouseSystem","","The system that generates events for `Interactable` enabled entities. The generic types A and B represent the A and B generic parameter of the InputHandler<A,B>.",N,N],[3,"EventRetriggerSystem","","Links up the given in- and output types' `EventChannel`s listening to incoming events and calling `apply` on the respective `Retrigger` components.",N,N],[3,"FontAsset","","A loaded set of fonts from a file.",N,N],[12,"0","","",3,N],[3,"TtfFormat","","Loads font files, supports TrueType and some OpenType files.",N,N],[3,"UiTransformSystem","","Manages the `Parent` component on entities having `UiTransform` It does almost the same as the `TransformSystem`, but with some differences, like `UiTransform` alignment and stretching.",N,N],[3,"DrawUi","","Draw Ui elements.  UI won't display without this.  It's recommended this be your last pass.",N,N],[3,"UiCreator","","Ui Creator, wrapper around loading and creating a UI directly.",N,N],[3,"UiFormat","","Ui format.",N,N],[3,"UiImagePrefab","","Loadable `UiImage` data",N,N],[12,"image","","Image",4,N],[3,"UiLoader","","Specialised UI loader",N,N],[3,"UiTextBuilder","","Loadable `UiText` data",N,N],[12,"text","","Text to display",5,N],[12,"font_size","","Font size",5,N],[12,"color","","Font color",5,N],[12,"font","","Font",5,N],[12,"password","","Should the text be shown as dots instead of the proper characters?",5,N],[12,"align","","Where should the text be aligned from. Relative to its own UiTransform's area.",5,N],[12,"line_mode","","How should the text behave with line breaks.",5,N],[12,"editable","","Optionally make the text editable",5,N],[3,"UiTransformBuilder","","Loadable `UiTransform` data. By default z is equal to one.",N,N],[12,"id","","An identifier. Serves no purpose other than to help you distinguish between UI elements.",6,N],[12,"x","","X coordinate",6,N],[12,"y","","Y coordinate",6,N],[12,"z","","Z coordinate, defaults to one.",6,N],[12,"width","","The width of this UI element.",6,N],[12,"height","","The height of this UI element.",6,N],[12,"opaque","","Indicates if actions on the ui can go through this element. If set to false, the element will behaves as if it was transparent and will let events go to the next element (for example, the text on a button).",6,N],[12,"percent","","Renders this UI element by evaluating transform as a percentage of the parent size, rather than rendering it with pixel units.",6,N],[12,"stretch","","If a child ui element needs to fill its parent this can be used to stretch it to the appropriate size.",6,N],[12,"anchor","","Indicates where the element sits, relative to the parent (or to the screen, if there is no parent)",6,N],[12,"mouse_reactive","","Allow mouse events on this UI element.",6,N],[12,"hidden","","Hides an entity by adding a `HiddenPropagate` component",6,N],[12,"selectable","","Makes the UiTransform selectable through keyboard inputs, mouse inputs and other means. # Ordering The UI element tab order.  When the player presses tab the UI focus will shift to the UI element with the next highest tab order, or if another element with the same tab_order as this one exists they are ordered according to Entity creation order.  Shift-tab walks this ordering backwards.",6,N],[3,"ResizeSystem","","This system rearranges UI elements whenever the screen is resized using their `UiResize` component.",N,N],[3,"UiResize","","Whenever the window is resized the function in this component will be called on this entity's UiTransform, along with the new width and height of the window.",N,N],[12,"function","","The core function of this component",7,N],[3,"Selectable","","Component indicating that a Ui entity is selectable. Generic Type: - G: Selection Group. Used to determine which entities can be selected together at the same time.",N,N],[12,"order","","The order in which entities are selected when pressing the `Tab` key or the \"go to next\" input action.",8,N],[12,"multi_select_group","","A multi selection group. When multiple entities are in the same selection group, they can be selected at the same time by holding shift or control and clicking them. You can also select the first element, then hold shift and press the keyboard arrow keys.",8,N],[12,"auto_multi_select","","Indicates if you can select multiple entities at once without having to press the shift or control key.",8,N],[12,"consumes_inputs","","Indicates if this consumes the inputs. If enabled, all inputs (except Tab) will be ignored when the component is focused. For example, the arrow keys will not change the selected ui element. Example usage: Ui Editable Text.",8,N],[3,"Selected","","Component indicating that a Ui entity is currently selected.",N,N],[3,"SelectionKeyboardSystem","","System managing the selection of entities. Reacts to `UiEvent`. Reacts to Tab and Shift+Tab.",N,N],[3,"SelectionMouseSystem","","System handling the clicks on ui entities and selecting them, if applicable.",N,N],[3,"CacheSelectionOrderSystem","","System in charge of updating the CachedSelectionOrder resource on each frame.",N,N],[3,"CachedSelectionOrder","","A cache sorted by tab order and then by Entity. Used to quickly find the next or previous selectable entities.",N,N],[12,"cached","","The cached bitset.",9,N],[12,"cache","","The cache holding the selection order and the corresponding entity.",9,N],[3,"UiPlaySoundAction","","Action that will trigger a sound to play in `UiSoundSystem`.",N,N],[12,"0","","",10,N],[3,"UiSoundRetrigger","","Attach this to an entity to play the respective sound when a `UiEvent` targets the entity.",N,N],[12,"on_click_start","","The sound that is played when the user begins a click on the entity",11,N],[12,"on_click_stop","","The sound that is played when the user ends a click on the entity",11,N],[12,"on_hover_start","","The sound that is played when the user starts hovering over the entity",11,N],[12,"on_hover_stop","","The sound that is played when the user stops hovering over the entity",11,N],[3,"UiSoundSystem","","Handles any dispatches `UiPlaySoundAction`s and plays the received sounds through the set `Output`.",N,N],[3,"TextEditing","","If this component is attached to an entity with a UiText then that UiText is editable. This component also controls how that editing works.",N,N],[12,"cursor_position","","The current editing cursor position, specified in terms of glyphs, not characters.",12,N],[12,"max_length","","The maximum graphemes permitted in this string.",12,N],[12,"highlight_vector","","The amount and direction of glyphs highlighted relative to the cursor.",12,N],[12,"selected_text_color","","The color of the text itself when highlighted.",12,N],[12,"selected_background_color","","The text background color when highlighted.",12,N],[12,"use_block_cursor","","If this is true the text will use a block cursor for editing.  Otherwise this uses a standard line cursor.  This is not recommended if your font is not monospace.",12,N],[3,"TextEditingMouseSystem","","This system processes the underlying UI data as needed.",N,N],[3,"UiText","","A component used to display text in this entity's UiTransform",N,N],[12,"text","","The string rendered by this.",13,N],[12,"font_size","","The height of a line of text in pixels.",13,N],[12,"color","","The color of the rendered text, using a range of 0.0 to 1.0 per channel.",13,N],[12,"font","","The font used for rendering.",13,N],[12,"password","","If true this will be rendered as dots instead of the text.",13,N],[12,"line_mode","","How the text should handle new lines.",13,N],[12,"align","","How to align the text within its `UiTransform`.",13,N],[3,"TextEditingInputSystem","","System managing the keyboard inputs for the editable text fields. ## Features * Adds and removes text. * Moves selection cursor. * Grows and shrinks selected text zone.",N,N],[3,"UiFinder","","Utility `SystemData` for finding UI entities based on `UiTransform` id",N,N],[3,"UiTransform","","The UiTransform represents the transformation of a ui element. Values are in pixel and the position is calculated from the bottom left of the screen to the center of the ui element's area.",N,N],[12,"id","","An identifier. Serves no purpose other than to help you distinguish between UI elements.",14,N],[12,"anchor","","Indicates where the element sits, relative to the parent (or to the screen, if there is no parent)",14,N],[12,"stretch","","If a child ui element needs to fill its parent this can be used to stretch it to the appropriate size.",14,N],[12,"local_x","","X coordinate, 0 is the left edge of the screen. If scale_mode is set to pixel then the width of the screen in pixel is the right edge.  If scale_mode is percent then the right edge is 1.",14,N],[12,"local_y","","Y coordinate, 0 is the bottom edge of the screen. If scale_mode is set to pixel then the height of the screen in pixel is the top edge.  If scale_mode is percent then the top edge is 1.",14,N],[12,"local_z","","Z order, entities with a higher Z order will be rendered on top of entities with a lower Z order.",14,N],[12,"width","","The width of this UI element.",14,N],[12,"height","","The height of this UI element.",14,N],[12,"scale_mode","","The scale mode indicates if the position is in pixel or is relative (%) (WIP!) to the parent's size.",14,N],[12,"opaque","","Indicates if actions on the ui can go through this element. If set to false, the element will behaves as if it was transparent and will let events go to the next element (for example, the text on a button).",14,N],[4,"UiButtonActionType","","Describes the type of a `UiButtonAction`.",N,N],[13,"SetTexture","","Sets the texture of a `UiButton` to the given `TextureHandle`.",15,N],[13,"UnsetTexture","","Removes a previously set `TextureHandle` on a `UiButton`.",15,N],[13,"SetTextColor","","Sets the text color of the primary text child of a `UiButton`.",15,N],[13,"UnsetTextColor","","Removes a previously set color from the primary text child of a `UiButton`.",15,N],[4,"UiEventType","","The type of ui event. Click happens if you start and stop clicking on the same ui element.",N,N],[13,"Click","","When an element is clicked normally. Includes touch events.",16,N],[13,"ClickStart","","When the element starts being clicked (On left mouse down). Includes touch events.",16,N],[13,"ClickStop","","When the element stops being clicked (On left mouse up). Includes touch events.",16,N],[13,"HoverStart","","When the cursor gets over an element.",16,N],[13,"HoverStop","","When the cursor stops being over an element.",16,N],[13,"Dragging","","When dragging a `Draggable` Ui element.",16,N],[12,"element_offset","amethyst_ui::UiEventType","The position of the mouse relative to the center of the transform when the drag started.",16,N],[13,"Dropped","amethyst_ui","When stopping to drag a `Draggable` Ui element.",16,N],[12,"dropped_on","amethyst_ui::UiEventType","The entity on which the dragged object was dropped.",16,N],[4,"FontFormat","amethyst_ui","Wrapper format for all core supported Font formats",N,N],[13,"Ttf","","TTF Format",17,N],[13,"Otf","","OTF Format",17,N],[4,"Anchor","","Indicated where the anchor is, relative to the parent (or to the screen, if there is no parent). Follow a normal english Y,X naming.",N,N],[13,"TopLeft","","Anchors the entity at the top left of the parent.",18,N],[13,"TopMiddle","","Anchors the entity at the top middle of the parent.",18,N],[13,"TopRight","","Anchors the entity at the top right of the parent.",18,N],[13,"MiddleLeft","","Anchors the entity at the middle left of the parent.",18,N],[13,"Middle","","Anchors the entity at the center of the parent.",18,N],[13,"MiddleRight","","Anchors the entity at the middle right of the parent.",18,N],[13,"BottomLeft","","Anchors the entity at the bottom left of the parent.",18,N],[13,"BottomMiddle","","Anchors the entity at the bottom middle of the parent.",18,N],[13,"BottomRight","","Anchors the entity at the bottom right of the parent.",18,N],[4,"ScaleMode","","Indicates if the position and margins should be calculated in pixel or relative to their parent size.",N,N],[13,"Pixel","","Use directly the pixel value.",19,N],[13,"Percent","","Use a proportion (%) of the parent's dimensions (or screen, if there is no parent).",19,N],[4,"Stretch","","Indicates if a component should be stretched.",N,N],[13,"NoStretch","","No stretching occurs",20,N],[13,"X","","Stretches on the X axis.",20,N],[12,"x_margin","amethyst_ui::Stretch","The margin length for the width",20,N],[13,"Y","amethyst_ui","Stretches on the Y axis.",20,N],[12,"y_margin","amethyst_ui::Stretch","The margin length for the height",20,N],[13,"XY","amethyst_ui","Stretches on both axes.",20,N],[12,"x_margin","amethyst_ui::Stretch","The margin length for the width",20,N],[12,"y_margin","","The margin length for the height",20,N],[4,"NoCustomUi","amethyst_ui","Type used when no custom ui is desired",N,N],[4,"UiWidget","","Loadable ui components",N,N],[13,"Container","","Container component",21,N],[12,"transform","amethyst_ui::UiWidget","Spatial information for the container",21,N],[12,"background","","Background image",21,N],[12,"children","","Child widgets",21,N],[13,"Image","amethyst_ui","Image component",21,N],[12,"transform","amethyst_ui::UiWidget","Spatial information",21,N],[12,"image","","Image",21,N],[13,"Text","amethyst_ui","Text component",21,N],[12,"transform","amethyst_ui::UiWidget","Spatial information",21,N],[12,"text","","Text",21,N],[13,"Button","amethyst_ui","Button component",21,N],[12,"transform","amethyst_ui::UiWidget","Spatial information",21,N],[12,"button","","Button",21,N],[13,"Custom","amethyst_ui","Custom UI widget",21,N],[4,"LineMode","","How lines should behave when they are longer than the maximum line length.",N,N],[13,"Single","","Single line. It ignores line breaks.",22,N],[13,"Wrap","","Multiple lines. The text will automatically wrap when exceeding the maximum width.",22,N],[5,"targeted","","Checks if an interactable entity is at the position `pos` and doesn't have anything on top blocking the check. If you have a non-interactable entity over an interactable entity, it will consider the interactable one blocked, depending on if `pos` is over the non-interactable one or not.",N,N],[5,"get_default_font","","Get the system default fonts. If unable to, gets the local square.ttf font.",N,[[["loader"],["assetstorage"]],["fonthandle"]]],[5,"default_system_font","","Returns the default system font.",N,[[],["result",["handle","selectionerror"]]]],[5,"get_all_font_handles","","Returns all the handles to the system fonts.",N,[[],["result",["vec","selectionerror"]]]],[5,"list_system_font_families","","Lists all installed font families on the system.",N,[[],["result",["vec","selectionerror"]]]],[11,"new","","Constructs a new `UiBundle`.",23,[[],["self"]]],[11,"new","","Construct a new UiButtonBuilder. This allows easy use of default values for text and button appearance and allows the user to easily set other UI-related options.",24,[[["n"],["s"]],["uibuttonbuilder"]]],[11,"with_parent","","Add a parent to the button.",24,[[["self"],["entity"]],["self"]]],[11,"with_anchor","","Add an anchor to the button.",24,[[["self"],["anchor"]],["self"]]],[11,"with_stretch","","Stretch the button.",24,[[["self"],["stretch"]],["self"]]],[11,"with_text","","This will set the rendered characters within the button. Use this to just change what characters will appear. If you need to change the font size, color, etc., then you should use `with_uitext` and provide a new `UiText` object.",24,[[["self"],["s"]],["self"]]],[11,"with_image","","Replace the default TextureHandle with `image`.",24,[[["self"],["texturehandle"]],["self"]]],[11,"with_font","","Use a different font for the button text.",24,[[["self"],["fonthandle"]],["self"]]],[11,"with_position","","Provide an X and Y position for the button.",24,[[["self"],["f32"],["f32"]],["self"]]],[11,"with_layer","","Provide a Z position, i.e UI layer",24,[[["self"],["f32"]],["self"]]],[11,"with_size","","Set button size",24,[[["self"],["f32"],["f32"]],["self"]]],[11,"with_tab_order","","Set button tab order",24,[[["self"],["u32"]],["self"]]],[11,"with_font_size","","Set font size",24,[[["self"],["f32"]],["self"]]],[11,"with_text_color","","Set text color",24,N],[11,"with_hover_text_color","","Text color to use when the mouse is hovering over this button",24,N],[11,"with_press_text_color","","Set text color when the button is pressed",24,N],[11,"with_hover_image","","Button image to use when the mouse is hovering over this button",24,[[["self"],["texturehandle"]],["self"]]],[11,"with_press_image","","Button image to use when this button is pressed",24,[[["self"],["texturehandle"]],["self"]]],[11,"with_hover_sound","","Sound emitted when this button is hovered over",24,[[["self"],["sourcehandle"]],["self"]]],[11,"with_press_sound","","Sound emitted when this button is pressed",24,[[["self"],["sourcehandle"]],["self"]]],[11,"with_release_sound","","Sound emitted when this button is released",24,[[["self"],["sourcehandle"]],["self"]]],[11,"build","","Build this with the `UiButtonBuilderResources`.",24,[[["self"],["uibuttonbuilderresources"]],["entity"]]],[11,"build_from_world","","Create the UiButton based on provided configuration parameters.",24,[[["self"],["world"]],["entity"]]],[11,"new","","Creates a new instance of this structure",25,[[],["self"]]],[11,"new","","A constructor for this component.  It's recommended to use either a prefab or `UiButtonBuilder` rather than this function if possible.",26,N],[11,"new","","Creates a new UiEvent.",2,[[["uieventtype"],["entity"]],["self"]]],[11,"new","","Creates a new UiMouseSystem.",27,[[],["self"]]],[11,"new","","Constructs a default `EventRetriggerSystem`. Since the `event_reader` will automatically be fetched when the system is set up, this should always be used to construct `EventRetriggerSystem`s.",28,[[],["self"]]],[11,"norm_offset","","Returns the normalized offset using the `Anchor` setting. The normalized offset is a [-0.5,0.5] value indicating the relative offset multiplier from the parent's position (centered).",18,N],[11,"new","","Constructs a new `DrawUi`.",29,[[],["self"]]],[11,"with_id","","Set id",6,[[["self"],["s"]],["self"]]],[11,"with_position","","Set position",6,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"with_size","","Set size",6,[[["self"],["f32"],["f32"]],["self"]]],[11,"transparent","","Set to event transparent",6,[[["self"]],["self"]]],[11,"hide","","Hides an entity by adding a `HiddenPropagate` component",6,[[["self"]],["self"]]],[11,"reactive","","Add mouse reactive",6,[[["self"]],["self"]]],[11,"with_anchor","","Set anchor",6,[[["self"],["anchor"]],["self"]]],[11,"with_stretch","","Set stretch",6,[[["self"],["stretch"]],["self"]]],[11,"transform","","Convenience function to access widgets `UiTransformBuilder`",21,[[["self"]],["option",["uitransformbuilder"]]]],[11,"transform_mut","","Convenience function to access widgets `UiTransformBuilder`",21,[[["self"]],["option",["uitransformbuilder"]]]],[11,"image","","Convenience function to access widgets `UiImagePrefab`",21,[[["self"]],["option",["uiimageprefab"]]]],[11,"image_mut","","Convenience function to access widgets `UiImagePrefab`",21,[[["self"]],["option",["uiimageprefab"]]]],[11,"load","","Load ui from disc",30,[[["self"],["n"],["p"]],["handle",["uiprefab"]]]],[11,"create","","Create a UI.",31,[[["self"],["n"],["p"]],["entity"]]],[11,"new","","Creates a new component with the given function.",7,[[["f"]],["self"]]],[11,"new","","Creates a new ResizeSystem that listens with the given reader Id.",32,[[],["resizesystem"]]],[11,"new","","Constructs a new `Selectable`.",8,[[["u32"]],["self"]]],[11,"new","","Constructs a new `SelectionKeyboardSystem`.",33,[[],["self"]]],[11,"new","","Constructs a new `SelectionMouseSystem`.",34,[[],["self"]]],[11,"highest_order_selected_index","","Returns the index of the highest cached element (index in the cache!) that is currently selected.",9,[[["self"],["t"]],["option",["usize"]]]],[11,"index_of","","Returns the index in the cache for the specified entity.",9,[[["self"],["entity"]],["option",["usize"]]]],[11,"new","","Constructs a new `CacheSelectionOrderSystem`.",35,[[],["self"]]],[11,"new","","Constructs a default `UiSoundSystem`. Since the `event_reader` will automatically be fetched when the system is set up, this should always be used to construct the `UiSoundSystem`.",36,[[],["self"]]],[11,"new","","Initializes a new UiText",13,N],[11,"new","","Create a new TextEditing Component",12,N],[11,"new","","Creates a new instance of this system",37,[[],["self"]]],[11,"new","","Creates a new instance of this system",38,[[],["self"]]],[11,"find","","Find the `UiTransform` entity with the given id",39,[[["self"],["str"]],["option",["entity"]]]],[11,"new","","Creates a new UiTransform. By default, it is considered opaque.",14,[[["string"],["anchor"],["f32"],["f32"],["f32"],["f32"],["f32"]],["uitransform"]]],[11,"position_inside_local","","Checks if the input position is in the UiTransform rectangle. Uses local coordinates (ignores layouting).",14,[[["self"],["f32"],["f32"]],["bool"]]],[11,"position_inside","","Checks if the input position is in the UiTransform rectangle.",14,[[["self"],["f32"],["f32"]],["bool"]]],[11,"as_percent","","Renders this UI element by evaluating transform as a percentage of the parent size, rather than rendering it with pixel units.",14,[[["self"]],["self"]]],[11,"as_transparent","","Sets the opaque variable to false, allowing ui events to go through this ui element.",14,[[["self"]],["self"]]],[11,"with_stretch","","Adds stretching to this ui element so it can fill its parent.",14,[[["self"],["stretch"]],["self"]]],[11,"pixel_x","","Returns the global x coordinate of this UiTransform as computed by the `UiTransformSystem`.",14,[[["self"]],["f32"]]],[11,"pixel_y","","Returns the global y coordinate of this UiTransform as computed by the `UiTransformSystem`.",14,[[["self"]],["f32"]]],[11,"global_z","","Returns the global z order of this UiTransform as computed by the `UiTransformSystem`.",14,[[["self"]],["f32"]]],[6,"UiButtonActionRetriggerSystem","","Provides an `EventRetriggerSystem` that will handle incoming `UiEvents` and trigger `UiButtonAction`s for `UiButton`s with an attached `UiButtonActionRetrigger` component.",N,N],[6,"FontHandle","","A handle to font data stored with `amethyst_assets`.",N,N],[6,"OtfFormat","","Identical to TtfFormat.",N,N],[6,"UiLoaderSystem","","Prefab loader system for UI",N,N],[6,"UiPrefab","","Ui prefab",N,N],[6,"UiSoundRetriggerSystem","","Provides an `EventRetriggerSystem` that will handle incoming `UiEvent`s and trigger `UiPlaySoundAction`s for entities with attached `UiSoundRetrigger` components.",N,N],[8,"EventReceiver","","Describes anything that can receive events one by one or in batches. This lets whoever wants to receive triggered events decide on how they want to receive them, instead of forcing them to construct certain data structures such as a `Vec`.",N,N],[10,"receive_one","","Receive a single event",40,[[["self"],["t"]]]],[10,"receive","","Receive an iterator over several events",40,N],[8,"ToNativeWidget","","Create native `UiWidget` from custom UI",N,N],[16,"PrefabData","","Additional data used when loading UI prefab",41,N],[10,"to_native_widget","","Create native `UiWidget` and custom prefab data from custom UI",41,N],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_default","","",24,[[],["result",["string"]]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"to_subset","","",42,[[["self"]],["option"]]],[11,"is_in_subset","","",42,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",42,[[["self"]],["ss"]]],[11,"from_subset","","",42,[[["ss"]],["sp"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"setup","","",42,N],[11,"fetch","","",42,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"pausable","","",25,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",25,N],[11,"setup","","",25,N],[11,"setup","","",25,N],[11,"run","","",25,N],[11,"reads","","",25,N],[11,"writes","","",25,N],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_default","","",25,[[],["result",["string"]]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_default","","",43,[[],["result",["string"]]]],[11,"load","","",43,[[["p"]],["t"]]],[11,"load_no_fallback","","",43,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",43,N],[11,"write","","",43,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"pausable","","",27,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",27,N],[11,"setup","","",27,N],[11,"setup","","",27,N],[11,"run","","",27,N],[11,"reads","","",27,N],[11,"writes","","",27,N],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"pausable","","",28,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",28,N],[11,"setup","","",28,N],[11,"setup","","",28,N],[11,"run","","",28,N],[11,"reads","","",28,N],[11,"writes","","",28,N],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_default","","",28,[[],["result",["string"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"import","","",44,N],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"pausable","","",45,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",45,N],[11,"setup","","",45,N],[11,"setup","","",45,N],[11,"run","","",45,N],[11,"reads","","",45,N],[11,"writes","","",45,N],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_default","","",45,[[],["result",["string"]]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"setup","","",31,N],[11,"fetch","","",31,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"import","","",46,N],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_default","","",46,[[],["result",["string"]]]],[11,"load","","",46,[[["p"]],["t"]]],[11,"load_no_fallback","","",46,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",46,N],[11,"write","","",46,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"setup","","",30,N],[11,"fetch","","",30,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_default","","",6,[[],["result",["string"]]]],[11,"load","","",6,[[["p"]],["t"]]],[11,"load_no_fallback","","",6,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",6,N],[11,"write","","",6,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"pausable","","",32,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",32,N],[11,"setup","","",32,N],[11,"setup","","",32,N],[11,"run","","",32,N],[11,"reads","","",32,N],[11,"writes","","",32,N],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_default","","",32,[[],["result",["string"]]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"to_subset","","",47,[[["self"]],["option"]]],[11,"is_in_subset","","",47,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",47,[[["self"]],["ss"]]],[11,"from_subset","","",47,[[["ss"]],["sp"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"pausable","","",33,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",33,N],[11,"setup","","",33,N],[11,"setup","","",33,N],[11,"run","","",33,N],[11,"reads","","",33,N],[11,"writes","","",33,N],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_default","","",33,[[],["result",["string"]]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"pausable","","",34,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",34,N],[11,"setup","","",34,N],[11,"setup","","",34,N],[11,"run","","",34,N],[11,"reads","","",34,N],[11,"writes","","",34,N],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_default","","",34,[[],["result",["string"]]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"pausable","","",35,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",35,N],[11,"setup","","",35,N],[11,"setup","","",35,N],[11,"run","","",35,N],[11,"reads","","",35,N],[11,"writes","","",35,N],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_default","","",35,[[],["result",["string"]]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_default","","",9,[[],["result",["string"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"pausable","","",36,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",36,N],[11,"setup","","",36,N],[11,"setup","","",36,N],[11,"run","","",36,N],[11,"reads","","",36,N],[11,"writes","","",36,N],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_default","","",36,[[],["result",["string"]]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"pausable","","",37,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",37,N],[11,"setup","","",37,N],[11,"setup","","",37,N],[11,"run","","",37,N],[11,"reads","","",37,N],[11,"writes","","",37,N],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"to_subset","","",38,[[["self"]],["option"]]],[11,"is_in_subset","","",38,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",38,[[["self"]],["ss"]]],[11,"from_subset","","",38,[[["ss"]],["sp"]]],[11,"pausable","","",38,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",38,N],[11,"setup","","",38,N],[11,"setup","","",38,N],[11,"run","","",38,N],[11,"reads","","",38,N],[11,"writes","","",38,N],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_default","","",38,[[],["result",["string"]]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"to_subset","","",39,[[["self"]],["option"]]],[11,"is_in_subset","","",39,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",39,[[["self"]],["ss"]]],[11,"from_subset","","",39,[[["ss"]],["sp"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"setup","","",39,N],[11,"fetch","","",39,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"import","","",17,N],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"to_subset","","",48,[[["self"]],["option"]]],[11,"is_in_subset","","",48,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",48,[[["self"]],["ss"]]],[11,"from_subset","","",48,[[["ss"]],["sp"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_native_widget","","",48,N],[11,"default","","",24,[[],["self"]]],[11,"default","","",25,[[],["uibuttonsystem"]]],[11,"default","","",43,[[],["interactable"]]],[11,"default","","",28,[[],["self"]]],[11,"default","","",45,[[],["uitransformsystem"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",46,[[],["self"]]],[11,"default","","",32,[[],["resizesystem"]]],[11,"default","","",33,[[],["selectionkeyboardsystem"]]],[11,"default","","",34,[[],["selectionmousesystem"]]],[11,"default","","",9,[[],["cachedselectionorder"]]],[11,"default","","",35,[[],["cacheselectionordersystem"]]],[11,"default","","",36,[[],["uisoundsystem"]]],[11,"default","","",38,[[],["texteditinginputsystem"]]],[11,"eq","","",16,[[["self"],["uieventtype"]],["bool"]]],[11,"ne","","",16,[[["self"],["uieventtype"]],["bool"]]],[11,"eq","","",19,[[["self"],["scalemode"]],["bool"]]],[11,"eq","","",18,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",22,[[["self"],["linemode"]],["bool"]]],[11,"clone","","",0,[[["self"]],["uibuttonaction"]]],[11,"clone","","",15,[[["self"]],["uibuttonactiontype"]]],[11,"clone","","",24,[[["self"]],["uibuttonbuilder"]]],[11,"clone","","",26,[[["self"]],["uibutton"]]],[11,"clone","","",16,[[["self"]],["uieventtype"]]],[11,"clone","","",2,[[["self"]],["uievent"]]],[11,"clone","","",43,[[["self"]],["interactable"]]],[11,"clone","","",3,[[["self"]],["fontasset"]]],[11,"clone","","",44,[[["self"]],["ttfformat"]]],[11,"clone","","",17,[[["self"]],["fontformat"]]],[11,"clone","","",19,[[["self"]],["scalemode"]]],[11,"clone","","",18,[[["self"]],["anchor"]]],[11,"clone","","",20,[[["self"]],["stretch"]]],[11,"clone","","",6,[[["self"]],["uitransformbuilder"]]],[11,"clone","","",5,[[["self"]],["uitextbuilder"]]],[11,"clone","","",4,[[["self"]],["uiimageprefab"]]],[11,"clone","","",21,[[["self"]],["uiwidget"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["cachedselectionorder"]]],[11,"clone","","",10,[[["self"]],["uiplaysoundaction"]]],[11,"clone","","",11,[[["self"]],["uisoundretrigger"]]],[11,"clone","","",22,[[["self"]],["linemode"]]],[11,"clone","","",13,[[["self"]],["uitext"]]],[11,"clone","","",14,[[["self"]],["uitransform"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"import","","",44,N],[11,"import","","",17,N],[11,"import","","",46,N],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",43,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",46,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",47,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",43,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",47,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"add_to_entity","","",6,N],[11,"add_to_entity","","",5,N],[11,"load_sub_assets","","",5,N],[11,"add_to_entity","","",4,N],[11,"load_sub_assets","","",4,N],[11,"setup","","",25,[[["self"],["resources"]]]],[11,"run","","",25,N],[11,"run","","",27,N],[11,"setup","","",28,[[["self"],["resources"]]]],[11,"run","","",28,N],[11,"run","","",45,N],[11,"setup","","",45,[[["self"],["resources"]]]],[11,"run","","",32,N],[11,"setup","","",32,[[["self"],["resources"]]]],[11,"run","","",33,N],[11,"setup","","",33,[[["self"],["resources"]]]],[11,"run","","",34,N],[11,"setup","","",34,[[["self"],["resources"]]]],[11,"run","","",35,N],[11,"setup","","",36,[[["self"],["resources"]]]],[11,"run","","",36,N],[11,"run","","",37,N],[11,"setup","","",37,[[["self"],["resources"]]]],[11,"run","","",38,N],[11,"setup","","",38,[[["self"],["resources"]]]],[11,"setup","","",42,[[["resources"]]]],[11,"fetch","","",42,[[["resources"]],["self"]]],[11,"reads","","",42,[[],["vec",["resourceid"]]]],[11,"writes","","",42,[[],["vec",["resourceid"]]]],[11,"setup","","",30,[[["resources"]]]],[11,"fetch","","",30,[[["resources"]],["self"]]],[11,"reads","","",30,[[],["vec",["resourceid"]]]],[11,"writes","","",30,[[],["vec",["resourceid"]]]],[11,"setup","","",31,[[["resources"]]]],[11,"fetch","","",31,[[["resources"]],["self"]]],[11,"reads","","",31,[[],["vec",["resourceid"]]]],[11,"writes","","",31,[[],["vec",["resourceid"]]]],[11,"setup","","",39,[[["resources"]]]],[11,"fetch","","",39,[[["resources"]],["self"]]],[11,"reads","","",39,[[],["vec",["resourceid"]]]],[11,"writes","","",39,[[],["vec",["resourceid"]]]],[11,"build","","",23,[[["self"],["dispatcherbuilder"]],["result",["error"]]]],[11,"compile","","",29,[[["self"],["neweffect"]],["result",["effect","error"]]]],[11,"apply","","",29,N]],"paths":[[3,"UiButtonAction"],[3,"UiButtonActionRetrigger"],[3,"UiEvent"],[3,"FontAsset"],[3,"UiImagePrefab"],[3,"UiTextBuilder"],[3,"UiTransformBuilder"],[3,"UiResize"],[3,"Selectable"],[3,"CachedSelectionOrder"],[3,"UiPlaySoundAction"],[3,"UiSoundRetrigger"],[3,"TextEditing"],[3,"UiText"],[3,"UiTransform"],[4,"UiButtonActionType"],[4,"UiEventType"],[4,"FontFormat"],[4,"Anchor"],[4,"ScaleMode"],[4,"Stretch"],[4,"UiWidget"],[4,"LineMode"],[3,"UiBundle"],[3,"UiButtonBuilder"],[3,"UiButtonSystem"],[3,"UiButton"],[3,"UiMouseSystem"],[3,"EventRetriggerSystem"],[3,"DrawUi"],[3,"UiLoader"],[3,"UiCreator"],[3,"ResizeSystem"],[3,"SelectionKeyboardSystem"],[3,"SelectionMouseSystem"],[3,"CacheSelectionOrderSystem"],[3,"UiSoundSystem"],[3,"TextEditingMouseSystem"],[3,"TextEditingInputSystem"],[3,"UiFinder"],[8,"EventReceiver"],[8,"ToNativeWidget"],[3,"UiButtonBuilderResources"],[3,"Interactable"],[3,"TtfFormat"],[3,"UiTransformSystem"],[3,"UiFormat"],[3,"Selected"],[4,"NoCustomUi"]]};
searchIndex["amethyst_utils"]={"doc":"A collection of useful amethyst utilities, designed to make your game dev life easier.","items":[[0,"app_root_dir","amethyst_utils","Provides the directory of the executable.",N,N],[5,"application_root_dir","amethyst_utils::app_root_dir","Returns the cargo manifest directory when running the executable with cargo or the directory in which the executable resides otherwise, traversing symlinks if necessary.",N,[[],["result",["pathbuf","error"]]]],[5,"application_dir","","Same as `application_root_dir`, but extends the root directory with the given path.",N,[[["p"]],["result",["pathbuf","error"]]]],[0,"auto_fov","amethyst_utils","Utility to adjust the aspect ratio of cameras automatically",N,N],[3,"AutoFov","amethyst_utils::auto_fov","A component describing the behavior of the camera in accordance with the screen dimensions",N,N],[3,"AutoFovSystem","","System that automatically adjusts the horizontal FOV based on the screen dimensions",N,N],[11,"new","","Creates a new instance with the default values for all fields",0,[[],["self"]]],[11,"base_fovx","","The horizontal FOV value at the aspect ratio in the field `base_aspect_ratio`",0,[[["self"]],["f32"]]],[11,"fovx_growth_rate","","The factor determining how sensitive the FOV change should be",0,[[["self"]],["f32"]]],[11,"fixed_growth_rate","","If the FOV grow rate specified in the field `fovx_growth_rate` should be applied as-is",0,[[["self"]],["bool"]]],[11,"base_aspect_ratio","","The aspect ratio when the camera's horizontal FOV is identical to `base_fovx`",0,N],[11,"min_fovx","","The minimum value the horizontal FOV can have",0,[[["self"]],["f32"]]],[11,"max_fovx","","The maximum value the horizontal FOV can have",0,[[["self"]],["f32"]]],[11,"set_base_fovx","","Sets `base_fovx` to the given value",0,[[["self"],["f32"]]]],[11,"set_fovx_growth_rate","","Sets `fovx_growth_rate` to the given value",0,[[["self"],["f32"]]]],[11,"set_fixed_growth_rate","","Sets `fixed_growth_rate` to the given value",0,[[["self"],["bool"],["option",["f32"]]]]],[11,"set_base_aspect_ratio","","Sets `base_aspect_ratio` to the given value",0,[[["self"],["usize"],["usize"]]]],[11,"set_min","","Sets `min_fovx` to the given value",0,[[["self"],["f32"]]]],[11,"set_max","","Sets `max_fovx` to the given value",0,[[["self"],["f32"]]]],[11,"set_min_max","","Sets `min_fovx` and `max_fovx` to the given vaues",0,[[["self"],["f32"],["f32"]]]],[11,"new_fovx","","Computes the new horizontal FOV from the current screen aspect ratio and vertical FOV",0,[[["self"],["f32"],["f32"]],["f32"]]],[0,"circular_buffer","amethyst_utils","CircularBuffer",N,N],[3,"CircularBuffer","amethyst_utils::circular_buffer","A CircularBuffer that drops the oldest element inserted when full.",N,N],[11,"new","","Creates a new CircularBuffer with fixed size",1,[[["usize"]],["self"]]],[11,"push","","Add a value to the CircularBuffer Returns the popped value if the buffer is full",1,[[["self"],["a"]],["option"]]],[11,"queue","","Get an immutable reference to the values inside the CircularBuffer",1,[[["self"]],["vecdeque"]]],[0,"fps_counter","amethyst_utils","Util Resources",N,N],[3,"FPSCounter","amethyst_utils::fps_counter","The FPSCounter resource needed by the FPSCounterSystem.",N,N],[3,"FPSCounterSystem","","Add this system to your game to automatically push FPS values to the FPSCounter resource with id 0",N,N],[3,"FPSCounterBundle","","Automatically adds a FPSCounterSystem and a FPSCounter resource with the specified sample size.",N,N],[11,"new","","Creates a new FPSCounter that calculates the average fps over samplesize values.",2,[[["usize"]],["fpscounter"]]],[11,"push","","Add a new delta time value.",2,[[["self"],["u64"]]]],[11,"frame_fps","","Get the fps of the this frame.",2,[[["self"]],["f32"]]],[11,"sampled_fps","","Get the average fps over the samplesize frames.",2,[[["self"]],["f32"]]],[0,"ortho_camera","amethyst_utils","Provides a automatically resized orthographic camera.",N,N],[3,"CameraOrthoWorldCoordinates","amethyst_utils::ortho_camera","The coordinates that `CameraOrtho` will keep visible in the window. `bottom` can be a higher value than `top`, as is common in 2D coordinates",N,N],[12,"left","","Left x coordinate",3,N],[12,"right","","Right x coordinate",3,N],[12,"bottom","","Bottom y coordinate",3,N],[12,"top","","Top y coordinate",3,N],[3,"CameraOrtho","","`Component` attached to the camera's entity that allows automatically adjusting the camera's matrix according to preferences in the \"mode\" and \"world_coordinates\" fields. It adjusts the camera so that the camera's world coordinates are always visible. You must add the `CameraOrthoSystem` to your dispatcher for this to take effect (no dependencies required).",N,N],[12,"mode","","How the camera's matrix is changed when the window's aspect ratio changes. See `CameraNormalizeMode` for more info.",4,N],[12,"world_coordinates","","The world coordinates that this camera will keep visible as the window size changes",4,N],[3,"CameraOrthoSystem","","System that automatically changes the camera matrix according to the settings in the `CameraOrtho` attached to the camera entity.",N,N],[4,"CameraNormalizeMode","","Settings that decide how to scale the camera's matrix when the aspect ratio changes.",N,N],[13,"Lossy","","Using the aspect ratio from the world coordinates for this camera, tries to adjust the matrix values of the camera so that the orthogonal direction to the stretch_direction always have a world size of 1.",5,N],[12,"stretch_direction","amethyst_utils::ortho_camera::CameraNormalizeMode","The direction along which the camera will stretch and possibly have a length not equal to one.",5,N],[13,"Contain","amethyst_utils::ortho_camera","Scales the render dynamically to ensure the `CameraOrthoWorldCoordinates` are always visible. There may still be additional space in addition to the specific coordinates, but it will never hide anything.",5,N],[11,"normalized","","Creates coordinates with (0,0) at the bottom left, and (1,1) at the top right",3,[[],["cameraorthoworldcoordinates"]]],[11,"aspect_ratio","","Returns width / height of the desired camera coordinates.",3,[[["self"]],["f32"]]],[11,"width","","Returns size of the x-axis.",3,[[["self"]],["f32"]]],[11,"height","","Returns size of the y-axis.",3,[[["self"]],["f32"]]],[11,"normalized","","Creates a Camera that maintains window coordinates of (0,0) in the bottom left, and (1,1) at the top right",4,[[["cameranormalizemode"]],["cameraortho"]]],[11,"camera_offsets","","Get the camera matrix offsets according to the specified options.",4,N],[0,"removal","amethyst_utils","Provides utilities to remove large amounts of entities with a single command.",N,N],[3,"Removal","amethyst_utils::removal","A marker `Component` used to remove entities and clean up your scene. The generic parameter `I` is the type of id you want to use. Generally an int or an enum.",N,N],[5,"exec_removal","","Removes all entities that have the `Removal<I>` component with the specified removal_id.",N,[[["entitiesres"],["storage"],["i"]]]],[11,"new","","Creates a new `Removal` component with the specified id.",6,[[["i"]],["self"]]],[0,"scene","amethyst_utils","Provides utilities for building and describing scenes in your game.",N,N],[3,"BasicScenePrefab","amethyst_utils::scene","Basic `Prefab` scene node, meant to be used for fast prototyping, and most likely replaced for more complex scenarios.",N,N],[0,"tag","amethyst_utils","Provides a small simple tag component for identifying entities.",N,N],[3,"Tag","amethyst_utils::tag","Tag component that can be used with a custom type to tag entities for processing",N,N],[3,"TagFinder","","Utility lookup for tag components",N,N],[12,"entities","","The `EntitiesRes` from the ECS used to lookup tags.",7,N],[12,"tags","","The component storage for the tags being searched.",7,N],[11,"find","","Returns the first entity found with the tag in question.",7,[[["self"]],["option",["entity"]]]],[0,"time_destroy","amethyst_utils","Allows you to automatically delete an entity after a set time has elapsed.",N,N],[3,"DestroyAtTime","amethyst_utils::time_destroy","Destroys the entity to which this is attached at the specified time (in seconds).",N,N],[12,"time","","The time at which the entity should be destroyed in seconds. Compared to `Time::absolute_time_seconds`.",8,N],[3,"DestroyInTime","","Destroys the entity to which this is attached after the specified time interval (in seconds).",N,N],[12,"timer","","The amount of time before the entity should be destroyed in seconds. Compared to `Time::absolute_time_seconds`.",9,N],[3,"DestroyAtTimeSystem","","The system in charge of destroying entities with the `DestroyAtTime` component.",N,N],[3,"DestroyInTimeSystem","","The system in charge of destroying entities with the `DestroyInTime` component.",N,N],[11,"into","amethyst_utils::auto_fov","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_default","","",0,[[],["result",["string"]]]],[11,"load","","",0,[[["p"]],["t"]]],[11,"load_no_fallback","","",0,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",0,N],[11,"write","","",0,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"pausable","","",10,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",10,N],[11,"setup","","",10,N],[11,"setup","","",10,N],[11,"run","","",10,N],[11,"reads","","",10,N],[11,"writes","","",10,N],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","amethyst_utils::circular_buffer","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","amethyst_utils::fps_counter","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_default","","",2,[[],["result",["string"]]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"pausable","","",11,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",11,N],[11,"setup","","",11,N],[11,"setup","","",11,N],[11,"run","","",11,N],[11,"reads","","",11,N],[11,"writes","","",11,N],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_default","","",12,[[],["result",["string"]]]],[11,"into","amethyst_utils::ortho_camera","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_default","","",3,[[],["result",["string"]]]],[11,"load","","",3,[[["p"]],["t"]]],[11,"load_no_fallback","","",3,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",3,N],[11,"write","","",3,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_default","","",4,[[],["result",["string"]]]],[11,"load","","",4,[[["p"]],["t"]]],[11,"load_no_fallback","","",4,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",4,N],[11,"write","","",4,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"pausable","","",13,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",13,N],[11,"setup","","",13,N],[11,"setup","","",13,N],[11,"run","","",13,N],[11,"reads","","",13,N],[11,"writes","","",13,N],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_default","","",13,[[],["result",["string"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_default","","",5,[[],["result",["string"]]]],[11,"load","","",5,[[["p"]],["t"]]],[11,"load_no_fallback","","",5,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",5,N],[11,"write","","",5,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","amethyst_utils::removal","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","amethyst_utils::scene","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_default","","",14,[[],["result",["string"]]]],[11,"load","","",14,[[["p"]],["t"]]],[11,"load_no_fallback","","",14,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",14,N],[11,"write","","",14,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","amethyst_utils::tag","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_default","","",15,[[],["result",["string"]]]],[11,"load","","",15,[[["p"]],["t"]]],[11,"load_no_fallback","","",15,[[["p"]],["result",["configerror"]]]],[11,"load_bytes","","",15,N],[11,"write","","",15,[[["self"],["p"]],["result",["configerror"]]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"setup","","",7,N],[11,"fetch","","",7,[[["staticaccessor"],["resources"]],["t"]]],[11,"into","amethyst_utils::time_destroy","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"pausable","","",16,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",16,N],[11,"setup","","",16,N],[11,"setup","","",16,N],[11,"run","","",16,N],[11,"reads","","",16,N],[11,"writes","","",16,N],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"pausable","","",17,[[["self"],["v"]],["pausable"]]],[11,"run_now","","",17,N],[11,"setup","","",17,N],[11,"setup","","",17,N],[11,"run","","",17,N],[11,"reads","","",17,N],[11,"writes","","",17,N],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"default","amethyst_utils::auto_fov","",0,[[],["self"]]],[11,"default","amethyst_utils::fps_counter","",2,[[],["self"]]],[11,"default","","",12,[[],["fpscounterbundle"]]],[11,"default","amethyst_utils::ortho_camera","",3,[[],["self"]]],[11,"default","","",4,[[],["cameraortho"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",13,[[],["cameraorthosystem"]]],[11,"default","amethyst_utils::scene","",14,[[],["self"]]],[11,"default","amethyst_utils::tag","",15,[[],["self"]]],[11,"eq","amethyst_utils::ortho_camera","",3,[[["self"],["cameraorthoworldcoordinates"]],["bool"]]],[11,"ne","","",3,[[["self"],["cameraorthoworldcoordinates"]],["bool"]]],[11,"eq","","",4,[[["self"],["cameraortho"]],["bool"]]],[11,"ne","","",4,[[["self"],["cameraortho"]],["bool"]]],[11,"eq","","",5,[[["self"],["cameranormalizemode"]],["bool"]]],[11,"ne","","",5,[[["self"],["cameranormalizemode"]],["bool"]]],[11,"clone","amethyst_utils::auto_fov","",0,[[["self"]],["autofov"]]],[11,"clone","amethyst_utils::ortho_camera","",3,[[["self"]],["cameraorthoworldcoordinates"]]],[11,"clone","","",4,[[["self"]],["cameraortho"]]],[11,"clone","","",5,[[["self"]],["cameranormalizemode"]]],[11,"clone","amethyst_utils::removal","",6,[[["self"]],["removal"]]],[11,"clone","amethyst_utils::tag","",15,[[["self"]],["tag"]]],[11,"clone","amethyst_utils::time_destroy","",8,[[["self"]],["destroyattime"]]],[11,"clone","","",9,[[["self"]],["destroyintime"]]],[11,"fmt","amethyst_utils::ortho_camera","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_utils::removal","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_utils::tag","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","amethyst_utils::time_destroy","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"deserialize","amethyst_utils::auto_fov","",0,[[["__d"]],["result"]]],[11,"deserialize","amethyst_utils::ortho_camera","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","amethyst_utils::removal","",6,[[["__d"]],["result"]]],[11,"deserialize","amethyst_utils::scene","",14,[[["__d"]],["result"]]],[11,"deserialize","amethyst_utils::tag","",15,[[["__d"]],["result"]]],[11,"deserialize","amethyst_utils::time_destroy","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"serialize","amethyst_utils::auto_fov","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_utils::ortho_camera","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_utils::removal","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_utils::scene","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_utils::tag","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","amethyst_utils::time_destroy","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"add_to_entity","amethyst_utils::auto_fov","",0,N],[11,"add_to_entity","amethyst_utils::ortho_camera","",4,N],[11,"add_to_entity","amethyst_utils::removal","",6,N],[11,"add_to_entity","amethyst_utils::scene","",14,N],[11,"load_sub_assets","","",14,N],[11,"add_to_entity","amethyst_utils::tag","",15,N],[11,"run","amethyst_utils::auto_fov","",10,N],[11,"run","amethyst_utils::fps_counter","",11,N],[11,"run","amethyst_utils::ortho_camera","",13,N],[11,"run","amethyst_utils::time_destroy","",16,N],[11,"run","","",17,N],[11,"setup","amethyst_utils::tag","",7,[[["resources"]]]],[11,"fetch","","",7,[[["resources"]],["self"]]],[11,"reads","","",7,[[],["vec",["resourceid"]]]],[11,"writes","","",7,[[],["vec",["resourceid"]]]],[11,"build","amethyst_utils::fps_counter","",12,[[["self"],["dispatcherbuilder"]],["result",["error"]]]]],"paths":[[3,"AutoFov"],[3,"CircularBuffer"],[3,"FPSCounter"],[3,"CameraOrthoWorldCoordinates"],[3,"CameraOrtho"],[4,"CameraNormalizeMode"],[3,"Removal"],[3,"TagFinder"],[3,"DestroyAtTime"],[3,"DestroyInTime"],[3,"AutoFovSystem"],[3,"FPSCounterSystem"],[3,"FPSCounterBundle"],[3,"CameraOrthoSystem"],[3,"BasicScenePrefab"],[3,"Tag"],[3,"DestroyAtTimeSystem"],[3,"DestroyInTimeSystem"]]};
initSearch(searchIndex);
